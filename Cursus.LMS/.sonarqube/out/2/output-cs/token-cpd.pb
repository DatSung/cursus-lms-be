ı®
tD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Seeding\ApplicationDbContextSeed.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
Seeding  '
;' (
public 
static 
class $
ApplicationDbContextSeed ,
{		 
public 

static 
void 
SeedEmailTemplate (
(( )
ModelBuilder) 5
modelBuilder6 B
)B C
{ 
modelBuilder 
. 
Entity 
< 
EmailTemplate )
>) *
(* +
)+ ,
., -
HasData- 4
(4 5
new 
{ 
Id 
= 
Guid 
. 
NewGuid !
(! "
)" #
,# $
TemplateName 
= 
$str -
,- .

SenderName 
= 
$str *
,* +
SenderEmail 
= 
$str :
,: ;
Category 
= 
$str $
,$ %
SubjectLine 
= 
$str 2
,2 3
PreHeaderText 
= 
$str  ;
,; <
PersonalizationTags #
=$ %
$str& ?
,? @
BodyContent 
= 
$str |
,| }
FooterContent 
= 
$str  Q
,Q R
CallToAction 
= 
$str O
,O P
Language 
= 
$str $
,$ %
RecipientType   
=   
$str    *
,  * +
CreateBy!! 
=!! 
$str!! #
,!!# $

CreateTime"" 
="" 
DateTime"" %
.""% &
Now""& )
,"") *
UpdateBy## 
=## 
$str## "
,##" #

UpdateTime$$ 
=$$ 
DateTime$$ %
.$$% &
Now$$& )
,$$) *
Status%% 
=%% 
$num%% 
}&& 
,&& 
new'' 
{(( 
Id)) 
=)) 
Guid)) 
.)) 
NewGuid)) !
())! "
)))" #
,))# $
TemplateName** 
=** 
$str** 4
,**4 5

SenderName++ 
=++ 
$str++ *
,++* +
SenderEmail,, 
=,, 
$str,, :
,,,: ;
Category-- 
=-- 
$str-- %
,--% &
SubjectLine.. 
=.. 
$str.. 3
,..3 4
PreHeaderText// 
=// 
$str//  F
,//F G
PersonalizationTags00 #
=00$ %
$str00& K
,00K L
BodyContent11 
=11 
$str	22 ä
,
22ä ã
FooterContent33 
=33 
$str33  d
,33d e
CallToAction44 
=44 
$"55 
$str55 r
"55r s
,55s t
Language66 
=66 
$str66 $
,66$ %
RecipientType77 
=77 
$str77  *
,77* +
CreateBy88 
=88 
$str88 #
,88# $

CreateTime99 
=99 
DateTime99 %
.99% &
Now99& )
,99) *
UpdateBy:: 
=:: 
$str:: "
,::" #

UpdateTime;; 
=;; 
DateTime;; %
.;;% &
Now;;& )
,;;) *
Status<< 
=<< 
$num<< 
}== 
,== 
new>> 
{?? 
Id@@ 
=@@ 
Guid@@ 
.@@ 
NewGuid@@ !
(@@! "
)@@" #
,@@# $
TemplateNameAA 
=AA 
$strAA 0
,AA0 1

SenderNameBB 
=BB 
$strBB *
,BB* +
SenderEmailCC 
=CC 
$strCC :
,CC: ;
CategoryDD 
=DD 
$strDD #
,DD# $
SubjectLineEE 
=EE 
$strEE 3
,EE3 4
PreHeaderTextFF 
=FF 
$strFF  8
,FF8 9
PersonalizationTagsGG #
=GG$ %
$strGG& @
,GG@ A
BodyContentHH 
=HH 
$strHH t
,HHt u
FooterContentII 
=II 
$strII  Q
,IIQ R
CallToActionJJ 
=JJ 
$strJJ D
,JJD E
LanguageKK 
=KK 
$strKK $
,KK$ %
RecipientTypeLL 
=LL 
$strLL  *
,LL* +
CreateByMM 
=MM 
$strMM #
,MM# $

CreateTimeNN 
=NN 
DateTimeNN %
.NN% &
NowNN& )
,NN) *
UpdateByOO 
=OO 
$strOO "
,OO" #

UpdateTimePP 
=PP 
DateTimePP %
.PP% &
NowPP& )
,PP) *
StatusQQ 
=QQ 
$numQQ 
}RR 
,RR 
newSS 
{TT 
IdUU 
=UU 
GuidUU 
.UU 
NewGuidUU !
(UU! "
)UU" #
,UU# $
TemplateNameVV 
=VV 
$strVV ?
,VV? @

SenderNameWW 
=WW 
$strWW *
,WW* +
SenderEmailXX 
=XX 
$strXX :
,XX: ;
CategoryYY 
=YY 
$strYY %
,YY% &
SubjectLineZZ 
=ZZ 
$strZZ K
,ZZK L
PreHeaderText[[ 
=[[ 
$str[[  M
,[[M N
PersonalizationTags\\ #
=\\$ %
$str\\& ?
,\\? @
BodyContent]] 
=]] 
$str]] I
,]]I J
FooterContent^^ 
=^^ 
$str^^  f
,^^f g
CallToAction__ 
=__ 
$"`` 
$str	`` ∫
"
``∫ ª
,
``ª º
Languageaa 
=aa 
$straa $
,aa$ %
RecipientTypebb 
=bb 
$strbb  ,
,bb, -
CreateBycc 
=cc 
$strcc #
,cc# $

CreateTimedd 
=dd 
DateTimedd %
.dd% &
Nowdd& )
,dd) *
UpdateByee 
=ee 
$stree "
,ee" #

UpdateTimeff 
=ff 
DateTimeff %
.ff% &
Nowff& )
,ff) *
Statusgg 
=gg 
$numgg 
}hh 
,hh 
newii 
{jj 
Idkk 
=kk 
Guidkk 
.kk 
NewGuidkk !
(kk! "
)kk" #
,kk# $
TemplateNamell 
=ll 
$strll /
,ll/ 0

SenderNamemm 
=mm 
$strmm *
,mm* +
SenderEmailnn 
=nn 
$strnn :
,nn: ;
Categoryoo 
=oo 
$stroo %
,oo% &
SubjectLinepp 
=pp 
$strpp 3
,pp3 4
PreHeaderTextqq 
=qq 
$strqq  G
,qqG H
PersonalizationTagsrr #
=rr$ %
$strrr& @
,rr@ A
BodyContentss 
=ss 
$strtt t
,ttt u
FooterContentuu 
=uu 
$struu  Q
,uuQ R
CallToActionvv 
=vv 
$strvv M
,vvM N
Languageww 
=ww 
$strww $
,ww$ %
RecipientTypexx 
=xx 
$strxx  *
,xx* +
CreateByyy 
=yy 
$stryy #
,yy# $

CreateTimezz 
=zz 
DateTimezz %
.zz% &
Nowzz& )
,zz) *
UpdateBy{{ 
={{ 
$str{{ "
,{{" #

UpdateTime|| 
=|| 
DateTime|| %
.||% &
Now||& )
,||) *
Status}} 
=}} 
$num}} 
}~~ 
,~~ 
new 
{
ÄÄ 
Id
ÅÅ 
=
ÅÅ 
Guid
ÅÅ 
.
ÅÅ 
NewGuid
ÅÅ !
(
ÅÅ! "
)
ÅÅ" #
,
ÅÅ# $
TemplateName
ÇÇ 
=
ÇÇ 
$str
ÇÇ 4
,
ÇÇ4 5

SenderName
ÉÉ 
=
ÉÉ 
$str
ÉÉ )
,
ÉÉ) *
SenderEmail
ÑÑ 
=
ÑÑ 
$str
ÑÑ 4
,
ÑÑ4 5
Category
ÖÖ 
=
ÖÖ 
$str
ÖÖ )
,
ÖÖ) *
SubjectLine
ÜÜ 
=
ÜÜ 
$str
ÜÜ /
,
ÜÜ/ 0
PreHeaderText
áá 
=
áá 
$str
áá  0
,
áá0 1!
PersonalizationTags
àà #
=
àà$ %
$str
àà& 2
,
àà2 3
BodyContent
ââ 
=
ââ 
$str
ââ e
,
ââe f
FooterContent
ää 
=
ää 
$str
ää  Q
,
ääQ R
CallToAction
ãã 
=
ãã 
$str
ãã H
,
ããH I
Language
åå 
=
åå 
$str
åå $
,
åå$ %
RecipientType
çç 
=
çç 
$str
çç  *
,
çç* +
CreateBy
éé 
=
éé 
$str
éé #
,
éé# $

CreateTime
èè 
=
èè 
DateTime
èè %
.
èè% &
Now
èè& )
,
èè) *
UpdateBy
êê 
=
êê 
$str
êê "
,
êê" #

UpdateTime
ëë 
=
ëë 
DateTime
ëë %
.
ëë% &
Now
ëë& )
,
ëë) *
Status
íí 
=
íí 
$num
íí 
}
ìì 
,
ìì 
new
îî 
{
ïï 
Id
ññ 
=
ññ 
Guid
ññ 
.
ññ 
NewGuid
ññ !
(
ññ! "
)
ññ" #
,
ññ# $
TemplateName
óó 
=
óó 
$str
óó C
,
óóC D

SenderName
òò 
=
òò 
$str
òò *
,
òò* +
SenderEmail
ôô 
=
ôô 
$str
ôô :
,
ôô: ;
Category
öö 
=
öö 
$str
öö -
,
öö- .
SubjectLine
õõ 
=
õõ 
$str
õõ <
,
õõ< =
PreHeaderText
úú 
=
úú 
$str
úú  >
,
úú> ?!
PersonalizationTags
ùù #
=
ùù$ %
$str
ùù& ?
,
ùù? @
BodyContent
ûû 
=
ûû 
$str
ûû g
,
ûûg h
FooterContent
üü 
=
üü 
$str
üü  Q
,
üüQ R
CallToAction
†† 
=
†† 
$str
†† O
,
††O P
Language
°° 
=
°° 
$str
°° $
,
°°$ %
RecipientType
¢¢ 
=
¢¢ 
$str
¢¢  '
,
¢¢' (
CreateBy
££ 
=
££ 
$str
££ #
,
££# $

CreateTime
§§ 
=
§§ 
DateTime
§§ %
.
§§% &
Now
§§& )
,
§§) *
UpdateBy
•• 
=
•• 
$str
•• "
,
••" #

UpdateTime
¶¶ 
=
¶¶ 
DateTime
¶¶ %
.
¶¶% &
Now
¶¶& )
,
¶¶) *
Status
ßß 
=
ßß 
$num
ßß 
}
®® 
,
®® 
new
©© 
{
™™ 
Id
´´ 
=
´´ 
Guid
´´ 
.
´´ 
NewGuid
´´ !
(
´´! "
)
´´" #
,
´´# $
TemplateName
¨¨ 
=
¨¨ 
$str
¨¨ 8
,
¨¨8 9

SenderName
≠≠ 
=
≠≠ 
$str
≠≠ *
,
≠≠* +
SenderEmail
ÆÆ 
=
ÆÆ 
$str
ÆÆ :
,
ÆÆ: ;
Category
ØØ 
=
ØØ 
$str
ØØ 2
,
ØØ2 3
SubjectLine
∞∞ 
=
∞∞ 
$str
∞∞ >
,
∞∞> ?
PreHeaderText
±± 
=
±± 
$str
±±  B
,
±±B C!
PersonalizationTags
≤≤ #
=
≤≤$ %
$str
≤≤& ?
,
≤≤? @
BodyContent
≥≥ 
=
≥≥ 
$str
≥≥ e
,
≥≥e f
FooterContent
¥¥ 
=
¥¥ 
$str
¥¥  Q
,
¥¥Q R
CallToAction
µµ 
=
µµ 
$str
µµ O
,
µµO P
Language
∂∂ 
=
∂∂ 
$str
∂∂ $
,
∂∂$ %
RecipientType
∑∑ 
=
∑∑ 
$str
∑∑  ,
,
∑∑, -
CreateBy
∏∏ 
=
∏∏ 
$str
∏∏ #
,
∏∏# $

CreateTime
ππ 
=
ππ 
DateTime
ππ %
.
ππ% &
Now
ππ& )
,
ππ) *
UpdateBy
∫∫ 
=
∫∫ 
$str
∫∫ "
,
∫∫" #

UpdateTime
ªª 
=
ªª 
DateTime
ªª %
.
ªª% &
Now
ªª& )
,
ªª) *
Status
ºº 
=
ºº 
$num
ºº 
}
ΩΩ 
,
ΩΩ 
new
ææ 
{
øø 
Id
¿¿ 
=
¿¿ 
Guid
¿¿ 
.
¿¿ 
NewGuid
¿¿ !
(
¿¿! "
)
¿¿" #
,
¿¿# $
TemplateName
¡¡ 
=
¡¡ 
$str
¡¡ 7
,
¡¡7 8

SenderName
¬¬ 
=
¬¬ 
$str
¬¬ *
,
¬¬* +
SenderEmail
√√ 
=
√√ 
$str
√√ :
,
√√: ;
Category
ƒƒ 
=
ƒƒ 
$str
ƒƒ 2
,
ƒƒ2 3
SubjectLine
≈≈ 
=
≈≈ 
$str
≈≈ >
,
≈≈> ?
PreHeaderText
∆∆ 
=
∆∆ 
$str
∆∆  F
,
∆∆F G!
PersonalizationTags
«« #
=
««$ %
$str
««& ?
,
««? @
BodyContent
»» 
=
»» 
$str
»» e
,
»»e f
FooterContent
…… 
=
…… 
$str
……  Q
,
……Q R
CallToAction
   
=
   
$str
   O
,
  O P
Language
ÀÀ 
=
ÀÀ 
$str
ÀÀ $
,
ÀÀ$ %
RecipientType
ÃÃ 
=
ÃÃ 
$str
ÃÃ  ,
,
ÃÃ, -
CreateBy
ÕÕ 
=
ÕÕ 
$str
ÕÕ #
,
ÕÕ# $

CreateTime
ŒŒ 
=
ŒŒ 
DateTime
ŒŒ %
.
ŒŒ% &
Now
ŒŒ& )
,
ŒŒ) *
UpdateBy
œœ 
=
œœ 
$str
œœ "
,
œœ" #

UpdateTime
–– 
=
–– 
DateTime
–– %
.
––% &
Now
––& )
,
––) *
Status
—— 
=
—— 
$num
—— 
}
““ 
)
”” 	
;
””	 

}
‘‘ 
public
⁄⁄ 

static
⁄⁄ 
void
⁄⁄ 
SeedAdminAccount
⁄⁄ '
(
⁄⁄' (
ModelBuilder
⁄⁄( 4
modelBuilder
⁄⁄5 A
)
⁄⁄A B
{
€€ 
var
‹‹ 
studentRoleId
‹‹ 
=
‹‹ 
$str
‹‹ B
;
‹‹B C
var
›› 
instructorRoleId
›› 
=
›› 
$str
›› E
;
››E F
var
ﬁﬁ 
adminRoleId
ﬁﬁ 
=
ﬁﬁ 
$str
ﬁﬁ @
;
ﬁﬁ@ A
var
‡‡ 
roles
‡‡ 
=
‡‡ 
new
‡‡ 
List
‡‡ 
<
‡‡ 
IdentityRole
‡‡ )
>
‡‡) *
{
·· 	
new
‚‚ 
IdentityRole
‚‚ 
{
„„ 
Id
‰‰ 
=
‰‰ 
studentRoleId
‰‰ "
,
‰‰" #
ConcurrencyStamp
ÂÂ  
=
ÂÂ! "
StaticUserRoles
ÂÂ# 2
.
ÂÂ2 3
Student
ÂÂ3 :
,
ÂÂ: ;
Name
ÊÊ 
=
ÊÊ 
StaticUserRoles
ÊÊ &
.
ÊÊ& '
Student
ÊÊ' .
,
ÊÊ. /
NormalizedName
ÁÁ 
=
ÁÁ  
StaticUserRoles
ÁÁ! 0
.
ÁÁ0 1
Student
ÁÁ1 8
,
ÁÁ8 9
}
ËË 
,
ËË 
new
ÈÈ 
IdentityRole
ÈÈ 
{
ÍÍ 
Id
ÎÎ 
=
ÎÎ 
instructorRoleId
ÎÎ %
,
ÎÎ% &
ConcurrencyStamp
ÏÏ  
=
ÏÏ! "
StaticUserRoles
ÏÏ# 2
.
ÏÏ2 3

Instructor
ÏÏ3 =
,
ÏÏ= >
Name
ÌÌ 
=
ÌÌ 
StaticUserRoles
ÌÌ &
.
ÌÌ& '

Instructor
ÌÌ' 1
,
ÌÌ1 2
NormalizedName
ÓÓ 
=
ÓÓ  
StaticUserRoles
ÓÓ! 0
.
ÓÓ0 1

Instructor
ÓÓ1 ;
,
ÓÓ; <
}
ÔÔ 
,
ÔÔ 
new
 
IdentityRole
 
{
ÒÒ 
Id
ÚÚ 
=
ÚÚ 
adminRoleId
ÚÚ  
,
ÚÚ  !
ConcurrencyStamp
ÛÛ  
=
ÛÛ! "
StaticUserRoles
ÛÛ# 2
.
ÛÛ2 3
Admin
ÛÛ3 8
,
ÛÛ8 9
Name
ÙÙ 
=
ÙÙ 
StaticUserRoles
ÙÙ &
.
ÙÙ& '
Admin
ÙÙ' ,
,
ÙÙ, -
NormalizedName
ıı 
=
ıı  
StaticUserRoles
ıı! 0
.
ıı0 1
Admin
ıı1 6
,
ıı6 7
}
ˆˆ 
}
˜˜ 	
;
˜˜	 

modelBuilder
˘˘ 
.
˘˘ 
Entity
˘˘ 
<
˘˘ 
IdentityRole
˘˘ (
>
˘˘( )
(
˘˘) *
)
˘˘* +
.
˘˘+ ,
HasData
˘˘, 3
(
˘˘3 4
roles
˘˘4 9
)
˘˘9 :
;
˘˘: ;
var
¸¸ 
adminUserId
¸¸ 
=
¸¸ 
$str
¸¸ +
;
¸¸+ ,
var
˝˝ 
hasher
˝˝ 
=
˝˝ 
new
˝˝ 
PasswordHasher
˝˝ '
<
˝˝' (
ApplicationUser
˝˝( 7
>
˝˝7 8
(
˝˝8 9
)
˝˝9 :
;
˝˝: ;
var
˛˛ 
	adminUser
˛˛ 
=
˛˛ 
new
˛˛ 
ApplicationUser
˛˛ +
{
ˇˇ 	
Id
ÄÄ 
=
ÄÄ 
adminUserId
ÄÄ 
,
ÄÄ 
Gender
ÅÅ 
=
ÅÅ 
$str
ÅÅ 
,
ÅÅ 
FullName
ÇÇ 
=
ÇÇ 
$str
ÇÇ #
,
ÇÇ# $
	BirthDate
ÉÉ 
=
ÉÉ 
new
ÉÉ 
DateTime
ÉÉ $
(
ÉÉ$ %
$num
ÉÉ% )
,
ÉÉ) *
$num
ÉÉ+ ,
,
ÉÉ, -
$num
ÉÉ. /
)
ÉÉ/ 0
,
ÉÉ0 1
	AvatarUrl
ÑÑ 
=
ÑÑ 
$str
ÑÑ 8
,
ÑÑ8 9
Country
ÖÖ 
=
ÖÖ 
$str
ÖÖ 
,
ÖÖ  
Address
ÜÜ 
=
ÜÜ 
$str
ÜÜ $
,
ÜÜ$ %
	TaxNumber
áá 
=
áá 
$str
áá #
,
áá# $
UserName
àà 
=
àà 
$str
àà (
,
àà( ) 
NormalizedUserName
ââ 
=
ââ  
$str
ââ! 2
,
ââ2 3
Email
ää 
=
ää 
$str
ää %
,
ää% &
NormalizedEmail
ãã 
=
ãã 
$str
ãã /
,
ãã/ 0
EmailConfirmed
åå 
=
åå 
true
åå !
,
åå! "
PasswordHash
çç 
=
çç 
hasher
çç !
.
çç! "
HashPassword
çç" .
(
çç. /
null
çç/ 3
,
çç3 4
$str
çç5 @
)
çç@ A
,
ççA B
SecurityStamp
éé 
=
éé 
Guid
éé  
.
éé  !
NewGuid
éé! (
(
éé( )
)
éé) *
.
éé* +
ToString
éé+ 3
(
éé3 4
)
éé4 5
,
éé5 6
ConcurrencyStamp
èè 
=
èè 
Guid
èè #
.
èè# $
NewGuid
èè$ +
(
èè+ ,
)
èè, -
.
èè- .
ToString
èè. 6
(
èè6 7
)
èè7 8
,
èè8 9
PhoneNumber
êê 
=
êê 
$str
êê &
,
êê& '"
PhoneNumberConfirmed
ëë  
=
ëë! "
true
ëë# '
,
ëë' (
TwoFactorEnabled
íí 
=
íí 
false
íí $
,
íí$ %

LockoutEnd
ìì 
=
ìì 
null
ìì 
,
ìì 
LockoutEnabled
îî 
=
îî 
true
îî !
,
îî! "
AccessFailedCount
ïï 
=
ïï 
$num
ïï  !
,
ïï! "

UpdateTime
ññ 
=
ññ 
new
ññ 
DateTime
ññ %
(
ññ% &
$num
ññ& *
,
ññ* +
$num
ññ, -
,
ññ- .
$num
ññ/ 1
)
ññ1 2
}
óó 	
;
óó	 

modelBuilder
ôô 
.
ôô 
Entity
ôô 
<
ôô 
ApplicationUser
ôô +
>
ôô+ ,
(
ôô, -
)
ôô- .
.
ôô. /
HasData
ôô/ 6
(
ôô6 7
	adminUser
ôô7 @
)
ôô@ A
;
ôôA B
modelBuilder
úú 
.
úú 
Entity
úú 
<
úú 
IdentityUserRole
úú ,
<
úú, -
string
úú- 3
>
úú3 4
>
úú4 5
(
úú5 6
)
úú6 7
.
úú7 8
HasData
úú8 ?
(
úú? @
new
úú@ C
IdentityUserRole
úúD T
<
úúT U
string
úúU [
>
úú[ \
{
ùù 	
RoleId
ûû 
=
ûû 
adminRoleId
ûû  
,
ûû  !
UserId
üü 
=
üü 
adminUserId
üü  
}
†† 	
)
††	 

;
††
 
}
°° 
}¢¢ ﬂ'
tD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\UserManagerRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
{ 
public 

class !
UserManagerRepository &
:' ("
IUserManagerRepository) ?
{ 
private 
readonly 
UserManager $
<$ %
ApplicationUser% 4
>4 5
_userManager6 B
;B C
public !
UserManagerRepository $
($ %
UserManager% 0
<0 1
ApplicationUser1 @
>@ A
userManagerB M
)M N
{ 	
_userManager 
= 
userManager &
;& '
} 	
public 
async 
Task 
< 
ApplicationUser )
>) *
FindByEmailAsync+ ;
(; <
string< B
emailC H
)H I
{ 	
return 
await 
_userManager %
.% &
FindByEmailAsync& 6
(6 7
email7 <
)< =
;= >
} 	
public 
async 
Task 
< 
bool 
> )
CheckIfPhoneNumberExistsAsync  =
(= >
string> D
phoneNumberE P
)P Q
{ 	
return 
await 
_userManager %
.% &
Users& +
.+ ,
AnyAsync, 4
(4 5
u5 6
=>7 9
u: ;
.; <
PhoneNumber< G
==H J
phoneNumberK V
)V W
;W X
} 	
public   
async   
Task   
<   
IdentityResult   (
>  ( )
CreateAsync  * 5
(  5 6
ApplicationUser  6 E
user  F J
,  J K
string  L R
password  S [
)  [ \
{!! 	
return"" 
await"" 
_userManager"" %
.""% &
CreateAsync""& 1
(""1 2
user""2 6
,""6 7
password""8 @
)""@ A
;""A B
}## 	
public%% 
async%% 
Task%% 
<%% 
IdentityResult%% (
>%%( )
AddToRoleAsync%%* 8
(%%8 9
ApplicationUser%%9 H
user%%I M
,%%M N
string%%O U
role%%V Z
)%%Z [
{&& 	
return'' 
await'' 
_userManager'' %
.''% &
AddToRoleAsync''& 4
(''4 5
user''5 9
,''9 :
role''; ?
)''? @
;''@ A
}(( 	
public** 
async** 
Task** 
<** 
ApplicationUser** )
>**) *
FindByIdAsync**+ 8
(**8 9
string**9 ?
userId**@ F
)**F G
{++ 	
return,, 
await,, 
_userManager,, %
.,,% &
FindByIdAsync,,& 3
(,,3 4
userId,,4 :
),,: ;
;,,; <
}-- 	
public.. 
async.. 
Task.. 
<.. 
ApplicationUser.. )
>..) *
FindByPhoneAsync..+ ;
(..; <
string..< B
phoneNumber..C N
)..N O
{// 	
return00 
await00 
_userManager00 %
.00% &
Users00& +
.00+ ,
FirstOrDefaultAsync00, ?
(00? @
u00@ A
=>00B D
u00E F
.00F G
PhoneNumber00G R
==00S U
phoneNumber00V a
)00a b
;00b c
}11 	
public33 
Task33 
<33 
List33 
<33 
ApplicationUser33 (
>33( )
>33) *
GetInstructorUser33+ <
(33< =
)33= >
{44 	
throw55 
new55 #
NotImplementedException55 -
(55- .
)55. /
;55/ 0
}66 	
public88 
Task88 
<88 
List88 
<88 
ApplicationUser88 (
>88( )
>88) *
GetStudentUser88+ 9
(889 :
)88: ;
{99 	
throw:: 
new:: #
NotImplementedException:: -
(::- .
)::. /
;::/ 0
};; 	
public== 
async== 
Task== 
<== 
IEnumerable== %
<==% &
ApplicationUser==& 5
>==5 6
>==6 7
GetUsersInRoleAsync==8 K
(==K L
string==L R
role==S W
)==W X
{>> 	
return?? 
await?? 
_userManager?? %
.??% &
GetUsersInRoleAsync??& 9
(??9 :
role??: >
)??> ?
;??? @
}@@ 	
}AA 
}BB î4
iD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\UnitOfWork.cs
	namespace		 	
Cursus		
 
.		 
LMS		 
.		 

DataAccess		 
.		  

Repository		  *
{

 
public 

class 

UnitOfWork 
: 
IUnitOfWork )
{ 
private 
readonly  
ApplicationDbContext -
_context. 6
;6 7
public 
IStudentRepository !
StudentRepository" 3
{4 5
get6 9
;9 :
set; >
;> ?
}@ A
public !
IInstructorRepository $ 
InstructorRepository% 9
{: ;
get< ?
;? @
setA D
;D E
}F G
public 
ICategoryRepository "
CategoryRepository# 5
{6 7
get8 ;
;; <
}= >
public $
IEmailTemplateRepository '#
EmailTemplateRepository( ?
{@ A
getB E
;E F
}G H
public "
IUserManagerRepository %!
UserManagerRepository& ;
{< =
get> A
;A B
}C D
public (
IInstructorCommentRepository +'
InstructorCommentRepository, G
{H I
getJ M
;M N
}O P
public "
IPaymentCardRepository %!
PaymentCardRepository& ;
{< =
get> A
;A B
setC F
;F G
}H I
public 
ICourseRepository  
CourseRepository! 1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
public '
IInstructorRatingRepository *&
InstructorRatingRepository+ E
{F G
getH K
;K L
setM P
;P Q
}R S
public $
ICourseVersionRepository '#
CourseVersionRepository( ?
{@ A
getB E
;E F
}G H
public +
ICourseSectionVersionRepository .*
CourseSectionVersionRepository/ M
{N O
getP S
;S T
}U V
public ,
 ISectionDetailsVersionRepository /+
SectionDetailsVersionRepository0 O
{P Q
getR U
;U V
}W X
public *
ICourseVersionStatusRepository -)
CourseVersionStatusRepository. K
{L M
getN Q
;Q R
}S T
public +
ICourseVersionCommentRepository .*
CourseVersionCommentRepository/ M
{N O
getP S
;S T
}U V
public $
IStudentCourseRepository '#
StudentCourseRepository( ?
{@ A
getB E
;E F
}G H
public 
ILevelRepository 
LevelRepository  /
{0 1
get2 5
;5 6
}7 8
public 

UnitOfWork 
(  
ApplicationDbContext .
context/ 6
,6 7
UserManager8 C
<C D
ApplicationUserD S
>S T
userManagerU `
)` a
{   	
_context!! 
=!! 
context!! 
;!! 
StudentRepository"" 
="" 
new""  #
StudentRepository""$ 5
(""5 6
_context""6 >
)""> ?
;""? @ 
InstructorRepository##  
=##! "
new### & 
InstructorRepository##' ;
(##; <
_context##< D
)##D E
;##E F!
PaymentCardRepository$$ !
=$$" #
new$$$ '!
PaymentCardRepository$$( =
($$= >
_context$$> F
)$$F G
;$$G H
CategoryRepository%% 
=%%  
new%%! $
CategoryRepository%%% 7
(%%7 8
_context%%8 @
)%%@ A
;%%A B#
EmailTemplateRepository&& #
=&&$ %
new&&& )#
EmailTemplateRepository&&* A
(&&A B
_context&&B J
)&&J K
;&&K L!
UserManagerRepository'' !
=''" #
new''$ '!
UserManagerRepository''( =
(''= >
userManager''> I
)''I J
;''J K'
InstructorCommentRepository(( '
=((( )
new((* -'
InstructorCommentRepository((. I
(((I J
_context((J R
)((R S
;((S T&
InstructorRatingRepository)) &
=))' (
new))) ,&
InstructorRatingRepository))- G
())G H
_context))H P
)))P Q
;))Q R
CourseRepository** 
=** 
new** "
CourseRepository**# 3
(**3 4
_context**4 <
)**< =
;**= >#
CourseVersionRepository++ #
=++$ %
new++& )#
CourseVersionRepository++* A
(++A B
_context++B J
)++J K
;++K L*
CourseSectionVersionRepository,, *
=,,+ ,
new,,- 0*
CourseSectionVersionRepository,,1 O
(,,O P
_context,,P X
),,X Y
;,,Y Z+
SectionDetailsVersionRepository-- +
=--, -
new--. 1+
SectionDetailsVersionRepository--2 Q
(--Q R
_context--R Z
)--Z [
;--[ \)
CourseVersionStatusRepository.. )
=..* +
new.., /)
CourseVersionStatusRepository..0 M
(..M N
_context..N V
)..V W
;..W X*
CourseVersionCommentRepository// *
=//+ ,
new//- 0*
CourseVersionCommentRepository//1 O
(//O P
_context//P X
)//X Y
;//Y Z#
StudentCourseRepository00 #
=00$ %
new00& )#
StudentCourseRepository00* A
(00A B
_context00B J
)00J K
;00K L
LevelRepository11 
=11 
new11 !
LevelRepository11" 1
(111 2
_context112 :
)11: ;
;11; <
}22 	
public44 
async44 
Task44 
<44 
int44 
>44 
	SaveAsync44 (
(44( )
)44) *
{55 	
return66 
await66 
_context66 !
.66! "
SaveChangesAsync66" 2
(662 3
)663 4
;664 5
}77 	
}88 
}99 ¨
pD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\StudentRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class 
StudentRepository 
:  

Repository! +
<+ ,
Student, 3
>3 4
,4 5
IStudentRepository6 H
{ 
private		 
readonly		  
ApplicationDbContext		 )
_context		* 2
;		2 3
public 

StudentRepository 
(  
ApplicationDbContext 1
context2 9
)9 :
:; <
base= A
(A B
contextB I
)I J
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
Student 
student &
)& '
{ 
_context 
. 
Students 
. 
Update  
(  !
student! (
)( )
;) *
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
Student( /
>/ 0
students1 9
)9 :
{ 
_context 
. 
Students 
. 
UpdateRange %
(% &
students& .
). /
;/ 0
} 
public 

async 
Task 
< 
Student 
> 
AddAsync '
(' (
Student( /
student0 7
)7 8
{ 
var 
entityEntry 
= 
await 
_context  (
.( )
Students) 1
.1 2
AddAsync2 :
(: ;
student; B
)B C
;C D
return 
entityEntry 
. 
Entity !
;! "
} 
} ≈
vD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\StudentCourseRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class #
StudentCourseRepository $
:% &

Repository' 1
<1 2
StudentCourse2 ?
>? @
,@ A$
IStudentCourseRepositoryB Z
{ 
private		 
readonly		  
ApplicationDbContext		 )
_context		* 2
;		2 3
public 
#
StudentCourseRepository "
(" # 
ApplicationDbContext# 7
context8 ?
)? @
:A B
baseC G
(G H
contextH O
)O P
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
StudentCourse $
studentCourse% 2
)2 3
{ 
_context 
. 
StudentCourses 
.  
Update  &
(& '
studentCourse' 4
)4 5
;5 6
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
StudentCourse( 5
>5 6
studentCourses7 E
)E F
{ 
_context 
. 
StudentCourses 
.  
UpdateRange  +
(+ ,
studentCourses, :
): ;
;; <
} 
} Ô
~D:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\SectionDetailsVersionRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class +
SectionDetailsVersionRepository ,
:- .

Repository/ 9
<9 :!
SectionDetailsVersion: O
>O P
,P Q,
 ISectionDetailsVersionRepositoryR r
{		 
private

 
readonly

  
ApplicationDbContext

 )
_context

* 2
;

2 3
public 
+
SectionDetailsVersionRepository *
(* + 
ApplicationDbContext+ ?
context@ G
)G H
:I J
baseK O
(O P
contextP W
)W X
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( !
SectionDetailsVersion ,!
sectionDetailsVersion- B
)B C
{ 
_context 
. "
SectionDetailsVersions '
.' (
Update( .
(. /!
sectionDetailsVersion/ D
)D E
;E F
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (!
SectionDetailsVersion( =
>= >"
sectionDetailsVersions? U
)U V
{ 
_context 
. "
SectionDetailsVersions '
.' (
UpdateRange( 3
(3 4"
sectionDetailsVersions4 J
)J K
;K L
} 
public 

async 
Task 
< 
List 
< !
SectionDetailsVersion 0
>0 1
?1 2
>2 3@
4GetSectionDetailsVersionsOfCourseSectionVersionAsync4 h
( 
Guid "
courseSectionVersionId #
,# $
bool 
? 
asNoTracking 
) 
{   
return!! 
asNoTracking!! 
is!! 
true!! #
?"" 
await"" 
_context"" 
."" "
SectionDetailsVersions"" 3
.## 
AsNoTracking## 
(## 
)## 
.$$ 
Where$$ 
($$ 
x$$ 
=>$$ 
x$$ 
.$$ "
CourseSectionVersionId$$ 4
==$$5 7"
courseSectionVersionId$$8 N
)$$N O
.%% 
ToListAsync%% 
(%% 
)%% 
:&& 
await&& 
_context&& 
.&& "
SectionDetailsVersions&& 3
.'' 
Where'' 
('' 
x'' 
=>'' 
x'' 
.'' "
CourseSectionVersionId'' 4
==''5 7"
courseSectionVersionId''8 N
)''N O
.(( 
ToListAsync(( 
((( 
)(( 
;(( 
})) 
public++ 

async++ 
Task++ 
<++ !
SectionDetailsVersion++ +
?+++ ,
>++, -(
GetSectionDetailsVersionById++. J
(++J K
Guid++K O
	detailsId++P Y
)++Y Z
{,, 
return-- 
await-- 
_context-- 
.-- "
SectionDetailsVersions-- 4
.--4 5
FirstOrDefaultAsync--5 H
(--H I
x--I J
=>--K M
x--N O
.--O P
Id--P R
==--S U
	detailsId--V _
)--_ `
;--` a
}.. 
}// ≠0
iD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\Repository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public		 
class		 

Repository		 
<		 
T		 
>		 
:		 
IRepository		 (
<		( )
T		) *
>		* +
where		, 1
T		2 3
:		4 5
class		6 ;
{

 
private 
readonly  
ApplicationDbContext )
_context* 2
;2 3
internal 
DbSet 
< 
T 
> 
dbSet 
; 
public 


Repository 
(  
ApplicationDbContext *
context+ 2
)2 3
{ 
_context 
= 
context 
; 
dbSet 
= 
_context 
. 
Set 
< 
T 
> 
(  
)  !
;! "
} 
public 

async 
Task 
AddAsync 
( 
T  
entity! '
)' (
{ 
await 
dbSet 
. 
AddAsync 
( 
entity #
)# $
;$ %
} 
public 

async 
Task 
AddRangeAsync #
(# $
IEnumerable$ /
</ 0
T0 1
>1 2
entities3 ;
); <
{ 
await 
dbSet 
. 
AddRangeAsync !
(! "
entities" *
)* +
;+ ,
} 
public$$ 

async$$ 
Task$$ 
<$$ 
T$$ 
?$$ 
>$$ 
GetAsync$$ "
($$" #

Expression$$# -
<$$- .
Func$$. 2
<$$2 3
T$$3 4
,$$4 5
bool$$6 :
>$$: ;
>$$; <
filter$$= C
,$$C D
string$$E K
?$$K L
includeProperties$$M ^
=$$_ `
null$$a e
)$$e f
{%% 

IQueryable&& 
<&& 
T&& 
>&& 
query&& 
=&& 
dbSet&& #
;&&# $
query'' 
='' 
query'' 
.'' 
Where'' 
('' 
filter'' "
)''" #
;''# $
if)) 

()) 
!)) 
string)) 
.)) 
IsNullOrEmpty)) !
())! "
includeProperties))" 3
)))3 4
)))4 5
{** 	
foreach++ 
(++ 
var++ 
property++ !
in++" $
includeProperties++% 6
.++6 7
Split++7 <
(++< =
new++= @
char++A E
[++E F
]++F G
{++H I
$char++J M
}++N O
,++O P
StringSplitOptions++Q c
.++c d
RemoveEmptyEntries++d v
)++v w
)++w x
{,, 
query-- 
=-- 
query-- 
.-- 
Include-- %
(--% &
property--& .
)--. /
;--/ 0
}.. 
}// 	
return11 
await11 
query11 
.11 
FirstOrDefaultAsync11 .
(11. /
)11/ 0
;110 1
}22 
public== 

async== 
Task== 
<== 
IEnumerable== !
<==! "
T==" #
>==# $
>==$ %
GetAllAsync==& 1
(==1 2

Expression==2 <
<==< =
Func=== A
<==A B
T==B C
,==C D
bool==E I
>==I J
>==J K
?==K L
filter==M S
===T U
null==V Z
,==Z [
string>> 
?>> 
includeProperties>> !
=>>" #
null>>$ (
)>>( )
{?? 

IQueryable@@ 
<@@ 
T@@ 
>@@ 
query@@ 
=@@ 
dbSet@@ #
;@@# $
ifBB 

(BB 
filterBB 
!=BB 
nullBB 
)BB 
{CC 	
queryDD 
=DD 
queryDD 
.DD 
WhereDD 
(DD  
filterDD  &
)DD& '
;DD' (
}EE 	
ifGG 

(GG 
!GG 
stringGG 
.GG 
IsNullOrEmptyGG !
(GG! "
includePropertiesGG" 3
)GG3 4
)GG4 5
{HH 	
foreachII 
(II 
varII 
propertyII !
inII" $
includePropertiesII% 6
.II6 7
SplitII7 <
(II< =
newII= @
charIIA E
[IIE F
]IIF G
{IIH I
$charIIJ M
}IIN O
,IIO P
StringSplitOptionsIIQ c
.IIc d
RemoveEmptyEntriesIId v
)IIv w
)IIw x
{JJ 
queryKK 
=KK 
queryKK 
.KK 
IncludeKK %
(KK% &
propertyKK& .
)KK. /
;KK/ 0
}LL 
}MM 	
returnOO 
awaitOO 
queryOO 
.OO 
ToListAsyncOO &
(OO& '
)OO' (
;OO( )
}PP 
publicRR 

voidRR 
RemoveRR 
(RR 
TRR 
entityRR 
)RR  
{SS 
dbSetTT 
.TT 
RemoveTT 
(TT 
entityTT 
)TT 
;TT 
}UU 
publicWW 

voidWW 
RemoveRangeWW 
(WW 
IEnumerableWW '
<WW' (
TWW( )
>WW) *
entitiesWW+ 3
)WW3 4
{XX 
dbSetYY 
.YY 
RemoveRangeYY 
(YY 
entitiesYY "
)YY" #
;YY# $
}ZZ 
}[[ ˇ
tD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\PaymentCardRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
{ 
public		 

class		 !
PaymentCardRepository		 &
:		' (

Repository		) 3
<		3 4
PaymentCard		4 ?
>		? @
,		@ A"
IPaymentCardRepository		B X
{

 
private 
readonly  
ApplicationDbContext -
_context. 6
;6 7
public !
PaymentCardRepository $
($ % 
ApplicationDbContext% 9
context: A
)A B
:C D
baseE I
(I J
contextJ Q
)Q R
{ 	
_context 
= 
context 
; 
} 	
public 
void 
Update 
( 
PaymentCard &
paymentCard' 2
)2 3
{ 	
_context 
. 
PaymentCards !
.! "
Update" (
(( )
paymentCard) 4
)4 5
;5 6
} 	
public 
void 
UpdateRange 
(  
IEnumerable  +
<+ ,
PaymentCard, 7
>7 8
paymentCards9 E
)E F
{ 	
_context 
. 
PaymentCards !
.! "
UpdateRange" -
(- .
paymentCards. :
): ;
;; <
} 	
public 
async 
Task 
< 
PaymentCard %
?% &
>& '!
CardNumberExistsAsync( =
(= >
string> D

cardNumberE O
)O P
{ 	
return 
await 
_context "
." #
PaymentCards# /
./ 0
FirstOrDefaultAsync0 C
(C D
xD E
=>F H
xI J
.J K

CardNumberK U
==V X

cardNumberY c
)c d
;d e
} 	
public!! 
async!! 
Task!! 
<!! 
PaymentCard!! %
?!!% &
>!!& '
GetCardByUserId!!( 7
(!!7 8
string!!8 >
id!!? A
)!!A B
{"" 	
return## 
await## 
_context## !
.##! "
PaymentCards##" .
.##. /
FirstOrDefaultAsync##/ B
(##B C
x##C D
=>##E G
x##H I
.##I J
UserId##J P
==##Q S
id##T V
)##V W
;##W X
}$$ 	
public&& 
async&& 
Task&& 
<&& 
PaymentCard&& %
>&&% &
AddAsync&&' /
(&&/ 0
PaymentCard&&0 ;
paymentCard&&< G
)&&G H
{'' 	
var(( 
entityEntry(( 
=(( 
await(( #
_context(($ ,
.((, -
PaymentCards((- 9
.((9 :
AddAsync((: B
(((B C
paymentCard((C N
)((N O
;((O P
return)) 
entityEntry)) 
.)) 
Entity)) %
;))% &
}** 	
}-- 
}.. Û
nD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\LevelRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class 
LevelRepository 
: 

Repository )
<) *
Level* /
>/ 0
,0 1
ILevelRepository2 B
{		 
private

 
readonly

  
ApplicationDbContext

 )
_context

* 2
;

2 3
public 

LevelRepository 
(  
ApplicationDbContext /
context0 7
)7 8
:9 :
base; ?
(? @
context@ G
)G H
{ 
_context 
= 
context 
; 
} 
public 

async 
Task 
< 
Level 
> 
GetLevelById )
() *
Guid* .
levelId/ 6
)6 7
{ 
return 
await 
_context 
. 
Levels $
.$ %
FirstOrDefaultAsync% 8
(8 9
x9 :
=>; =
x> ?
.? @
Id@ B
==C E
levelIdF M
)M N
;N O
} 
public 

void 
Update 
( 
Level 
level "
)" #
{ 
_context 
. 
Levels 
. 
Update 
( 
level $
)$ %
;% &
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
Level( -
>- .
levels/ 5
)5 6
{ 
_context 
. 
Levels 
. 
UpdateRange #
(# $
levels$ *
)* +
;+ ,
} 
}   ∂
sD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\InstructorRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public		 
class		  
InstructorRepository		 !
:		" #

Repository		$ .
<		. /

Instructor		/ 9
>		9 :
,		: ;!
IInstructorRepository		< Q
{

 
private 
readonly  
ApplicationDbContext )
_context* 2
;2 3
public 
 
InstructorRepository 
(   
ApplicationDbContext  4
context5 <
)< =
:> ?
base@ D
(D E
contextE L
)L M
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 

Instructor !

instructor" ,
), -
{ 
_context 
. 
Instructors 
. 
Update #
(# $

instructor$ .
). /
;/ 0
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (

Instructor( 2
>2 3
instructors4 ?
)? @
{ 
_context 
. 
Instructors 
. 
UpdateRange (
(( )
instructors) 4
)4 5
;5 6
} 
public 

async 
Task 
< 

Instructor  
?  !
>! "
GetById# *
(* +
Guid+ /
id0 2
)2 3
{ 
return 
await 
_context 
. 
Instructors )
.) *
Include* 1
(1 2
$str2 C
)C D
.D E
FirstOrDefaultAsyncE X
(X Y
xY Z
=>[ ]
x^ _
._ `
InstructorId` l
==m o
idp r
)r s
;s t
} 
public   

async   
Task   
<   !
IDbContextTransaction   +
>  + ,!
BeginTransactionAsync  - B
(  B C
)  C D
{!! 
return"" 
await"" 
_context"" 
."" 
Database"" &
.""& '!
BeginTransactionAsync""' <
(""< =
)""= >
;""> ?
}## 
}$$ ˘
zD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\InstructorCommentRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class '
InstructorCommentRepository (
:) *

Repository+ 5
<5 6
InstructorComment6 G
>G H
,H I(
IInstructorCommentRepositoryJ f
{ 
private		 
readonly		  
ApplicationDbContext		 )
_context		* 2
;		2 3
public 
'
InstructorCommentRepository &
(& ' 
ApplicationDbContext' ;
context< C
)C D
:E F
baseG K
(K L
contextL S
)S T
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
InstructorComment (
instructorComment) :
): ;
{ 
_context 
. 
InstructorComments #
.# $
Update$ *
(* +
instructorComment+ <
)< =
;= >
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
InstructorComment( 9
>9 :
instructorComments; M
)M N
{ 
_context 
. 
InstructorComments #
.# $
UpdateRange$ /
(/ 0
instructorComments0 B
)B C
;C D
} 
} ™

vD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\EmailTemplateRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class #
EmailTemplateRepository $
:% &

Repository' 1
<1 2
EmailTemplate2 ?
>? @
,@ A$
IEmailTemplateRepositoryB Z
{ 
private		 
readonly		  
ApplicationDbContext		 )
_context		* 2
;		2 3
public 
#
EmailTemplateRepository "
(" # 
ApplicationDbContext# 7
context8 ?
)? @
:A B
baseC G
(G H
contextH O
)O P
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
EmailTemplate $
emailTemplate% 2
)2 3
{ 
_context 
. 
EmailTemplates 
.  
Update  &
(& '
emailTemplate' 4
)4 5
;5 6
} 
} «
zD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\IInstructorRatingRepository.cs
public 
class &
InstructorRatingRepository '
:( )

Repository* 4
<4 5
InstructorRating5 E
>E F
,F G'
IInstructorRatingRepositoryH c
{ 
private 
readonly  
ApplicationDbContext )
_context* 2
;2 3
public

 
&
InstructorRatingRepository

 %
(

% & 
ApplicationDbContext

& :
context

; B
)

B C
:

D E
base

F J
(

J K
context

K R
)

R S
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
InstructorRating '
instructorRating( 8
)8 9
{ 
_context 
. 
InstructorRatings "
." #
Update# )
() *
instructorRating* :
): ;
;; <
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
InstructorRating( 8
>8 9
instructorRatings: K
)K L
{ 
_context 
. 
InstructorRatings "
." #
UpdateRange# .
(. /
instructorRatings/ @
)@ A
;A B
} 
} Ä
|D:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\CourseVersionStatusRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class )
CourseVersionStatusRepository *
:+ ,

Repository- 7
<7 8
CourseVersionStatus8 K
>K L
,L M*
ICourseVersionStatusRepositoryN l
{		 
private

 
readonly

  
ApplicationDbContext

 )
_context

* 2
;

2 3
public 
)
CourseVersionStatusRepository (
(( ) 
ApplicationDbContext) =
context> E
)E F
:G H
baseI M
(M N
contextN U
)U V
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
CourseVersionStatus *
courseVersionStatus+ >
)> ?
{ 
_context 
. 
CourseVersionStatus $
.$ %
Update% +
(+ ,
courseVersionStatus, ?
)? @
;@ A
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
CourseVersionStatus( ;
>; < 
courseVersionsStatus= Q
)Q R
{ 
_context 
. 
CourseVersionStatus $
.$ %
UpdateRange% 0
(0 1 
courseVersionsStatus1 E
)E F
;F G
} 
public 

async 
Task 
< 
CourseVersionStatus )
?) *
>* ++
GetCourseVersionStatusByIdAsync, K
(K L
GuidL P!
courseVersionStatusIdQ f
)f g
{ 
return 
await 
_context 
. 
CourseVersionStatus 1
.1 2
FirstOrDefaultAsync2 E
(E F
xF G
=>H J
xK L
.L M
IdM O
==P R!
courseVersionStatusIdS h
)h i
;i j
} 
} ˇ
vD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\CourseVersionRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class #
CourseVersionRepository $
:% &

Repository' 1
<1 2
CourseVersion2 ?
>? @
,@ A$
ICourseVersionRepositoryB Z
{		 
private

 
readonly

  
ApplicationDbContext

 )
_context

* 2
;

2 3
public 
#
CourseVersionRepository "
(" # 
ApplicationDbContext# 7
context8 ?
)? @
:A B
baseC G
(G H
contextH O
)O P
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
CourseVersion $
courseVersion% 2
)2 3
{ 
_context 
. 
CourseVersions 
.  
Update  &
(& '
courseVersion' 4
)4 5
;5 6
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
CourseVersion( 5
>5 6
courseVersions7 E
)E F
{ 
_context 
. 
CourseVersions 
.  
UpdateRange  +
(+ ,
courseVersions, :
): ;
;; <
} 
public 

async 
Task 
< 
CourseVersion #
?# $
>$ %!
GetCourseVersionAsync& ;
( 
Guid 
courseVersionId 
, 
bool 
? 
asNoTracking 
= 
false "
) 
{   
return!! 
asNoTracking!! 
is!! 
not!! "
null!!# '
?"" 
await"" 
_context"" 
."" 
CourseVersions"" +
.## 
AsNoTracking## 
(## 
)## 
.$$ 
FirstOrDefaultAsync$$ $
($$$ %
x$$% &
=>$$' )
x$$* +
.$$+ ,
Id$$, .
==$$/ 1
courseVersionId$$2 A
)$$A B
:%% 
await%% 
_context%% 
.%% 
CourseVersions%% +
.&& 
FirstOrDefaultAsync&& $
(&&$ %
x&&% &
=>&&' )
x&&* +
.&&+ ,
Id&&, .
==&&/ 1
courseVersionId&&2 A
)&&A B
;&&B C
}'' 
public)) 

async)) 
Task)) 
<)) 
int)) 
>)) '
GetTotalCourseVersionsAsync)) 6
())6 7
Guid))7 ;
?)); <
courseId))= E
)))E F
{** 
return++ 
courseId++ 
is++ 
not++ 
null++ #
?,, 
await,, 
_context,, 
.,, 
CourseVersions,, +
.,,+ ,

CountAsync,,, 6
(,,6 7
x,,7 8
=>,,9 ;
x,,< =
.,,= >
CourseId,,> F
==,,G I
courseId,,J R
),,R S
:-- 
$num-- 
;-- 
}.. 
}// ê
}D:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\CourseVersionCommentRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class *
CourseVersionCommentRepository +
:, -

Repository. 8
<8 9 
CourseVersionComment9 M
>M N
,N O+
ICourseVersionCommentRepositoryP o
{		 
private

 
readonly

  
ApplicationDbContext

 )
_context

* 2
;

2 3
public 
*
CourseVersionCommentRepository )
() * 
ApplicationDbContext* >
context? F
)F G
:H I
baseJ N
(N O
contextO V
)V W
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
(  
CourseVersionComment + 
courseVersionComment, @
)@ A
{ 
_context 
. !
CourseVersionComments &
.& '
Update' -
(- . 
courseVersionComment. B
)B C
;C D
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' ( 
CourseVersionComment( <
>< =!
courseVersionComments> S
)S T
{ 
_context 
. !
CourseVersionComments &
.& '
UpdateRange' 2
(2 3!
courseVersionComments3 H
)H I
;I J
} 
public 

async 
Task 
<  
CourseVersionComment *
?* +
>+ ,'
GetCourseVersionCommentById- H
(H I
GuidI M"
courseversioncommentIdN d
)d e
{ 
return 
await 
_context 
. !
CourseVersionComments 3
.3 4
FirstOrDefaultAsync4 G
(G H
xH I
=>J L
xM N
.N O
IdO Q
==R T"
courseversioncommentIdU k
)k l
;l m
} 
} ˝
}D:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\CourseSectionVersionRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class *
CourseSectionVersionRepository +
:, -

Repository. 8
<8 9 
CourseSectionVersion9 M
>M N
,N O+
ICourseSectionVersionRepositoryP o
{		 
private

 
readonly

  
ApplicationDbContext

 )
_context

* 2
;

2 3
public 
*
CourseSectionVersionRepository )
() * 
ApplicationDbContext* >
context? F
)F G
:H I
baseJ N
(N O
contextO V
)V W
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
(  
CourseSectionVersion + 
courseSectionVersion, @
)@ A
{ 
_context 
. !
CourseSectionVersions &
.& '
Update' -
(- . 
courseSectionVersion. B
)B C
;C D
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' ( 
CourseSectionVersion( <
>< =!
courseSectionVersions> S
)S T
{ 
_context 
. !
CourseSectionVersions &
.& '
UpdateRange' 2
(2 3!
courseSectionVersions3 H
)H I
;I J
} 
public 

async 
Task 
< 
List 
<  
CourseSectionVersion /
>/ 0
?0 1
>1 28
,GetCourseSectionVersionsOfCourseVersionAsync3 _
( 
Guid 
courseVersionId 
, 
bool 
? 
asNoTracking 
= 
false "
) 
{   
return!! 
asNoTracking!! 
is!! 
true!! #
?"" 
await"" 
_context"" 
."" !
CourseSectionVersions"" 2
.## 
AsNoTracking## 
(## 
)## 
.$$ 
Where$$ 
($$ 
x$$ 
=>$$ 
x$$ 
.$$ 
CourseVersionId$$ -
==$$. 0
courseVersionId$$1 @
)$$@ A
.%% 
ToListAsync%% 
(%% 
)%% 
:&& 
await&& 
_context&& 
.&& !
CourseSectionVersions&& 2
.'' 
Where'' 
('' 
x'' 
=>'' 
x'' 
.'' 
CourseVersionId'' -
==''. 0
courseVersionId''1 @
)''@ A
.(( 
ToListAsync(( 
((( 
)(( 
;(( 
})) 
}** ˚
oD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\CourseRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
{ 
public 

class 
CourseRepository !
:" #

Repository$ .
<. /
Course/ 5
>5 6
,6 7
ICourseRepository8 I
{		 
private 
readonly  
ApplicationDbContext -
_context. 6
;6 7
public 
CourseRepository 
(   
ApplicationDbContext  4
context5 <
)< =
:> ?
base@ D
(D E
contextE L
)L M
{ 	
_context 
= 
context 
; 
} 	
public 
void 
Update 
( 
Course !
course" (
)( )
{ 	
_context 
. 
Courses 
. 
Update #
(# $
course$ *
)* +
;+ ,
} 	
public 
void 
UpdateRange 
(  
IEnumerable  +
<+ ,
Course, 2
>2 3
courses4 ;
); <
{ 	
_context 
. 
Courses 
. 
UpdateRange (
(( )
courses) 0
)0 1
;1 2
} 	
} 
} £
qD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\CategoryRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class 
CategoryRepository 
:  

Repository! +
<+ ,
Category, 4
>4 5
,5 6
ICategoryRepository7 J
{		 
private 
readonly  
ApplicationDbContext )
_context* 2
;2 3
public 

CategoryRepository 
(  
ApplicationDbContext 2
context3 :
): ;
:< =
base> B
(B C
contextC J
)J K
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
Category 
category  (
)( )
{ 
_context 
. 

Categories 
. 
Update "
(" #
category# +
)+ ,
;, -
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
Category( 0
>0 1

categories2 <
)< =
{ 
_context 
. 

Categories 
. 
UpdateRange '
(' (

categories( 2
)2 3
;3 4
} 
public 

async 
Task 
< 
Category 
>  
GetCategoryByIdAsync  4
(4 5
Guid5 9
id: <
)< =
{ 
return 
await 
_context 
. 

Categories (
.( )
FirstOrDefaultAsync) <
(< =
c= >
=>? A
cB C
.C D
IdD F
==G I
idJ L
)L M
;M N
} 
} ›¸
àD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240705052116_AddMoreColumnForLevelTable.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{		 
public 

partial 
class &
AddMoreColumnForLevelTable 3
:4 5
	Migration6 ?
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table   
:   
$str   '
,  ' (
	keyColumn!! 
:!! 
$str!! 
,!!  
keyValue"" 
:"" 
new"" 
Guid"" "
(""" #
$str""# I
)""I J
)""J K
;""K L
migrationBuilder$$ 
.$$ 

DeleteData$$ '
($$' (
table%% 
:%% 
$str%% '
,%%' (
	keyColumn&& 
:&& 
$str&& 
,&&  
keyValue'' 
:'' 
new'' 
Guid'' "
(''" #
$str''# I
)''I J
)''J K
;''K L
migrationBuilder)) 
.)) 

DeleteData)) '
())' (
table** 
:** 
$str** '
,**' (
	keyColumn++ 
:++ 
$str++ 
,++  
keyValue,, 
:,, 
new,, 
Guid,, "
(,," #
$str,,# I
),,I J
),,J K
;,,K L
migrationBuilder.. 
... 

DeleteData.. '
(..' (
table// 
:// 
$str// '
,//' (
	keyColumn00 
:00 
$str00 
,00  
keyValue11 
:11 
new11 
Guid11 "
(11" #
$str11# I
)11I J
)11J K
;11K L
migrationBuilder33 
.33 

DeleteData33 '
(33' (
table44 
:44 
$str44 '
,44' (
	keyColumn55 
:55 
$str55 
,55  
keyValue66 
:66 
new66 
Guid66 "
(66" #
$str66# I
)66I J
)66J K
;66K L
migrationBuilder88 
.88 

DeleteData88 '
(88' (
table99 
:99 
$str99 '
,99' (
	keyColumn:: 
::: 
$str:: 
,::  
keyValue;; 
:;; 
new;; 
Guid;; "
(;;" #
$str;;# I
);;I J
);;J K
;;;K L
migrationBuilder== 
.== 
	AddColumn== &
<==& '
string==' -
>==- .
(==. /
name>> 
:>> 
$str>>  
,>>  !
table?? 
:?? 
$str?? 
,??  
type@@ 
:@@ 
$str@@ %
,@@% &
nullableAA 
:AA 
trueAA 
)AA 
;AA  
migrationBuilderCC 
.CC 
	AddColumnCC &
<CC& '
DateTimeCC' /
>CC/ 0
(CC0 1
nameDD 
:DD 
$strDD "
,DD" #
tableEE 
:EE 
$strEE 
,EE  
typeFF 
:FF 
$strFF !
,FF! "
nullableGG 
:GG 
trueGG 
)GG 
;GG  
migrationBuilderII 
.II 
	AddColumnII &
<II& '
intII' *
>II* +
(II+ ,
nameJJ 
:JJ 
$strJJ 
,JJ 
tableKK 
:KK 
$strKK 
,KK  
typeLL 
:LL 
$strLL 
,LL 
nullableMM 
:MM 
falseMM 
,MM  
defaultValueNN 
:NN 
$numNN 
)NN  
;NN  !
migrationBuilderPP 
.PP 
	AddColumnPP &
<PP& '
stringPP' -
>PP- .
(PP. /
nameQQ 
:QQ 
$strQQ  
,QQ  !
tableRR 
:RR 
$strRR 
,RR  
typeSS 
:SS 
$strSS %
,SS% &
nullableTT 
:TT 
trueTT 
)TT 
;TT  
migrationBuilderVV 
.VV 
	AddColumnVV &
<VV& '
DateTimeVV' /
>VV/ 0
(VV0 1
nameWW 
:WW 
$strWW "
,WW" #
tableXX 
:XX 
$strXX 
,XX  
typeYY 
:YY 
$strYY !
,YY! "
nullableZZ 
:ZZ 
trueZZ 
)ZZ 
;ZZ  
migrationBuilder\\ 
.\\ 

UpdateData\\ '
(\\' (
table]] 
:]] 
$str]] $
,]]$ %
	keyColumn^^ 
:^^ 
$str^^ 
,^^  
keyValue__ 
:__ 
$str__ +
,__+ ,
columns`` 
:`` 
new`` 
[`` 
]`` 
{``  
$str``! 3
,``3 4
$str``5 A
,``A B
$str``C Q
,``Q R
$str``S b
}``c d
,``d e
valuesaa 
:aa 
newaa 
objectaa "
[aa" #
]aa# $
{aa% &
$straa' M
,aaM N
newaaO R
DateTimeaaS [
(aa[ \
$numaa\ `
,aa` a
$numaab c
,aac d
$numaae f
,aaf g
$numaah i
,aai j
$numaak m
,aam n
$numaao q
,aaq r
$numaas v
,aav w
DateTimeKind	aax Ñ
.
aaÑ Ö
Utc
aaÖ à
)
aaà â
.
aaâ ä
AddTicks
aaä í
(
aaí ì
$num
aaì ó
)
aaó ò
,
aaò ô
$str
aaö 
,
aa Ò
$str
aaÚ ò
}
aaô ö
)
aaö õ
;
aaõ ú
migrationBuildercc 
.cc 

InsertDatacc '
(cc' (
tabledd 
:dd 
$strdd '
,dd' (
columnsee 
:ee 
newee 
[ee 
]ee 
{ee  
$stree! %
,ee% &
$stree' 4
,ee4 5
$stree6 D
,eeD E
$streeF P
,eeP Q
$streeR \
,ee\ ]
$stree^ j
,eej k
$streel {
,ee{ |
$str	ee} á
,
eeá à
$str
eeâ û
,
eeû ü
$str
ee† Ø
,
eeØ ∞
$str
ee± ¿
,
ee¿ ¡
$str
ee¬ œ
,
eeœ –
$str
ee— ›
,
ee› ﬁ
$str
eeﬂ Á
,
eeÁ Ë
$str
eeÈ ˆ
,
eeˆ ˜
$str
ee¯ Ü
,
eeÜ á
$str
eeà í
,
eeí ì
$str
eeî †
}
ee° ¢
,
ee¢ £
valuesff 
:ff 
newff 
objectff "
[ff" #
,ff# $
]ff$ %
{gg 
{hh 
newhh 
Guidhh 
(hh 
$strhh E
)hhE F
,hhF G
$str	hhH ∞
,
hh∞ ±
$str
hh≤ ‚
,
hh‚ „
$str
hh‰ Ì
,
hhÌ Ó
$str
hhÔ ˜
,
hh˜ ¯
new
hh˘ ¸
DateTime
hh˝ Ö
(
hhÖ Ü
$num
hhÜ ä
,
hhä ã
$num
hhå ç
,
hhç é
$num
hhè ê
,
hhê ë
$num
hhí î
,
hhî ï
$num
hhñ ò
,
hhò ô
$num
hhö ú
,
hhú ù
$num
hhû °
,
hh° ¢
DateTimeKind
hh£ Ø
.
hhØ ∞
Local
hh∞ µ
)
hhµ ∂
.
hh∂ ∑
AddTicks
hh∑ ø
(
hhø ¿
$num
hh¿ ƒ
)
hhƒ ≈
,
hh≈ ∆
$str
hh« ¯
,
hh¯ ˘
$str
hh˙ É
,
hhÉ Ñ
$str
hhÖ û
,
hhû ü
$str
hh† ª
,
hhª º
$str
hhΩ «
,
hh« »
$str
hh… Â
,
hhÂ Ê
$str
hhÁ Ù
,
hhÙ ı
$num
hhˆ ˜
,
hh˜ ¯
$str
hh˘ ç
,
hhç é
$str
hhè ù
,
hhù û
$str
hhü ¶
,
hh¶ ß
new
hh® ´
DateTime
hh¨ ¥
(
hh¥ µ
$num
hhµ π
,
hhπ ∫
$num
hhª º
,
hhº Ω
$num
hhæ ø
,
hhø ¿
$num
hh¡ √
,
hh√ ƒ
$num
hh≈ «
,
hh« »
$num
hh… À
,
hhÀ Ã
$num
hhÕ –
,
hh– —
DateTimeKind
hh“ ﬁ
.
hhﬁ ﬂ
Local
hhﬂ ‰
)
hh‰ Â
.
hhÂ Ê
AddTicks
hhÊ Ó
(
hhÓ Ô
$num
hhÔ Û
)
hhÛ Ù
}
hhı ˆ
,
hhˆ ˜
{ii 
newii 
Guidii 
(ii 
$strii E
)iiE F
,iiF G
$str	iiH è
,
iiè ê
$str
iië ¡
,
ii¡ ¬
$str
ii√ ⁄
,
ii⁄ €
$str
ii‹ ‰
,
ii‰ Â
new
iiÊ È
DateTime
iiÍ Ú
(
iiÚ Û
$num
iiÛ ˜
,
ii˜ ¯
$num
ii˘ ˙
,
ii˙ ˚
$num
ii¸ ˝
,
ii˝ ˛
$num
iiˇ Å
,
iiÅ Ç
$num
iiÉ Ö
,
iiÖ Ü
$num
iiá â
,
iiâ ä
$num
iiã é
,
iié è
DateTimeKind
iiê ú
.
iiú ù
Local
iiù ¢
)
ii¢ £
.
ii£ §
AddTicks
ii§ ¨
(
ii¨ ≠
$num
ii≠ ±
)
ii± ≤
,
ii≤ ≥
$str
ii¥ Â
,
iiÂ Ê
$str
iiÁ 
,
ii Ò
$str
iiÚ ã
,
iiã å
$str
iiç Ø
,
iiØ ∞
$str
ii± Ω
,
iiΩ æ
$str
iiø €
,
ii€ ‹
$str
ii› Í
,
iiÍ Î
$num
iiÏ Ì
,
iiÌ Ó
$str
iiÔ è
,
iiè ê
$str
iië ™
,
ii™ ´
$str
ii¨ ≥
,
ii≥ ¥
new
iiµ ∏
DateTime
iiπ ¡
(
ii¡ ¬
$num
ii¬ ∆
,
ii∆ «
$num
ii» …
,
ii…  
$num
iiÀ Ã
,
iiÃ Õ
$num
iiŒ –
,
ii– —
$num
ii“ ‘
,
ii‘ ’
$num
ii÷ ÿ
,
iiÿ Ÿ
$num
ii⁄ ›
,
ii› ﬁ
DateTimeKind
iiﬂ Î
.
iiÎ Ï
Local
iiÏ Ò
)
iiÒ Ú
.
iiÚ Û
AddTicks
iiÛ ˚
(
ii˚ ¸
$num
ii¸ Ä
)
iiÄ Å
}
iiÇ É
,
iiÉ Ñ
{jj 
newjj 
Guidjj 
(jj 
$strjj E
)jjE F
,jjF G
$strjjH s
,jjs t
$str	jju ô
,
jjô ö
$str
jjõ •
,
jj• ¶
$str
jjß Ø
,
jjØ ∞
new
jj± ¥
DateTime
jjµ Ω
(
jjΩ æ
$num
jjæ ¬
,
jj¬ √
$num
jjƒ ≈
,
jj≈ ∆
$num
jj« »
,
jj» …
$num
jj  Ã
,
jjÃ Õ
$num
jjŒ –
,
jj– —
$num
jj“ ‘
,
jj‘ ’
$num
jj÷ Ÿ
,
jjŸ ⁄
DateTimeKind
jj€ Á
.
jjÁ Ë
Local
jjË Ì
)
jjÌ Ó
.
jjÓ Ô
AddTicks
jjÔ ˜
(
jj˜ ¯
$num
jj¯ ¸
)
jj¸ ˝
,
jj˝ ˛
$str
jjˇ ≈
,
jj≈ ∆
$str
jj« –
,
jj– —
$str
jj“ Î
,
jjÎ Ï
$str
jjÌ ö
,
jjö õ
$str
jjú ®
,
jj® ©
$str
jj™ ∆
,
jj∆ «
$str
jj» ’
,
jj’ ÷
$num
jj◊ ÿ
,
jjÿ Ÿ
$str
jj⁄ á
,
jjá à
$str
jjâ ©
,
jj© ™
$str
jj´ ≤
,
jj≤ ≥
new
jj¥ ∑
DateTime
jj∏ ¿
(
jj¿ ¡
$num
jj¡ ≈
,
jj≈ ∆
$num
jj« »
,
jj» …
$num
jj  À
,
jjÀ Ã
$num
jjÕ œ
,
jjœ –
$num
jj— ”
,
jj” ‘
$num
jj’ ◊
,
jj◊ ÿ
$num
jjŸ ‹
,
jj‹ ›
DateTimeKind
jjﬁ Í
.
jjÍ Î
Local
jjÎ 
)
jj Ò
.
jjÒ Ú
AddTicks
jjÚ ˙
(
jj˙ ˚
$num
jj˚ ˇ
)
jjˇ Ä
}
jjÅ Ç
,
jjÇ É
{kk 
newkk 
Guidkk 
(kk 
$strkk E
)kkE F
,kkF G
$str	kkH è
,
kkè ê
$str
kkë ¡
,
kk¡ ¬
$str
kk√ ⁄
,
kk⁄ €
$str
kk‹ ‰
,
kk‰ Â
new
kkÊ È
DateTime
kkÍ Ú
(
kkÚ Û
$num
kkÛ ˜
,
kk˜ ¯
$num
kk˘ ˙
,
kk˙ ˚
$num
kk¸ ˝
,
kk˝ ˛
$num
kkˇ Å
,
kkÅ Ç
$num
kkÉ Ö
,
kkÖ Ü
$num
kká â
,
kkâ ä
$num
kkã é
,
kké è
DateTimeKind
kkê ú
.
kkú ù
Local
kkù ¢
)
kk¢ £
.
kk£ §
AddTicks
kk§ ¨
(
kk¨ ≠
$num
kk≠ ±
)
kk± ≤
,
kk≤ ≥
$str
kk¥ Â
,
kkÂ Ê
$str
kkÁ 
,
kk Ò
$str
kkÚ ã
,
kkã å
$str
kkç ≥
,
kk≥ ¥
$str
kkµ ¡
,
kk¡ ¬
$str
kk√ ﬂ
,
kkﬂ ‡
$str
kk· Ó
,
kkÓ Ô
$num
kk Ò
,
kkÒ Ú
$str
kkÛ ì
,
kkì î
$str
kkï ≠
,
kk≠ Æ
$str
kkØ ∂
,
kk∂ ∑
new
kk∏ ª
DateTime
kkº ƒ
(
kkƒ ≈
$num
kk≈ …
,
kk…  
$num
kkÀ Ã
,
kkÃ Õ
$num
kkŒ œ
,
kkœ –
$num
kk— ”
,
kk” ‘
$num
kk’ ◊
,
kk◊ ÿ
$num
kkŸ €
,
kk€ ‹
$num
kk› ‡
,
kk‡ ·
DateTimeKind
kk‚ Ó
.
kkÓ Ô
Local
kkÔ Ù
)
kkÙ ı
.
kkı ˆ
AddTicks
kkˆ ˛
(
kk˛ ˇ
$num
kkˇ É
)
kkÉ Ñ
}
kkÖ Ü
,
kkÜ á
{ll 
newll 
Guidll 
(ll 
$strll E
)llE F
,llF G
$str	llH û
,
llû ü
$str
ll† ≈
,
ll≈ ∆
$str
ll« œ
,
llœ –
$str
ll— Ÿ
,
llŸ ⁄
new
ll€ ﬁ
DateTime
llﬂ Á
(
llÁ Ë
$num
llË Ï
,
llÏ Ì
$num
llÓ Ô
,
llÔ 
$num
llÒ Ú
,
llÚ Û
$num
llÙ ˆ
,
llˆ ˜
$num
ll¯ ˙
,
ll˙ ˚
$num
ll¸ ˛
,
ll˛ ˇ
$num
llÄ É
,
llÉ Ñ
DateTimeKind
llÖ ë
.
llë í
Local
llí ó
)
lló ò
.
llò ô
AddTicks
llô °
(
ll° ¢
$num
ll¢ ¶
)
ll¶ ß
,
llß ®
$str
ll© ⁄
,
ll⁄ €
$str
ll‹ Â
,
llÂ Ê
$str
llÁ Å
,
llÅ Ç
$str
llÉ õ
,
llõ ú
$str
llù ß
,
llß ®
$str
ll© ≈
,
ll≈ ∆
$str
ll« ‘
,
ll‘ ’
$num
ll÷ ◊
,
ll◊ ÿ
$str
llŸ Ó
,
llÓ Ô
$str
ll Å
,
llÅ Ç
$str
llÉ ä
,
llä ã
new
llå è
DateTime
llê ò
(
llò ô
$num
llô ù
,
llù û
$num
llü †
,
ll† °
$num
ll¢ £
,
ll£ §
$num
ll• ß
,
llß ®
$num
ll© ´
,
ll´ ¨
$num
ll≠ Ø
,
llØ ∞
$num
ll± ¥
,
ll¥ µ
DateTimeKind
ll∂ ¬
.
ll¬ √
Local
ll√ »
)
ll» …
.
ll…  
AddTicks
ll  “
(
ll“ ”
$num
ll” ◊
)
ll◊ ÿ
}
llŸ ⁄
,
ll⁄ €
{mm 
newmm 
Guidmm 
(mm 
$strmm E
)mmE F
,mmF G
$str	mmH ë
,
mmë í
$str
mmì √
,
mm√ ƒ
$str
mm≈ ◊
,
mm◊ ÿ
$str
mmŸ ·
,
mm· ‚
new
mm„ Ê
DateTime
mmÁ Ô
(
mmÔ 
$num
mm Ù
,
mmÙ ı
$num
mmˆ ˜
,
mm˜ ¯
$num
mm˘ ˙
,
mm˙ ˚
$num
mm¸ ˛
,
mm˛ ˇ
$num
mmÄ Ç
,
mmÇ É
$num
mmÑ Ü
,
mmÜ á
$num
mmà ã
,
mmã å
DateTimeKind
mmç ô
.
mmô ö
Local
mmö ü
)
mmü †
.
mm† °
AddTicks
mm° ©
(
mm© ™
$num
mm™ Æ
)
mmÆ Ø
,
mmØ ∞
$str
mm± ‚
,
mm‚ „
$str
mm‰ Ì
,
mmÌ Ó
$str
mmÔ à
,
mmà â
$str
mmä ®
,
mm® ©
$str
mm™ ±
,
mm± ≤
$str
mm≥ œ
,
mmœ –
$str
mm— ﬁ
,
mmﬁ ﬂ
$num
mm‡ ·
,
mm· ‚
$str
mm„ Å
,
mmÅ Ç
$str
mmÉ ß
,
mmß ®
$str
mm© ∞
,
mm∞ ±
new
mm≤ µ
DateTime
mm∂ æ
(
mmæ ø
$num
mmø √
,
mm√ ƒ
$num
mm≈ ∆
,
mm∆ «
$num
mm» …
,
mm…  
$num
mmÀ Õ
,
mmÕ Œ
$num
mmœ —
,
mm— “
$num
mm” ’
,
mm’ ÷
$num
mm◊ ⁄
,
mm⁄ €
DateTimeKind
mm‹ Ë
.
mmË È
Local
mmÈ Ó
)
mmÓ Ô
.
mmÔ 
AddTicks
mm ¯
(
mm¯ ˘
$num
mm˘ ˝
)
mm˝ ˛
}
mmˇ Ä
,
mmÄ Å
{nn 
newnn 
Guidnn 
(nn 
$strnn E
)nnE F
,nnF G
$str	nnH ®
,
nn® ©
$str
nn™ ÿ
,
nnÿ Ÿ
$str
nn⁄ ‰
,
nn‰ Â
$str
nnÊ Ó
,
nnÓ Ô
new
nn Û
DateTime
nnÙ ¸
(
nn¸ ˝
$num
nn˝ Å
,
nnÅ Ç
$num
nnÉ Ñ
,
nnÑ Ö
$num
nnÜ á
,
nná à
$num
nnâ ã
,
nnã å
$num
nnç è
,
nnè ê
$num
nnë ì
,
nnì î
$num
nnï ò
,
nnò ô
DateTimeKind
nnö ¶
.
nn¶ ß
Local
nnß ¨
)
nn¨ ≠
.
nn≠ Æ
AddTicks
nnÆ ∂
(
nn∂ ∑
$num
nn∑ ª
)
nnª º
,
nnº Ω
$str
nnæ Ô
,
nnÔ 
$str
nnÒ ˙
,
nn˙ ˚
$str
nn¸ ñ
,
nnñ ó
$str
nnò ø
,
nnø ¿
$str
nn¡ À
,
nnÀ Ã
$str
nnÕ È
,
nnÈ Í
$str
nnÎ ¯
,
nn¯ ˘
$num
nn˙ ˚
,
nn˚ ¸
$str
nn˝ í
,
nní ì
$str
nnî §
,
nn§ •
$str
nn¶ ≠
,
nn≠ Æ
new
nnØ ≤
DateTime
nn≥ ª
(
nnª º
$num
nnº ¿
,
nn¿ ¡
$num
nn¬ √
,
nn√ ƒ
$num
nn≈ ∆
,
nn∆ «
$num
nn»  
,
nn  À
$num
nnÃ Œ
,
nnŒ œ
$num
nn– “
,
nn“ ”
$num
nn‘ ◊
,
nn◊ ÿ
DateTimeKind
nnŸ Â
.
nnÂ Ê
Local
nnÊ Î
)
nnÎ Ï
.
nnÏ Ì
AddTicks
nnÌ ı
(
nnı ˆ
$num
nnˆ ˙
)
nn˙ ˚
}
nn¸ ˝
,
nn˝ ˛
{oo 
newoo 
Guidoo 
(oo 
$stroo E
)ooE F
,ooF G
$str	ooH æ
,
ooæ ø
$str
oo¿ û
,
ooû ü
$str
oo† ™
,
oo™ ´
$str
oo¨ ¥
,
oo¥ µ
new
oo∂ π
DateTime
oo∫ ¬
(
oo¬ √
$num
oo√ «
,
oo« »
$num
oo…  
,
oo  À
$num
ooÃ Õ
,
ooÕ Œ
$num
ooœ —
,
oo— “
$num
oo” ’
,
oo’ ÷
$num
oo◊ Ÿ
,
ooŸ ⁄
$num
oo€ ﬁ
,
ooﬁ ﬂ
DateTimeKind
oo‡ Ï
.
ooÏ Ì
Local
ooÌ Ú
)
ooÚ Û
.
ooÛ Ù
AddTicks
ooÙ ¸
(
oo¸ ˝
$num
oo˝ Å
)
ooÅ Ç
,
ooÇ É
$str
ooÑ »
,
oo» …
$str
oo  ”
,
oo” ‘
$str
oo’ ˙
,
oo˙ ˚
$str
oo¸ ¢
,
oo¢ £
$str
oo§ Æ
,
ooÆ Ø
$str
oo∞ Ã
,
ooÃ Õ
$str
ooŒ €
,
oo€ ‹
$num
oo› ﬁ
,
ooﬁ ﬂ
$str
oo‡ ı
,
ooı ˆ
$str
oo˜ å
,
ooå ç
$str
ooé ï
,
ooï ñ
new
ooó ö
DateTime
ooõ £
(
oo£ §
$num
oo§ ®
,
oo® ©
$num
oo™ ´
,
oo´ ¨
$num
oo≠ Æ
,
ooÆ Ø
$num
oo∞ ≤
,
oo≤ ≥
$num
oo¥ ∂
,
oo∂ ∑
$num
oo∏ ∫
,
oo∫ ª
$num
ooº ø
,
ooø ¿
DateTimeKind
oo¡ Õ
.
ooÕ Œ
Local
ooŒ ”
)
oo” ‘
.
oo‘ ’
AddTicks
oo’ ›
(
oo› ﬁ
$num
ooﬁ ‚
)
oo‚ „
}
oo‰ Â
,
ooÂ Ê
{pp 
newpp 
Guidpp 
(pp 
$strpp E
)ppE F
,ppF G
$str	ppH è
,
ppè ê
$str
ppë ∫
,
pp∫ ª
$str
ppº  
,
pp  À
$str
ppÃ ‘
,
pp‘ ’
new
pp÷ Ÿ
DateTime
pp⁄ ‚
(
pp‚ „
$num
pp„ Á
,
ppÁ Ë
$num
ppÈ Í
,
ppÍ Î
$num
ppÏ Ì
,
ppÌ Ó
$num
ppÔ Ò
,
ppÒ Ú
$num
ppÛ ı
,
ppı ˆ
$num
pp˜ ˘
,
pp˘ ˙
$num
pp˚ ˛
,
pp˛ ˇ
DateTimeKind
ppÄ å
.
ppå ç
Local
ppç í
)
ppí ì
.
ppì î
AddTicks
ppî ú
(
ppú ù
$num
ppù °
)
pp° ¢
,
pp¢ £
$str
pp§ ’
,
pp’ ÷
$str
pp◊ ‡
,
pp‡ ·
$str
pp‚ Ó
,
ppÓ Ô
$str
pp Ä
,
ppÄ Å
$str
ppÇ å
,
ppå ç
$str
ppé §
,
pp§ •
$str
pp¶ ≤
,
pp≤ ≥
$num
pp¥ µ
,
ppµ ∂
$str
pp∑ »
,
pp» …
$str
pp  ﬂ
,
ppﬂ ‡
$str
pp· Ë
,
ppË È
new
ppÍ Ì
DateTime
ppÓ ˆ
(
ppˆ ˜
$num
pp˜ ˚
,
pp˚ ¸
$num
pp˝ ˛
,
pp˛ ˇ
$num
ppÄ Å
,
ppÅ Ç
$num
ppÉ Ö
,
ppÖ Ü
$num
ppá â
,
ppâ ä
$num
ppã ç
,
ppç é
$num
ppè í
,
ppí ì
DateTimeKind
ppî †
.
pp† °
Local
pp° ¶
)
pp¶ ß
.
ppß ®
AddTicks
pp® ∞
(
pp∞ ±
$num
pp± µ
)
ppµ ∂
}
pp∑ ∏
}qq 
)qq 
;qq 
}rr 	
	protecteduu 
overrideuu 
voiduu 
Downuu  $
(uu$ %
MigrationBuilderuu% 5
migrationBuilderuu6 F
)uuF G
{vv 	
migrationBuilderww 
.ww 

DeleteDataww '
(ww' (
tablexx 
:xx 
$strxx '
,xx' (
	keyColumnyy 
:yy 
$stryy 
,yy  
keyValuezz 
:zz 
newzz 
Guidzz "
(zz" #
$strzz# I
)zzI J
)zzJ K
;zzK L
migrationBuilder|| 
.|| 

DeleteData|| '
(||' (
table}} 
:}} 
$str}} '
,}}' (
	keyColumn~~ 
:~~ 
$str~~ 
,~~  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder
ÅÅ 
.
ÅÅ 

DeleteData
ÅÅ '
(
ÅÅ' (
table
ÇÇ 
:
ÇÇ 
$str
ÇÇ '
,
ÇÇ' (
	keyColumn
ÉÉ 
:
ÉÉ 
$str
ÉÉ 
,
ÉÉ  
keyValue
ÑÑ 
:
ÑÑ 
new
ÑÑ 
Guid
ÑÑ "
(
ÑÑ" #
$str
ÑÑ# I
)
ÑÑI J
)
ÑÑJ K
;
ÑÑK L
migrationBuilder
ÜÜ 
.
ÜÜ 

DeleteData
ÜÜ '
(
ÜÜ' (
table
áá 
:
áá 
$str
áá '
,
áá' (
	keyColumn
àà 
:
àà 
$str
àà 
,
àà  
keyValue
ââ 
:
ââ 
new
ââ 
Guid
ââ "
(
ââ" #
$str
ââ# I
)
ââI J
)
ââJ K
;
ââK L
migrationBuilder
ãã 
.
ãã 

DeleteData
ãã '
(
ãã' (
table
åå 
:
åå 
$str
åå '
,
åå' (
	keyColumn
çç 
:
çç 
$str
çç 
,
çç  
keyValue
éé 
:
éé 
new
éé 
Guid
éé "
(
éé" #
$str
éé# I
)
ééI J
)
ééJ K
;
ééK L
migrationBuilder
êê 
.
êê 

DeleteData
êê '
(
êê' (
table
ëë 
:
ëë 
$str
ëë '
,
ëë' (
	keyColumn
íí 
:
íí 
$str
íí 
,
íí  
keyValue
ìì 
:
ìì 
new
ìì 
Guid
ìì "
(
ìì" #
$str
ìì# I
)
ììI J
)
ììJ K
;
ììK L
migrationBuilder
ïï 
.
ïï 

DeleteData
ïï '
(
ïï' (
table
ññ 
:
ññ 
$str
ññ '
,
ññ' (
	keyColumn
óó 
:
óó 
$str
óó 
,
óó  
keyValue
òò 
:
òò 
new
òò 
Guid
òò "
(
òò" #
$str
òò# I
)
òòI J
)
òòJ K
;
òòK L
migrationBuilder
öö 
.
öö 

DeleteData
öö '
(
öö' (
table
õõ 
:
õõ 
$str
õõ '
,
õõ' (
	keyColumn
úú 
:
úú 
$str
úú 
,
úú  
keyValue
ùù 
:
ùù 
new
ùù 
Guid
ùù "
(
ùù" #
$str
ùù# I
)
ùùI J
)
ùùJ K
;
ùùK L
migrationBuilder
üü 
.
üü 

DeleteData
üü '
(
üü' (
table
†† 
:
†† 
$str
†† '
,
††' (
	keyColumn
°° 
:
°° 
$str
°° 
,
°°  
keyValue
¢¢ 
:
¢¢ 
new
¢¢ 
Guid
¢¢ "
(
¢¢" #
$str
¢¢# I
)
¢¢I J
)
¢¢J K
;
¢¢K L
migrationBuilder
§§ 
.
§§ 

DropColumn
§§ '
(
§§' (
name
•• 
:
•• 
$str
••  
,
••  !
table
¶¶ 
:
¶¶ 
$str
¶¶ 
)
¶¶  
;
¶¶  !
migrationBuilder
®® 
.
®® 

DropColumn
®® '
(
®®' (
name
©© 
:
©© 
$str
©© "
,
©©" #
table
™™ 
:
™™ 
$str
™™ 
)
™™  
;
™™  !
migrationBuilder
¨¨ 
.
¨¨ 

DropColumn
¨¨ '
(
¨¨' (
name
≠≠ 
:
≠≠ 
$str
≠≠ 
,
≠≠ 
table
ÆÆ 
:
ÆÆ 
$str
ÆÆ 
)
ÆÆ  
;
ÆÆ  !
migrationBuilder
∞∞ 
.
∞∞ 

DropColumn
∞∞ '
(
∞∞' (
name
±± 
:
±± 
$str
±±  
,
±±  !
table
≤≤ 
:
≤≤ 
$str
≤≤ 
)
≤≤  
;
≤≤  !
migrationBuilder
¥¥ 
.
¥¥ 

DropColumn
¥¥ '
(
¥¥' (
name
µµ 
:
µµ 
$str
µµ "
,
µµ" #
table
∂∂ 
:
∂∂ 
$str
∂∂ 
)
∂∂  
;
∂∂  !
migrationBuilder
∏∏ 
.
∏∏ 

UpdateData
∏∏ '
(
∏∏' (
table
ππ 
:
ππ 
$str
ππ $
,
ππ$ %
	keyColumn
∫∫ 
:
∫∫ 
$str
∫∫ 
,
∫∫  
keyValue
ªª 
:
ªª 
$str
ªª +
,
ªª+ ,
columns
ºº 
:
ºº 
new
ºº 
[
ºº 
]
ºº 
{
ºº  
$str
ºº! 3
,
ºº3 4
$str
ºº5 A
,
ººA B
$str
ººC Q
,
ººQ R
$str
ººS b
}
ººc d
,
ººd e
values
ΩΩ 
:
ΩΩ 
new
ΩΩ 
object
ΩΩ "
[
ΩΩ" #
]
ΩΩ# $
{
ΩΩ% &
$str
ΩΩ' M
,
ΩΩM N
new
ΩΩO R
DateTime
ΩΩS [
(
ΩΩ[ \
$num
ΩΩ\ `
,
ΩΩ` a
$num
ΩΩb c
,
ΩΩc d
$num
ΩΩe f
,
ΩΩf g
$num
ΩΩh j
,
ΩΩj k
$num
ΩΩl n
,
ΩΩn o
$num
ΩΩp r
,
ΩΩr s
$num
ΩΩt w
,
ΩΩw x
DateTimeKindΩΩy Ö
.ΩΩÖ Ü
UtcΩΩÜ â
)ΩΩâ ä
.ΩΩä ã
AddTicksΩΩã ì
(ΩΩì î
$numΩΩî ò
)ΩΩò ô
,ΩΩô ö
$strΩΩõ Ò
,ΩΩÒ Ú
$strΩΩÛ ô
}ΩΩö õ
)ΩΩõ ú
;ΩΩú ù
migrationBuilder
øø 
.
øø 

InsertData
øø '
(
øø' (
table
¿¿ 
:
¿¿ 
$str
¿¿ '
,
¿¿' (
columns
¡¡ 
:
¡¡ 
new
¡¡ 
[
¡¡ 
]
¡¡ 
{
¡¡  
$str
¡¡! %
,
¡¡% &
$str
¡¡' 4
,
¡¡4 5
$str
¡¡6 D
,
¡¡D E
$str
¡¡F P
,
¡¡P Q
$str
¡¡R \
,
¡¡\ ]
$str
¡¡^ j
,
¡¡j k
$str
¡¡l {
,
¡¡{ |
$str¡¡} á
,¡¡á à
$str¡¡â û
,¡¡û ü
$str¡¡† Ø
,¡¡Ø ∞
$str¡¡± ¿
,¡¡¿ ¡
$str¡¡¬ œ
,¡¡œ –
$str¡¡— ›
,¡¡› ﬁ
$str¡¡ﬂ Á
,¡¡Á Ë
$str¡¡È ˆ
,¡¡ˆ ˜
$str¡¡¯ Ü
,¡¡Ü á
$str¡¡à í
,¡¡í ì
$str¡¡î †
}¡¡° ¢
,¡¡¢ £
values
¬¬ 
:
¬¬ 
new
¬¬ 
object
¬¬ "
[
¬¬" #
,
¬¬# $
]
¬¬$ %
{
√√ 
{
ƒƒ 
new
ƒƒ 
Guid
ƒƒ 
(
ƒƒ 
$str
ƒƒ E
)
ƒƒE F
,
ƒƒF G
$strƒƒH ®
,ƒƒ® ©
$strƒƒ™ ÿ
,ƒƒÿ Ÿ
$strƒƒ⁄ ‰
,ƒƒ‰ Â
$strƒƒÊ Ó
,ƒƒÓ Ô
newƒƒ Û
DateTimeƒƒÙ ¸
(ƒƒ¸ ˝
$numƒƒ˝ Å
,ƒƒÅ Ç
$numƒƒÉ Ñ
,ƒƒÑ Ö
$numƒƒÜ á
,ƒƒá à
$numƒƒâ ã
,ƒƒã å
$numƒƒç è
,ƒƒè ê
$numƒƒë ì
,ƒƒì î
$numƒƒï ò
,ƒƒò ô
DateTimeKindƒƒö ¶
.ƒƒ¶ ß
Localƒƒß ¨
)ƒƒ¨ ≠
.ƒƒ≠ Æ
AddTicksƒƒÆ ∂
(ƒƒ∂ ∑
$numƒƒ∑ π
)ƒƒπ ∫
,ƒƒ∫ ª
$strƒƒº Ì
,ƒƒÌ Ó
$strƒƒÔ ¯
,ƒƒ¯ ˘
$strƒƒ˙ î
,ƒƒî ï
$strƒƒñ Ω
,ƒƒΩ æ
$strƒƒø …
,ƒƒ…  
$strƒƒÀ Á
,ƒƒÁ Ë
$strƒƒÈ ˆ
,ƒƒˆ ˜
$numƒƒ¯ ˘
,ƒƒ˘ ˙
$strƒƒ˚ ê
,ƒƒê ë
$strƒƒí ¢
,ƒƒ¢ £
$strƒƒ§ ´
,ƒƒ´ ¨
newƒƒ≠ ∞
DateTimeƒƒ± π
(ƒƒπ ∫
$numƒƒ∫ æ
,ƒƒæ ø
$numƒƒ¿ ¡
,ƒƒ¡ ¬
$numƒƒ√ ƒ
,ƒƒƒ ≈
$numƒƒ∆ »
,ƒƒ» …
$numƒƒ  Ã
,ƒƒÃ Õ
$numƒƒŒ –
,ƒƒ– —
$numƒƒ“ ’
,ƒƒ’ ÷
DateTimeKindƒƒ◊ „
.ƒƒ„ ‰
Localƒƒ‰ È
)ƒƒÈ Í
.ƒƒÍ Î
AddTicksƒƒÎ Û
(ƒƒÛ Ù
$numƒƒÙ ˆ
)ƒƒˆ ˜
}ƒƒ¯ ˘
,ƒƒ˘ ˙
{
≈≈ 
new
≈≈ 
Guid
≈≈ 
(
≈≈ 
$str
≈≈ E
)
≈≈E F
,
≈≈F G
$str≈≈H û
,≈≈û ü
$str≈≈† ≈
,≈≈≈ ∆
$str≈≈« œ
,≈≈œ –
$str≈≈— Ÿ
,≈≈Ÿ ⁄
new≈≈€ ﬁ
DateTime≈≈ﬂ Á
(≈≈Á Ë
$num≈≈Ë Ï
,≈≈Ï Ì
$num≈≈Ó Ô
,≈≈Ô 
$num≈≈Ò Ú
,≈≈Ú Û
$num≈≈Ù ˆ
,≈≈ˆ ˜
$num≈≈¯ ˙
,≈≈˙ ˚
$num≈≈¸ ˛
,≈≈˛ ˇ
$num≈≈Ä É
,≈≈É Ñ
DateTimeKind≈≈Ö ë
.≈≈ë í
Local≈≈í ó
)≈≈ó ò
.≈≈ò ô
AddTicks≈≈ô °
(≈≈° ¢
$num≈≈¢ §
)≈≈§ •
,≈≈• ¶
$str≈≈ß ÿ
,≈≈ÿ Ÿ
$str≈≈⁄ „
,≈≈„ ‰
$str≈≈Â ˇ
,≈≈ˇ Ä
$str≈≈Å ô
,≈≈ô ö
$str≈≈õ •
,≈≈• ¶
$str≈≈ß √
,≈≈√ ƒ
$str≈≈≈ “
,≈≈“ ”
$num≈≈‘ ’
,≈≈’ ÷
$str≈≈◊ Ï
,≈≈Ï Ì
$str≈≈Ó ˇ
,≈≈ˇ Ä
$str≈≈Å à
,≈≈à â
new≈≈ä ç
DateTime≈≈é ñ
(≈≈ñ ó
$num≈≈ó õ
,≈≈õ ú
$num≈≈ù û
,≈≈û ü
$num≈≈† °
,≈≈° ¢
$num≈≈£ •
,≈≈• ¶
$num≈≈ß ©
,≈≈© ™
$num≈≈´ ≠
,≈≈≠ Æ
$num≈≈Ø ≤
,≈≈≤ ≥
DateTimeKind≈≈¥ ¿
.≈≈¿ ¡
Local≈≈¡ ∆
)≈≈∆ «
.≈≈« »
AddTicks≈≈» –
(≈≈– —
$num≈≈— ”
)≈≈” ‘
}≈≈’ ÷
,≈≈÷ ◊
{
∆∆ 
new
∆∆ 
Guid
∆∆ 
(
∆∆ 
$str
∆∆ E
)
∆∆E F
,
∆∆F G
$str∆∆H ë
,∆∆ë í
$str∆∆ì √
,∆∆√ ƒ
$str∆∆≈ ◊
,∆∆◊ ÿ
$str∆∆Ÿ ·
,∆∆· ‚
new∆∆„ Ê
DateTime∆∆Á Ô
(∆∆Ô 
$num∆∆ Ù
,∆∆Ù ı
$num∆∆ˆ ˜
,∆∆˜ ¯
$num∆∆˘ ˙
,∆∆˙ ˚
$num∆∆¸ ˛
,∆∆˛ ˇ
$num∆∆Ä Ç
,∆∆Ç É
$num∆∆Ñ Ü
,∆∆Ü á
$num∆∆à ã
,∆∆ã å
DateTimeKind∆∆ç ô
.∆∆ô ö
Local∆∆ö ü
)∆∆ü †
.∆∆† °
AddTicks∆∆° ©
(∆∆© ™
$num∆∆™ ¨
)∆∆¨ ≠
,∆∆≠ Æ
$str∆∆Ø ‡
,∆∆‡ ·
$str∆∆‚ Î
,∆∆Î Ï
$str∆∆Ì Ü
,∆∆Ü á
$str∆∆à ¶
,∆∆¶ ß
$str∆∆® Ø
,∆∆Ø ∞
$str∆∆± Õ
,∆∆Õ Œ
$str∆∆œ ‹
,∆∆‹ ›
$num∆∆ﬁ ﬂ
,∆∆ﬂ ‡
$str∆∆· ˇ
,∆∆ˇ Ä
$str∆∆Å •
,∆∆• ¶
$str∆∆ß Æ
,∆∆Æ Ø
new∆∆∞ ≥
DateTime∆∆¥ º
(∆∆º Ω
$num∆∆Ω ¡
,∆∆¡ ¬
$num∆∆√ ƒ
,∆∆ƒ ≈
$num∆∆∆ «
,∆∆« »
$num∆∆… À
,∆∆À Ã
$num∆∆Õ œ
,∆∆œ –
$num∆∆— ”
,∆∆” ‘
$num∆∆’ ÿ
,∆∆ÿ Ÿ
DateTimeKind∆∆⁄ Ê
.∆∆Ê Á
Local∆∆Á Ï
)∆∆Ï Ì
.∆∆Ì Ó
AddTicks∆∆Ó ˆ
(∆∆ˆ ˜
$num∆∆˜ ˘
)∆∆˘ ˙
}∆∆˚ ¸
,∆∆¸ ˝
{
«« 
new
«« 
Guid
«« 
(
«« 
$str
«« E
)
««E F
,
««F G
$str
««H s
,
««s t
$str««u ô
,««ô ö
$str««õ •
,««• ¶
$str««ß Ø
,««Ø ∞
new««± ¥
DateTime««µ Ω
(««Ω æ
$num««æ ¬
,««¬ √
$num««ƒ ≈
,««≈ ∆
$num««« »
,««» …
$num««  Ã
,««Ã Õ
$num««Œ –
,««– —
$num««“ ‘
,««‘ ’
$num««÷ Ÿ
,««Ÿ ⁄
DateTimeKind««€ Á
.««Á Ë
Local««Ë Ì
)««Ì Ó
.««Ó Ô
AddTicks««Ô ˜
(««˜ ¯
$num««¯ ˙
)««˙ ˚
,««˚ ¸
$str««˝ √
,««√ ƒ
$str««≈ Œ
,««Œ œ
$str««– È
,««È Í
$str««Î ò
,««ò ô
$str««ö ¶
,««¶ ß
$str««® ƒ
,««ƒ ≈
$str««∆ ”
,««” ‘
$num««’ ÷
,««÷ ◊
$str««ÿ Ö
,««Ö Ü
$str««á ß
,««ß ®
$str««© ∞
,««∞ ±
new««≤ µ
DateTime««∂ æ
(««æ ø
$num««ø √
,««√ ƒ
$num««≈ ∆
,««∆ «
$num««» …
,««…  
$num««À Õ
,««Õ Œ
$num««œ —
,««— “
$num««” ’
,««’ ÷
$num««◊ ⁄
,««⁄ €
DateTimeKind««‹ Ë
.««Ë È
Local««È Ó
)««Ó Ô
.««Ô 
AddTicks«« ¯
(««¯ ˘
$num««˘ ˚
)««˚ ¸
}««˝ ˛
,««˛ ˇ
{
»» 
new
»» 
Guid
»» 
(
»» 
$str
»» E
)
»»E F
,
»»F G
$str»»H æ
,»»æ ø
$str»»¿ û
,»»û ü
$str»»† ™
,»»™ ´
$str»»¨ ¥
,»»¥ µ
new»»∂ π
DateTime»»∫ ¬
(»»¬ √
$num»»√ «
,»»« »
$num»»…  
,»»  À
$num»»Ã Õ
,»»Õ Œ
$num»»œ —
,»»— “
$num»»” ’
,»»’ ÷
$num»»◊ Ÿ
,»»Ÿ ⁄
$num»»€ ﬁ
,»»ﬁ ﬂ
DateTimeKind»»‡ Ï
.»»Ï Ì
Local»»Ì Ú
)»»Ú Û
.»»Û Ù
AddTicks»»Ù ¸
(»»¸ ˝
$num»»˝ ˇ
)»»ˇ Ä
,»»Ä Å
$str»»Ç ∆
,»»∆ «
$str»»» —
,»»— “
$str»»” ¯
,»»¯ ˘
$str»»˙ †
,»»† °
$str»»¢ ¨
,»»¨ ≠
$str»»Æ  
,»»  À
$str»»Ã Ÿ
,»»Ÿ ⁄
$num»»€ ‹
,»»‹ ›
$str»»ﬁ Û
,»»Û Ù
$str»»ı ä
,»»ä ã
$str»»å ì
,»»ì î
new»»ï ò
DateTime»»ô °
(»»° ¢
$num»»¢ ¶
,»»¶ ß
$num»»® ©
,»»© ™
$num»»´ ¨
,»»¨ ≠
$num»»Æ ∞
,»»∞ ±
$num»»≤ ¥
,»»¥ µ
$num»»∂ ∏
,»»∏ π
$num»»∫ Ω
,»»Ω æ
DateTimeKind»»ø À
.»»À Ã
Local»»Ã —
)»»— “
.»»“ ”
AddTicks»»” €
(»»€ ‹
$num»»‹ ﬁ
)»»ﬁ ﬂ
}»»‡ ·
,»»· ‚
{
…… 
new
…… 
Guid
…… 
(
…… 
$str
…… E
)
……E F
,
……F G
$str……H è
,……è ê
$str……ë ¡
,……¡ ¬
$str……√ ⁄
,……⁄ €
$str……‹ ‰
,……‰ Â
new……Ê È
DateTime……Í Ú
(……Ú Û
$num……Û ˜
,……˜ ¯
$num……˘ ˙
,……˙ ˚
$num……¸ ˝
,……˝ ˛
$num……ˇ Å
,……Å Ç
$num……É Ö
,……Ö Ü
$num……á â
,……â ä
$num……ã é
,……é è
DateTimeKind……ê ú
.……ú ù
Local……ù ¢
)……¢ £
.……£ §
AddTicks……§ ¨
(……¨ ≠
$num……≠ Ø
)……Ø ∞
,……∞ ±
$str……≤ „
,……„ ‰
$str……Â Ó
,……Ó Ô
$str…… â
,……â ä
$str……ã ±
,……± ≤
$str……≥ ø
,……ø ¿
$str……¡ ›
,……› ﬁ
$str……ﬂ Ï
,……Ï Ì
$num……Ó Ô
,……Ô 
$str……Ò ë
,……ë í
$str……ì ´
,……´ ¨
$str……≠ ¥
,……¥ µ
new……∂ π
DateTime……∫ ¬
(……¬ √
$num……√ «
,……« »
$num………  
,……  À
$num……Ã Õ
,……Õ Œ
$num……œ —
,……— “
$num……” ’
,……’ ÷
$num……◊ Ÿ
,……Ÿ ⁄
$num……€ ﬁ
,……ﬁ ﬂ
DateTimeKind……‡ Ï
.……Ï Ì
Local……Ì Ú
)……Ú Û
.……Û Ù
AddTicks……Ù ¸
(……¸ ˝
$num……˝ ˇ
)……ˇ Ä
}……Å Ç
,……Ç É
{
   
new
   
Guid
   
(
   
$str
   E
)
  E F
,
  F G
$str  H è
,  è ê
$str  ë ∫
,  ∫ ª
$str  º  
,    À
$str  Ã ‘
,  ‘ ’
new  ÷ Ÿ
DateTime  ⁄ ‚
(  ‚ „
$num  „ Á
,  Á Ë
$num  È Í
,  Í Î
$num  Ï Ì
,  Ì Ó
$num  Ô Ò
,  Ò Ú
$num  Û ı
,  ı ˆ
$num  ˜ ˘
,  ˘ ˙
$num  ˚ ˛
,  ˛ ˇ
DateTimeKind  Ä å
.  å ç
Local  ç í
)  í ì
.  ì î
AddTicks  î ú
(  ú ù
$num  ù ü
)  ü †
,  † °
$str  ¢ ”
,  ” ‘
$str  ’ ﬁ
,  ﬁ ﬂ
$str  ‡ Ï
,  Ï Ì
$str  Ó ˛
,  ˛ ˇ
$str  Ä ä
,  ä ã
$str  å ¢
,  ¢ £
$str  § ∞
,  ∞ ±
$num  ≤ ≥
,  ≥ ¥
$str  µ ∆
,  ∆ «
$str  » ›
,  › ﬁ
$str  ﬂ Ê
,  Ê Á
new  Ë Î
DateTime  Ï Ù
(  Ù ı
$num  ı ˘
,  ˘ ˙
$num  ˚ ¸
,  ¸ ˝
$num  ˛ ˇ
,  ˇ Ä
$num  Å É
,  É Ñ
$num  Ö á
,  á à
$num  â ã
,  ã å
$num  ç ê
,  ê ë
DateTimeKind  í û
.  û ü
Local  ü §
)  § •
.  • ¶
AddTicks  ¶ Æ
(  Æ Ø
$num  Ø ±
)  ± ≤
}  ≥ ¥
,  ¥ µ
{
ÀÀ 
new
ÀÀ 
Guid
ÀÀ 
(
ÀÀ 
$str
ÀÀ E
)
ÀÀE F
,
ÀÀF G
$strÀÀH ∞
,ÀÀ∞ ±
$strÀÀ≤ ‚
,ÀÀ‚ „
$strÀÀ‰ Ì
,ÀÀÌ Ó
$strÀÀÔ ˜
,ÀÀ˜ ¯
newÀÀ˘ ¸
DateTimeÀÀ˝ Ö
(ÀÀÖ Ü
$numÀÀÜ ä
,ÀÀä ã
$numÀÀå ç
,ÀÀç é
$numÀÀè ê
,ÀÀê ë
$numÀÀí î
,ÀÀî ï
$numÀÀñ ò
,ÀÀò ô
$numÀÀö ú
,ÀÀú ù
$numÀÀû °
,ÀÀ° ¢
DateTimeKindÀÀ£ Ø
.ÀÀØ ∞
LocalÀÀ∞ µ
)ÀÀµ ∂
.ÀÀ∂ ∑
AddTicksÀÀ∑ ø
(ÀÀø ¿
$numÀÀ¿ ƒ
)ÀÀƒ ≈
,ÀÀ≈ ∆
$strÀÀ« ¯
,ÀÀ¯ ˘
$strÀÀ˙ É
,ÀÀÉ Ñ
$strÀÀÖ û
,ÀÀû ü
$strÀÀ† ª
,ÀÀª º
$strÀÀΩ «
,ÀÀ« »
$strÀÀ… Â
,ÀÀÂ Ê
$strÀÀÁ Ù
,ÀÀÙ ı
$numÀÀˆ ˜
,ÀÀ˜ ¯
$strÀÀ˘ ç
,ÀÀç é
$strÀÀè ù
,ÀÀù û
$strÀÀü ¶
,ÀÀ¶ ß
newÀÀ® ´
DateTimeÀÀ¨ ¥
(ÀÀ¥ µ
$numÀÀµ π
,ÀÀπ ∫
$numÀÀª º
,ÀÀº Ω
$numÀÀæ ø
,ÀÀø ¿
$numÀÀ¡ √
,ÀÀ√ ƒ
$numÀÀ≈ «
,ÀÀ« »
$numÀÀ… À
,ÀÀÀ Ã
$numÀÀÕ –
,ÀÀ– —
DateTimeKindÀÀ“ ﬁ
.ÀÀﬁ ﬂ
LocalÀÀﬂ ‰
)ÀÀ‰ Â
.ÀÀÂ Ê
AddTicksÀÀÊ Ó
(ÀÀÓ Ô
$numÀÀÔ Û
)ÀÀÛ Ù
}ÀÀı ˆ
,ÀÀˆ ˜
{
ÃÃ 
new
ÃÃ 
Guid
ÃÃ 
(
ÃÃ 
$str
ÃÃ E
)
ÃÃE F
,
ÃÃF G
$strÃÃH è
,ÃÃè ê
$strÃÃë ¡
,ÃÃ¡ ¬
$strÃÃ√ ⁄
,ÃÃ⁄ €
$strÃÃ‹ ‰
,ÃÃ‰ Â
newÃÃÊ È
DateTimeÃÃÍ Ú
(ÃÃÚ Û
$numÃÃÛ ˜
,ÃÃ˜ ¯
$numÃÃ˘ ˙
,ÃÃ˙ ˚
$numÃÃ¸ ˝
,ÃÃ˝ ˛
$numÃÃˇ Å
,ÃÃÅ Ç
$numÃÃÉ Ö
,ÃÃÖ Ü
$numÃÃá â
,ÃÃâ ä
$numÃÃã é
,ÃÃé è
DateTimeKindÃÃê ú
.ÃÃú ù
LocalÃÃù ¢
)ÃÃ¢ £
.ÃÃ£ §
AddTicksÃÃ§ ¨
(ÃÃ¨ ≠
$numÃÃ≠ Ø
)ÃÃØ ∞
,ÃÃ∞ ±
$strÃÃ≤ „
,ÃÃ„ ‰
$strÃÃÂ Ó
,ÃÃÓ Ô
$strÃÃ â
,ÃÃâ ä
$strÃÃã ≠
,ÃÃ≠ Æ
$strÃÃØ ª
,ÃÃª º
$strÃÃΩ Ÿ
,ÃÃŸ ⁄
$strÃÃ€ Ë
,ÃÃË È
$numÃÃÍ Î
,ÃÃÎ Ï
$strÃÃÌ ç
,ÃÃç é
$strÃÃè ®
,ÃÃ® ©
$strÃÃ™ ±
,ÃÃ± ≤
newÃÃ≥ ∂
DateTimeÃÃ∑ ø
(ÃÃø ¿
$numÃÃ¿ ƒ
,ÃÃƒ ≈
$numÃÃ∆ «
,ÃÃ« »
$numÃÃ…  
,ÃÃ  À
$numÃÃÃ Œ
,ÃÃŒ œ
$numÃÃ– “
,ÃÃ“ ”
$numÃÃ‘ ÷
,ÃÃ÷ ◊
$numÃÃÿ €
,ÃÃ€ ‹
DateTimeKindÃÃ› È
.ÃÃÈ Í
LocalÃÃÍ Ô
)ÃÃÔ 
.ÃÃ Ò
AddTicksÃÃÒ ˘
(ÃÃ˘ ˙
$numÃÃ˙ ¸
)ÃÃ¸ ˝
}ÃÃ˛ ˇ
}
ÕÕ 
)
ÕÕ 
;
ÕÕ 
}
ŒŒ 	
}
œœ 
}–– Ωµ
ÅD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240704123625_ModifiedDataSeeding.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{		 
public 

partial 
class 
ModifiedDataSeeding ,
:- .
	Migration/ 8
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 

UpdateData '
(' (
table 
: 
$str $
,$ %
	keyColumn 
: 
$str 
,  
keyValue 
: 
$str +
,+ ,
columns 
: 
new 
[ 
] 
{  
$str! 3
,3 4
$str5 A
,A B
$strC Q
,Q R
$strS b
}c d
,d e
values 
: 
new 
object "
[" #
]# $
{% &
$str' M
,M N
newO R
DateTimeS [
([ \
$num\ `
,` a
$numb c
,c d
$nume f
,f g
$numh j
,j k
$numl n
,n o
$nump r
,r s
$numt w
,w x
DateTimeKind	y Ö
.
Ö Ü
Utc
Ü â
)
â ä
.
ä ã
AddTicks
ã ì
(
ì î
$num
î ò
)
ò ô
,
ô ö
$str
õ Ò
,
Ò Ú
$str
Û ô
}
ö õ
)
õ ú
;
ú ù
migrationBuilder 
. 

InsertData '
(' (
table 
: 
$str '
,' (
columns 
: 
new 
[ 
] 
{  
$str! %
,% &
$str' 4
,4 5
$str6 D
,D E
$strF P
,P Q
$strR \
,\ ]
$str^ j
,j k
$strl {
,{ |
$str	} á
,
á à
$str
â û
,
û ü
$str
† Ø
,
Ø ∞
$str
± ¿
,
¿ ¡
$str
¬ œ
,
œ –
$str
— ›
,
› ﬁ
$str
ﬂ Á
,
Á Ë
$str
È ˆ
,
ˆ ˜
$str
¯ Ü
,
Ü á
$str
à í
,
í ì
$str
î †
}
° ¢
,
¢ £
values 
: 
new 
object "
[" #
,# $
]$ %
{ 
{ 
new 
Guid 
( 
$str E
)E F
,F G
$str	H ®
,
® ©
$str
™ ÿ
,
ÿ Ÿ
$str
⁄ ‰
,
‰ Â
$str
Ê Ó
,
Ó Ô
new
 Û
DateTime
Ù ¸
(
¸ ˝
$num
˝ Å
,
Å Ç
$num
É Ñ
,
Ñ Ö
$num
Ü á
,
á à
$num
â ã
,
ã å
$num
ç è
,
è ê
$num
ë ì
,
ì î
$num
ï ò
,
ò ô
DateTimeKind
ö ¶
.
¶ ß
Local
ß ¨
)
¨ ≠
.
≠ Æ
AddTicks
Æ ∂
(
∂ ∑
$num
∑ π
)
π ∫
,
∫ ª
$str
º Ì
,
Ì Ó
$str
Ô ¯
,
¯ ˘
$str
˙ î
,
î ï
$str
ñ Ω
,
Ω æ
$str
ø …
,
…  
$str
À Á
,
Á Ë
$str
È ˆ
,
ˆ ˜
$num
¯ ˘
,
˘ ˙
$str
˚ ê
,
ê ë
$str
í ¢
,
¢ £
$str
§ ´
,
´ ¨
new
≠ ∞
DateTime
± π
(
π ∫
$num
∫ æ
,
æ ø
$num
¿ ¡
,
¡ ¬
$num
√ ƒ
,
ƒ ≈
$num
∆ »
,
» …
$num
  Ã
,
Ã Õ
$num
Œ –
,
– —
$num
“ ’
,
’ ÷
DateTimeKind
◊ „
.
„ ‰
Local
‰ È
)
È Í
.
Í Î
AddTicks
Î Û
(
Û Ù
$num
Ù ˆ
)
ˆ ˜
}
¯ ˘
,
˘ ˙
{ 
new 
Guid 
( 
$str E
)E F
,F G
$str	H û
,
û ü
$str
† ≈
,
≈ ∆
$str
« œ
,
œ –
$str
— Ÿ
,
Ÿ ⁄
new
€ ﬁ
DateTime
ﬂ Á
(
Á Ë
$num
Ë Ï
,
Ï Ì
$num
Ó Ô
,
Ô 
$num
Ò Ú
,
Ú Û
$num
Ù ˆ
,
ˆ ˜
$num
¯ ˙
,
˙ ˚
$num
¸ ˛
,
˛ ˇ
$num
Ä É
,
É Ñ
DateTimeKind
Ö ë
.
ë í
Local
í ó
)
ó ò
.
ò ô
AddTicks
ô °
(
° ¢
$num
¢ §
)
§ •
,
• ¶
$str
ß ÿ
,
ÿ Ÿ
$str
⁄ „
,
„ ‰
$str
Â ˇ
,
ˇ Ä
$str
Å ô
,
ô ö
$str
õ •
,
• ¶
$str
ß √
,
√ ƒ
$str
≈ “
,
“ ”
$num
‘ ’
,
’ ÷
$str
◊ Ï
,
Ï Ì
$str
Ó ˇ
,
ˇ Ä
$str
Å à
,
à â
new
ä ç
DateTime
é ñ
(
ñ ó
$num
ó õ
,
õ ú
$num
ù û
,
û ü
$num
† °
,
° ¢
$num
£ •
,
• ¶
$num
ß ©
,
© ™
$num
´ ≠
,
≠ Æ
$num
Ø ≤
,
≤ ≥
DateTimeKind
¥ ¿
.
¿ ¡
Local
¡ ∆
)
∆ «
.
« »
AddTicks
» –
(
– —
$num
— ”
)
” ‘
}
’ ÷
,
÷ ◊
{ 
new 
Guid 
( 
$str E
)E F
,F G
$str	H ë
,
ë í
$str
ì √
,
√ ƒ
$str
≈ ◊
,
◊ ÿ
$str
Ÿ ·
,
· ‚
new
„ Ê
DateTime
Á Ô
(
Ô 
$num
 Ù
,
Ù ı
$num
ˆ ˜
,
˜ ¯
$num
˘ ˙
,
˙ ˚
$num
¸ ˛
,
˛ ˇ
$num
Ä Ç
,
Ç É
$num
Ñ Ü
,
Ü á
$num
à ã
,
ã å
DateTimeKind
ç ô
.
ô ö
Local
ö ü
)
ü †
.
† °
AddTicks
° ©
(
© ™
$num
™ ¨
)
¨ ≠
,
≠ Æ
$str
Ø ‡
,
‡ ·
$str
‚ Î
,
Î Ï
$str
Ì Ü
,
Ü á
$str
à ¶
,
¶ ß
$str
® Ø
,
Ø ∞
$str
± Õ
,
Õ Œ
$str
œ ‹
,
‹ ›
$num
ﬁ ﬂ
,
ﬂ ‡
$str
· ˇ
,
ˇ Ä
$str
Å •
,
• ¶
$str
ß Æ
,
Æ Ø
new
∞ ≥
DateTime
¥ º
(
º Ω
$num
Ω ¡
,
¡ ¬
$num
√ ƒ
,
ƒ ≈
$num
∆ «
,
« »
$num
… À
,
À Ã
$num
Õ œ
,
œ –
$num
— ”
,
” ‘
$num
’ ÿ
,
ÿ Ÿ
DateTimeKind
⁄ Ê
.
Ê Á
Local
Á Ï
)
Ï Ì
.
Ì Ó
AddTicks
Ó ˆ
(
ˆ ˜
$num
˜ ˘
)
˘ ˙
}
˚ ¸
,
¸ ˝
{ 
new 
Guid 
( 
$str E
)E F
,F G
$strH s
,s t
$str	u ô
,
ô ö
$str
õ •
,
• ¶
$str
ß Ø
,
Ø ∞
new
± ¥
DateTime
µ Ω
(
Ω æ
$num
æ ¬
,
¬ √
$num
ƒ ≈
,
≈ ∆
$num
« »
,
» …
$num
  Ã
,
Ã Õ
$num
Œ –
,
– —
$num
“ ‘
,
‘ ’
$num
÷ Ÿ
,
Ÿ ⁄
DateTimeKind
€ Á
.
Á Ë
Local
Ë Ì
)
Ì Ó
.
Ó Ô
AddTicks
Ô ˜
(
˜ ¯
$num
¯ ˙
)
˙ ˚
,
˚ ¸
$str
˝ √
,
√ ƒ
$str
≈ Œ
,
Œ œ
$str
– È
,
È Í
$str
Î ò
,
ò ô
$str
ö ¶
,
¶ ß
$str
® ƒ
,
ƒ ≈
$str
∆ ”
,
” ‘
$num
’ ÷
,
÷ ◊
$str
ÿ Ö
,
Ö Ü
$str
á ß
,
ß ®
$str
© ∞
,
∞ ±
new
≤ µ
DateTime
∂ æ
(
æ ø
$num
ø √
,
√ ƒ
$num
≈ ∆
,
∆ «
$num
» …
,
…  
$num
À Õ
,
Õ Œ
$num
œ —
,
— “
$num
” ’
,
’ ÷
$num
◊ ⁄
,
⁄ €
DateTimeKind
‹ Ë
.
Ë È
Local
È Ó
)
Ó Ô
.
Ô 
AddTicks
 ¯
(
¯ ˘
$num
˘ ˚
)
˚ ¸
}
˝ ˛
,
˛ ˇ
{   
new   
Guid   
(   
$str   E
)  E F
,  F G
$str	  H æ
,
  æ ø
$str
  ¿ û
,
  û ü
$str
  † ™
,
  ™ ´
$str
  ¨ ¥
,
  ¥ µ
new
  ∂ π
DateTime
  ∫ ¬
(
  ¬ √
$num
  √ «
,
  « »
$num
  …  
,
    À
$num
  Ã Õ
,
  Õ Œ
$num
  œ —
,
  — “
$num
  ” ’
,
  ’ ÷
$num
  ◊ Ÿ
,
  Ÿ ⁄
$num
  € ﬁ
,
  ﬁ ﬂ
DateTimeKind
  ‡ Ï
.
  Ï Ì
Local
  Ì Ú
)
  Ú Û
.
  Û Ù
AddTicks
  Ù ¸
(
  ¸ ˝
$num
  ˝ ˇ
)
  ˇ Ä
,
  Ä Å
$str
  Ç ∆
,
  ∆ «
$str
  » —
,
  — “
$str
  ” ¯
,
  ¯ ˘
$str
  ˙ †
,
  † °
$str
  ¢ ¨
,
  ¨ ≠
$str
  Æ  
,
    À
$str
  Ã Ÿ
,
  Ÿ ⁄
$num
  € ‹
,
  ‹ ›
$str
  ﬁ Û
,
  Û Ù
$str
  ı ä
,
  ä ã
$str
  å ì
,
  ì î
new
  ï ò
DateTime
  ô °
(
  ° ¢
$num
  ¢ ¶
,
  ¶ ß
$num
  ® ©
,
  © ™
$num
  ´ ¨
,
  ¨ ≠
$num
  Æ ∞
,
  ∞ ±
$num
  ≤ ¥
,
  ¥ µ
$num
  ∂ ∏
,
  ∏ π
$num
  ∫ Ω
,
  Ω æ
DateTimeKind
  ø À
.
  À Ã
Local
  Ã —
)
  — “
.
  “ ”
AddTicks
  ” €
(
  € ‹
$num
  ‹ ﬁ
)
  ﬁ ﬂ
}
  ‡ ·
,
  · ‚
{!! 
new!! 
Guid!! 
(!! 
$str!! E
)!!E F
,!!F G
$str	!!H è
,
!!è ê
$str
!!ë ¡
,
!!¡ ¬
$str
!!√ ⁄
,
!!⁄ €
$str
!!‹ ‰
,
!!‰ Â
new
!!Ê È
DateTime
!!Í Ú
(
!!Ú Û
$num
!!Û ˜
,
!!˜ ¯
$num
!!˘ ˙
,
!!˙ ˚
$num
!!¸ ˝
,
!!˝ ˛
$num
!!ˇ Å
,
!!Å Ç
$num
!!É Ö
,
!!Ö Ü
$num
!!á â
,
!!â ä
$num
!!ã é
,
!!é è
DateTimeKind
!!ê ú
.
!!ú ù
Local
!!ù ¢
)
!!¢ £
.
!!£ §
AddTicks
!!§ ¨
(
!!¨ ≠
$num
!!≠ Ø
)
!!Ø ∞
,
!!∞ ±
$str
!!≤ „
,
!!„ ‰
$str
!!Â Ó
,
!!Ó Ô
$str
!! â
,
!!â ä
$str
!!ã ±
,
!!± ≤
$str
!!≥ ø
,
!!ø ¿
$str
!!¡ ›
,
!!› ﬁ
$str
!!ﬂ Ï
,
!!Ï Ì
$num
!!Ó Ô
,
!!Ô 
$str
!!Ò ë
,
!!ë í
$str
!!ì ´
,
!!´ ¨
$str
!!≠ ¥
,
!!¥ µ
new
!!∂ π
DateTime
!!∫ ¬
(
!!¬ √
$num
!!√ «
,
!!« »
$num
!!…  
,
!!  À
$num
!!Ã Õ
,
!!Õ Œ
$num
!!œ —
,
!!— “
$num
!!” ’
,
!!’ ÷
$num
!!◊ Ÿ
,
!!Ÿ ⁄
$num
!!€ ﬁ
,
!!ﬁ ﬂ
DateTimeKind
!!‡ Ï
.
!!Ï Ì
Local
!!Ì Ú
)
!!Ú Û
.
!!Û Ù
AddTicks
!!Ù ¸
(
!!¸ ˝
$num
!!˝ ˇ
)
!!ˇ Ä
}
!!Å Ç
,
!!Ç É
{"" 
new"" 
Guid"" 
("" 
$str"" E
)""E F
,""F G
$str	""H è
,
""è ê
$str
""ë ∫
,
""∫ ª
$str
""º  
,
""  À
$str
""Ã ‘
,
""‘ ’
new
""÷ Ÿ
DateTime
""⁄ ‚
(
""‚ „
$num
""„ Á
,
""Á Ë
$num
""È Í
,
""Í Î
$num
""Ï Ì
,
""Ì Ó
$num
""Ô Ò
,
""Ò Ú
$num
""Û ı
,
""ı ˆ
$num
""˜ ˘
,
""˘ ˙
$num
""˚ ˛
,
""˛ ˇ
DateTimeKind
""Ä å
.
""å ç
Local
""ç í
)
""í ì
.
""ì î
AddTicks
""î ú
(
""ú ù
$num
""ù ü
)
""ü †
,
""† °
$str
""¢ ”
,
""” ‘
$str
""’ ﬁ
,
""ﬁ ﬂ
$str
""‡ Ï
,
""Ï Ì
$str
""Ó ˛
,
""˛ ˇ
$str
""Ä ä
,
""ä ã
$str
""å ¢
,
""¢ £
$str
""§ ∞
,
""∞ ±
$num
""≤ ≥
,
""≥ ¥
$str
""µ ∆
,
""∆ «
$str
""» ›
,
""› ﬁ
$str
""ﬂ Ê
,
""Ê Á
new
""Ë Î
DateTime
""Ï Ù
(
""Ù ı
$num
""ı ˘
,
""˘ ˙
$num
""˚ ¸
,
""¸ ˝
$num
""˛ ˇ
,
""ˇ Ä
$num
""Å É
,
""É Ñ
$num
""Ö á
,
""á à
$num
""â ã
,
""ã å
$num
""ç ê
,
""ê ë
DateTimeKind
""í û
.
""û ü
Local
""ü §
)
""§ •
.
""• ¶
AddTicks
""¶ Æ
(
""Æ Ø
$num
""Ø ±
)
""± ≤
}
""≥ ¥
,
""¥ µ
{## 
new## 
Guid## 
(## 
$str## E
)##E F
,##F G
$str	##H ∞
,
##∞ ±
$str
##≤ ‚
,
##‚ „
$str
##‰ Ì
,
##Ì Ó
$str
##Ô ˜
,
##˜ ¯
new
##˘ ¸
DateTime
##˝ Ö
(
##Ö Ü
$num
##Ü ä
,
##ä ã
$num
##å ç
,
##ç é
$num
##è ê
,
##ê ë
$num
##í î
,
##î ï
$num
##ñ ò
,
##ò ô
$num
##ö ú
,
##ú ù
$num
##û °
,
##° ¢
DateTimeKind
##£ Ø
.
##Ø ∞
Local
##∞ µ
)
##µ ∂
.
##∂ ∑
AddTicks
##∑ ø
(
##ø ¿
$num
##¿ ƒ
)
##ƒ ≈
,
##≈ ∆
$str
##« ¯
,
##¯ ˘
$str
##˙ É
,
##É Ñ
$str
##Ö û
,
##û ü
$str
##† ª
,
##ª º
$str
##Ω «
,
##« »
$str
##… Â
,
##Â Ê
$str
##Á Ù
,
##Ù ı
$num
##ˆ ˜
,
##˜ ¯
$str
##˘ ç
,
##ç é
$str
##è ù
,
##ù û
$str
##ü ¶
,
##¶ ß
new
##® ´
DateTime
##¨ ¥
(
##¥ µ
$num
##µ π
,
##π ∫
$num
##ª º
,
##º Ω
$num
##æ ø
,
##ø ¿
$num
##¡ √
,
##√ ƒ
$num
##≈ «
,
##« »
$num
##… À
,
##À Ã
$num
##Õ –
,
##– —
DateTimeKind
##“ ﬁ
.
##ﬁ ﬂ
Local
##ﬂ ‰
)
##‰ Â
.
##Â Ê
AddTicks
##Ê Ó
(
##Ó Ô
$num
##Ô Û
)
##Û Ù
}
##ı ˆ
,
##ˆ ˜
{$$ 
new$$ 
Guid$$ 
($$ 
$str$$ E
)$$E F
,$$F G
$str	$$H è
,
$$è ê
$str
$$ë ¡
,
$$¡ ¬
$str
$$√ ⁄
,
$$⁄ €
$str
$$‹ ‰
,
$$‰ Â
new
$$Ê È
DateTime
$$Í Ú
(
$$Ú Û
$num
$$Û ˜
,
$$˜ ¯
$num
$$˘ ˙
,
$$˙ ˚
$num
$$¸ ˝
,
$$˝ ˛
$num
$$ˇ Å
,
$$Å Ç
$num
$$É Ö
,
$$Ö Ü
$num
$$á â
,
$$â ä
$num
$$ã é
,
$$é è
DateTimeKind
$$ê ú
.
$$ú ù
Local
$$ù ¢
)
$$¢ £
.
$$£ §
AddTicks
$$§ ¨
(
$$¨ ≠
$num
$$≠ Ø
)
$$Ø ∞
,
$$∞ ±
$str
$$≤ „
,
$$„ ‰
$str
$$Â Ó
,
$$Ó Ô
$str
$$ â
,
$$â ä
$str
$$ã ≠
,
$$≠ Æ
$str
$$Ø ª
,
$$ª º
$str
$$Ω Ÿ
,
$$Ÿ ⁄
$str
$$€ Ë
,
$$Ë È
$num
$$Í Î
,
$$Î Ï
$str
$$Ì ç
,
$$ç é
$str
$$è ®
,
$$® ©
$str
$$™ ±
,
$$± ≤
new
$$≥ ∂
DateTime
$$∑ ø
(
$$ø ¿
$num
$$¿ ƒ
,
$$ƒ ≈
$num
$$∆ «
,
$$« »
$num
$$…  
,
$$  À
$num
$$Ã Œ
,
$$Œ œ
$num
$$– “
,
$$“ ”
$num
$$‘ ÷
,
$$÷ ◊
$num
$$ÿ €
,
$$€ ‹
DateTimeKind
$$› È
.
$$È Í
Local
$$Í Ô
)
$$Ô 
.
$$ Ò
AddTicks
$$Ò ˘
(
$$˘ ˙
$num
$$˙ ¸
)
$$¸ ˝
}
$$˛ ˇ
}%% 
)%% 
;%% 
}&& 	
	protected)) 
override)) 
void)) 
Down))  $
())$ %
MigrationBuilder))% 5
migrationBuilder))6 F
)))F G
{** 	
migrationBuilder++ 
.++ 

DeleteData++ '
(++' (
table,, 
:,, 
$str,, '
,,,' (
	keyColumn-- 
:-- 
$str-- 
,--  
keyValue.. 
:.. 
new.. 
Guid.. "
(.." #
$str..# I
)..I J
)..J K
;..K L
migrationBuilder00 
.00 

DeleteData00 '
(00' (
table11 
:11 
$str11 '
,11' (
	keyColumn22 
:22 
$str22 
,22  
keyValue33 
:33 
new33 
Guid33 "
(33" #
$str33# I
)33I J
)33J K
;33K L
migrationBuilder55 
.55 

DeleteData55 '
(55' (
table66 
:66 
$str66 '
,66' (
	keyColumn77 
:77 
$str77 
,77  
keyValue88 
:88 
new88 
Guid88 "
(88" #
$str88# I
)88I J
)88J K
;88K L
migrationBuilder:: 
.:: 

DeleteData:: '
(::' (
table;; 
:;; 
$str;; '
,;;' (
	keyColumn<< 
:<< 
$str<< 
,<<  
keyValue== 
:== 
new== 
Guid== "
(==" #
$str==# I
)==I J
)==J K
;==K L
migrationBuilder?? 
.?? 

DeleteData?? '
(??' (
table@@ 
:@@ 
$str@@ '
,@@' (
	keyColumnAA 
:AA 
$strAA 
,AA  
keyValueBB 
:BB 
newBB 
GuidBB "
(BB" #
$strBB# I
)BBI J
)BBJ K
;BBK L
migrationBuilderDD 
.DD 

DeleteDataDD '
(DD' (
tableEE 
:EE 
$strEE '
,EE' (
	keyColumnFF 
:FF 
$strFF 
,FF  
keyValueGG 
:GG 
newGG 
GuidGG "
(GG" #
$strGG# I
)GGI J
)GGJ K
;GGK L
migrationBuilderII 
.II 

DeleteDataII '
(II' (
tableJJ 
:JJ 
$strJJ '
,JJ' (
	keyColumnKK 
:KK 
$strKK 
,KK  
keyValueLL 
:LL 
newLL 
GuidLL "
(LL" #
$strLL# I
)LLI J
)LLJ K
;LLK L
migrationBuilderNN 
.NN 

DeleteDataNN '
(NN' (
tableOO 
:OO 
$strOO '
,OO' (
	keyColumnPP 
:PP 
$strPP 
,PP  
keyValueQQ 
:QQ 
newQQ 
GuidQQ "
(QQ" #
$strQQ# I
)QQI J
)QQJ K
;QQK L
migrationBuilderSS 
.SS 

DeleteDataSS '
(SS' (
tableTT 
:TT 
$strTT '
,TT' (
	keyColumnUU 
:UU 
$strUU 
,UU  
keyValueVV 
:VV 
newVV 
GuidVV "
(VV" #
$strVV# I
)VVI J
)VVJ K
;VVK L
migrationBuilderXX 
.XX 

UpdateDataXX '
(XX' (
tableYY 
:YY 
$strYY $
,YY$ %
	keyColumnZZ 
:ZZ 
$strZZ 
,ZZ  
keyValue[[ 
:[[ 
$str[[ +
,[[+ ,
columns\\ 
:\\ 
new\\ 
[\\ 
]\\ 
{\\  
$str\\! 3
,\\3 4
$str\\5 A
,\\A B
$str\\C Q
,\\Q R
$str\\S b
}\\c d
,\\d e
values]] 
:]] 
new]] 
object]] "
[]]" #
]]]# $
{]]% &
$str]]' M
,]]M N
new]]O R
DateTime]]S [
(]][ \
$num]]\ `
,]]` a
$num]]b c
,]]c d
$num]]e f
,]]f g
$num]]h i
,]]i j
$num]]k m
,]]m n
$num]]o q
,]]q r
$num]]s v
,]]v w
DateTimeKind	]]x Ñ
.
]]Ñ Ö
Utc
]]Ö à
)
]]à â
.
]]â ä
AddTicks
]]ä í
(
]]í ì
$num
]]ì ó
)
]]ó ò
,
]]ò ô
$str
]]ö 
,
]] Ò
$str
]]Ú ò
}
]]ô ö
)
]]ö õ
;
]]õ ú
}^^ 	
}__ 
}`` ò$
ÑD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240701055338_RenameSomePropInCourse.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public		 

partial		 
class		 "
RenameSomePropInCourse		 /
:		0 1
	Migration		2 ;
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
RenameColumn )
() *
name 
: 
$str #
,# $
table 
: 
$str  
,  !
newName 
: 
$str '
)' (
;( )
migrationBuilder 
. 
RenameColumn )
() *
name 
: 
$str %
,% &
table 
: 
$str  
,  !
newName 
: 
$str *
)* +
;+ ,
migrationBuilder 
. 

UpdateData '
(' (
table 
: 
$str $
,$ %
	keyColumn 
: 
$str 
,  
keyValue 
: 
$str +
,+ ,
columns 
: 
new 
[ 
] 
{  
$str! 3
,3 4
$str5 A
,A B
$strC Q
,Q R
$strS b
}c d
,d e
values 
: 
new 
object "
[" #
]# $
{% &
$str' M
,M N
newO R
DateTimeS [
([ \
$num\ `
,` a
$numb c
,c d
$nume f
,f g
$numh i
,i j
$numk m
,m n
$numo q
,q r
$nums v
,v w
DateTimeKind	x Ñ
.
Ñ Ö
Utc
Ö à
)
à â
.
â ä
AddTicks
ä í
(
í ì
$num
ì ó
)
ó ò
,
ò ô
$str
ö 
,
 Ò
$str
Ú ò
}
ô ö
)
ö õ
;
õ ú
} 	
	protected!! 
override!! 
void!! 
Down!!  $
(!!$ %
MigrationBuilder!!% 5
migrationBuilder!!6 F
)!!F G
{"" 	
migrationBuilder## 
.## 
RenameColumn## )
(##) *
name$$ 
:$$ 
$str$$ $
,$$$ %
table%% 
:%% 
$str%%  
,%%  !
newName&& 
:&& 
$str&& &
)&&& '
;&&' (
migrationBuilder(( 
.(( 
RenameColumn(( )
((() *
name)) 
:)) 
$str)) '
,))' (
table** 
:** 
$str**  
,**  !
newName++ 
:++ 
$str++ (
)++( )
;++) *
migrationBuilder-- 
.-- 

UpdateData-- '
(--' (
table.. 
:.. 
$str.. $
,..$ %
	keyColumn// 
:// 
$str// 
,//  
keyValue00 
:00 
$str00 +
,00+ ,
columns11 
:11 
new11 
[11 
]11 
{11  
$str11! 3
,113 4
$str115 A
,11A B
$str11C Q
,11Q R
$str11S b
}11c d
,11d e
values22 
:22 
new22 
object22 "
[22" #
]22# $
{22% &
$str22' M
,22M N
new22O R
DateTime22S [
(22[ \
$num22\ `
,22` a
$num22b c
,22c d
$num22e f
,22f g
$num22h i
,22i j
$num22k m
,22m n
$num22o q
,22q r
$num22s v
,22v w
DateTimeKind	22x Ñ
.
22Ñ Ö
Utc
22Ö à
)
22à â
.
22â ä
AddTicks
22ä í
(
22í ì
$num
22ì ó
)
22ó ò
,
22ò ô
$str
22ö 
,
22 Ò
$str
22Ú ò
}
22ô ö
)
22ö õ
;
22õ ú
}33 	
}44 
}55 Ïß
åD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240701054917_ModifiedCourseAndCourseVersion.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public		 

partial		 
class		 *
ModifiedCourseAndCourseVersion		 7
:		8 9
	Migration		: C
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str 8
,8 9
table 
: 
$str  
)  !
;! "
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str 1
,1 2
table 
: 
$str  
)  !
;! "
migrationBuilder 
. 
	DropTable &
(& '
name 
: 
$str &
)& '
;' (
migrationBuilder 
. 
	DropTable &
(& '
name 
: 
$str &
)& '
;' (
migrationBuilder 
. 
	DropIndex &
(& '
name 
: 
$str -
,- .
table 
: 
$str  
)  !
;! "
migrationBuilder   
.   
	DropIndex   &
(  & '
name!! 
:!! 
$str!! *
,!!* +
table"" 
:"" 
$str""  
)""  !
;""! "
migrationBuilder$$ 
.$$ 

DropColumn$$ '
($$' (
name%% 
:%% 
$str%% "
,%%" #
table&& 
:&& 
$str&&  
)&&  !
;&&! "
migrationBuilder(( 
.(( 

DropColumn(( '
(((' (
name)) 
:)) 
$str)) $
,))$ %
table** 
:** 
$str**  
)**  !
;**! "
migrationBuilder,, 
.,, 

DropColumn,, '
(,,' (
name-- 
:-- 
$str-- #
,--# $
table.. 
:.. 
$str..  
)..  !
;..! "
migrationBuilder00 
.00 

DropColumn00 '
(00' (
name11 
:11 
$str11 $
,11$ %
table22 
:22 
$str22  
)22  !
;22! "
migrationBuilder44 
.44 

DropColumn44 '
(44' (
name55 
:55 
$str55  
,55  !
table66 
:66 
$str66  
)66  !
;66! "
migrationBuilder88 
.88 

DropColumn88 '
(88' (
name99 
:99 
$str99 
,99 
table:: 
::: 
$str::  
)::  !
;::! "
migrationBuilder<< 
.<< 

DropColumn<< '
(<<' (
name== 
:== 
$str== 
,== 
table>> 
:>> 
$str>>  
)>>  !
;>>! "
migrationBuilder@@ 
.@@ 
RenameColumn@@ )
(@@) *
nameAA 
:AA 
$strAA 
,AA  
tableBB 
:BB 
$strBB  
,BB  !
newNameCC 
:CC 
$strCC (
)CC( )
;CC) *
migrationBuilderEE 
.EE 

UpdateDataEE '
(EE' (
tableFF 
:FF 
$strFF $
,FF$ %
	keyColumnGG 
:GG 
$strGG 
,GG  
keyValueHH 
:HH 
$strHH +
,HH+ ,
columnsII 
:II 
newII 
[II 
]II 
{II  
$strII! 3
,II3 4
$strII5 A
,IIA B
$strIIC Q
,IIQ R
$strIIS b
}IIc d
,IId e
valuesJJ 
:JJ 
newJJ 
objectJJ "
[JJ" #
]JJ# $
{JJ% &
$strJJ' M
,JJM N
newJJO R
DateTimeJJS [
(JJ[ \
$numJJ\ `
,JJ` a
$numJJb c
,JJc d
$numJJe f
,JJf g
$numJJh i
,JJi j
$numJJk m
,JJm n
$numJJo q
,JJq r
$numJJs v
,JJv w
DateTimeKind	JJx Ñ
.
JJÑ Ö
Utc
JJÖ à
)
JJà â
.
JJâ ä
AddTicks
JJä í
(
JJí ì
$num
JJì ó
)
JJó ò
,
JJò ô
$str
JJö 
,
JJ Ò
$str
JJÚ ò
}
JJô ö
)
JJö õ
;
JJõ ú
migrationBuilderLL 
.LL 
CreateIndexLL (
(LL( )
nameMM 
:MM 
$strMM 4
,MM4 5
tableNN 
:NN 
$strNN '
,NN' (
columnOO 
:OO 
$strOO $
)OO$ %
;OO% &
migrationBuilderQQ 
.QQ 
CreateIndexQQ (
(QQ( )
nameRR 
:RR 
$strRR 1
,RR1 2
tableSS 
:SS 
$strSS '
,SS' (
columnTT 
:TT 
$strTT !
)TT! "
;TT" #
migrationBuilderVV 
.VV 
AddForeignKeyVV *
(VV* +
nameWW 
:WW 
$strWW ?
,WW? @
tableXX 
:XX 
$strXX '
,XX' (
columnYY 
:YY 
$strYY $
,YY$ %
principalTableZZ 
:ZZ 
$strZZ  ,
,ZZ, -
principalColumn[[ 
:[[  
$str[[! %
)[[% &
;[[& '
migrationBuilder]] 
.]] 
AddForeignKey]] *
(]]* +
name^^ 
:^^ 
$str^^ 8
,^^8 9
table__ 
:__ 
$str__ '
,__' (
column`` 
:`` 
$str`` !
,``! "
principalTableaa 
:aa 
$straa  (
,aa( )
principalColumnbb 
:bb  
$strbb! %
)bb% &
;bb& '
}cc 	
	protectedff 
overrideff 
voidff 
Downff  $
(ff$ %
MigrationBuilderff% 5
migrationBuilderff6 F
)ffF G
{gg 	
migrationBuilderhh 
.hh 
DropForeignKeyhh +
(hh+ ,
nameii 
:ii 
$strii ?
,ii? @
tablejj 
:jj 
$strjj '
)jj' (
;jj( )
migrationBuilderll 
.ll 
DropForeignKeyll +
(ll+ ,
namemm 
:mm 
$strmm 8
,mm8 9
tablenn 
:nn 
$strnn '
)nn' (
;nn( )
migrationBuilderpp 
.pp 
	DropIndexpp &
(pp& '
nameqq 
:qq 
$strqq 4
,qq4 5
tablerr 
:rr 
$strrr '
)rr' (
;rr( )
migrationBuildertt 
.tt 
	DropIndextt &
(tt& '
nameuu 
:uu 
$struu 1
,uu1 2
tablevv 
:vv 
$strvv '
)vv' (
;vv( )
migrationBuilderxx 
.xx 
RenameColumnxx )
(xx) *
nameyy 
:yy 
$stryy %
,yy% &
tablezz 
:zz 
$strzz  
,zz  !
newName{{ 
:{{ 
$str{{ "
){{" #
;{{# $
migrationBuilder}} 
.}} 
	AddColumn}} &
<}}& '
Guid}}' +
>}}+ ,
(}}, -
name~~ 
:~~ 
$str~~ "
,~~" #
table 
: 
$str  
,  !
type
ÄÄ 
:
ÄÄ 
$str
ÄÄ (
,
ÄÄ( )
nullable
ÅÅ 
:
ÅÅ 
true
ÅÅ 
)
ÅÅ 
;
ÅÅ  
migrationBuilder
ÉÉ 
.
ÉÉ 
	AddColumn
ÉÉ &
<
ÉÉ& '
string
ÉÉ' -
>
ÉÉ- .
(
ÉÉ. /
name
ÑÑ 
:
ÑÑ 
$str
ÑÑ $
,
ÑÑ$ %
table
ÖÖ 
:
ÖÖ 
$str
ÖÖ  
,
ÖÖ  !
type
ÜÜ 
:
ÜÜ 
$str
ÜÜ %
,
ÜÜ% &
nullable
áá 
:
áá 
true
áá 
)
áá 
;
áá  
migrationBuilder
ââ 
.
ââ 
	AddColumn
ââ &
<
ââ& '
string
ââ' -
>
ââ- .
(
ââ. /
name
ää 
:
ää 
$str
ää #
,
ää# $
table
ãã 
:
ãã 
$str
ãã  
,
ãã  !
type
åå 
:
åå 
$str
åå %
,
åå% &
nullable
çç 
:
çç 
true
çç 
)
çç 
;
çç  
migrationBuilder
èè 
.
èè 
	AddColumn
èè &
<
èè& '
int
èè' *
>
èè* +
(
èè+ ,
name
êê 
:
êê 
$str
êê $
,
êê$ %
table
ëë 
:
ëë 
$str
ëë  
,
ëë  !
type
íí 
:
íí 
$str
íí 
,
íí 
nullable
ìì 
:
ìì 
true
ìì 
)
ìì 
;
ìì  
migrationBuilder
ïï 
.
ïï 
	AddColumn
ïï &
<
ïï& '
double
ïï' -
>
ïï- .
(
ïï. /
name
ññ 
:
ññ 
$str
ññ  
,
ññ  !
table
óó 
:
óó 
$str
óó  
,
óó  !
type
òò 
:
òò 
$str
òò 
,
òò 
nullable
ôô 
:
ôô 
true
ôô 
)
ôô 
;
ôô  
migrationBuilder
õõ 
.
õõ 
	AddColumn
õõ &
<
õõ& '
double
õõ' -
>
õõ- .
(
õõ. /
name
úú 
:
úú 
$str
úú 
,
úú 
table
ùù 
:
ùù 
$str
ùù  
,
ùù  !
type
ûû 
:
ûû 
$str
ûû 
,
ûû 
nullable
üü 
:
üü 
true
üü 
)
üü 
;
üü  
migrationBuilder
°° 
.
°° 
	AddColumn
°° &
<
°°& '
string
°°' -
>
°°- .
(
°°. /
name
¢¢ 
:
¢¢ 
$str
¢¢ 
,
¢¢ 
table
££ 
:
££ 
$str
££  
,
££  !
type
§§ 
:
§§ 
$str
§§ %
,
§§% &
nullable
•• 
:
•• 
true
•• 
)
•• 
;
••  
migrationBuilder
ßß 
.
ßß 
CreateTable
ßß (
(
ßß( )
name
®® 
:
®® 
$str
®® &
,
®®& '
columns
©© 
:
©© 
table
©© 
=>
©© !
new
©©" %
{
™™ 
Id
´´ 
=
´´ 
table
´´ 
.
´´ 
Column
´´ %
<
´´% &
Guid
´´& *
>
´´* +
(
´´+ ,
type
´´, 0
:
´´0 1
$str
´´2 D
,
´´D E
nullable
´´F N
:
´´N O
false
´´P U
)
´´U V
,
´´V W
CourseId
¨¨ 
=
¨¨ 
table
¨¨ $
.
¨¨$ %
Column
¨¨% +
<
¨¨+ ,
Guid
¨¨, 0
>
¨¨0 1
(
¨¨1 2
type
¨¨2 6
:
¨¨6 7
$str
¨¨8 J
,
¨¨J K
nullable
¨¨L T
:
¨¨T U
false
¨¨V [
)
¨¨[ \
,
¨¨\ ]
Description
≠≠ 
=
≠≠  !
table
≠≠" '
.
≠≠' (
Column
≠≠( .
<
≠≠. /
string
≠≠/ 5
>
≠≠5 6
(
≠≠6 7
type
≠≠7 ;
:
≠≠; <
$str
≠≠= L
,
≠≠L M
nullable
≠≠N V
:
≠≠V W
false
≠≠X ]
)
≠≠] ^
,
≠≠^ _
Title
ÆÆ 
=
ÆÆ 
table
ÆÆ !
.
ÆÆ! "
Column
ÆÆ" (
<
ÆÆ( )
string
ÆÆ) /
>
ÆÆ/ 0
(
ÆÆ0 1
type
ÆÆ1 5
:
ÆÆ5 6
$str
ÆÆ7 F
,
ÆÆF G
nullable
ÆÆH P
:
ÆÆP Q
false
ÆÆR W
)
ÆÆW X
}
ØØ 
,
ØØ 
constraints
∞∞ 
:
∞∞ 
table
∞∞ "
=>
∞∞# %
{
±± 
table
≤≤ 
.
≤≤ 

PrimaryKey
≤≤ $
(
≤≤$ %
$str
≤≤% 8
,
≤≤8 9
x
≤≤: ;
=>
≤≤< >
x
≤≤? @
.
≤≤@ A
Id
≤≤A C
)
≤≤C D
;
≤≤D E
table
≥≥ 
.
≥≥ 

ForeignKey
≥≥ $
(
≥≥$ %
name
¥¥ 
:
¥¥ 
$str
¥¥ B
,
¥¥B C
column
µµ 
:
µµ 
x
µµ  !
=>
µµ" $
x
µµ% &
.
µµ& '
CourseId
µµ' /
,
µµ/ 0
principalTable
∂∂ &
:
∂∂& '
$str
∂∂( 1
,
∂∂1 2
principalColumn
∑∑ '
:
∑∑' (
$str
∑∑) -
,
∑∑- .
onDelete
∏∏  
:
∏∏  !
ReferentialAction
∏∏" 3
.
∏∏3 4
Cascade
∏∏4 ;
)
∏∏; <
;
∏∏< =
}
ππ 
)
ππ 
;
ππ 
migrationBuilder
ªª 
.
ªª 
CreateTable
ªª (
(
ªª( )
name
ºº 
:
ºº 
$str
ºº &
,
ºº& '
columns
ΩΩ 
:
ΩΩ 
table
ΩΩ 
=>
ΩΩ !
new
ΩΩ" %
{
ææ 
Id
øø 
=
øø 
table
øø 
.
øø 
Column
øø %
<
øø% &
Guid
øø& *
>
øø* +
(
øø+ ,
type
øø, 0
:
øø0 1
$str
øø2 D
,
øøD E
nullable
øøF N
:
øøN O
false
øøP U
)
øøU V
,
øøV W
CourseSectionId
¿¿ #
=
¿¿$ %
table
¿¿& +
.
¿¿+ ,
Column
¿¿, 2
<
¿¿2 3
Guid
¿¿3 7
>
¿¿7 8
(
¿¿8 9
type
¿¿9 =
:
¿¿= >
$str
¿¿? Q
,
¿¿Q R
nullable
¿¿S [
:
¿¿[ \
false
¿¿] b
)
¿¿b c
,
¿¿c d
DocsUrl
¡¡ 
=
¡¡ 
table
¡¡ #
.
¡¡# $
Column
¡¡$ *
<
¡¡* +
string
¡¡+ 1
>
¡¡1 2
(
¡¡2 3
type
¡¡3 7
:
¡¡7 8
$str
¡¡9 H
,
¡¡H I
nullable
¡¡J R
:
¡¡R S
true
¡¡T X
)
¡¡X Y
,
¡¡Y Z
Name
¬¬ 
=
¬¬ 
table
¬¬  
.
¬¬  !
Column
¬¬! '
<
¬¬' (
string
¬¬( .
>
¬¬. /
(
¬¬/ 0
type
¬¬0 4
:
¬¬4 5
$str
¬¬6 E
,
¬¬E F
nullable
¬¬G O
:
¬¬O P
false
¬¬Q V
)
¬¬V W
,
¬¬W X
SlideUrl
√√ 
=
√√ 
table
√√ $
.
√√$ %
Column
√√% +
<
√√+ ,
string
√√, 2
>
√√2 3
(
√√3 4
type
√√4 8
:
√√8 9
$str
√√: I
,
√√I J
nullable
√√K S
:
√√S T
false
√√U Z
)
√√Z [
,
√√[ \
Type
ƒƒ 
=
ƒƒ 
table
ƒƒ  
.
ƒƒ  !
Column
ƒƒ! '
<
ƒƒ' (
int
ƒƒ( +
>
ƒƒ+ ,
(
ƒƒ, -
type
ƒƒ- 1
:
ƒƒ1 2
$str
ƒƒ3 8
,
ƒƒ8 9
nullable
ƒƒ: B
:
ƒƒB C
true
ƒƒD H
)
ƒƒH I
,
ƒƒI J
VideoUrl
≈≈ 
=
≈≈ 
table
≈≈ $
.
≈≈$ %
Column
≈≈% +
<
≈≈+ ,
string
≈≈, 2
>
≈≈2 3
(
≈≈3 4
type
≈≈4 8
:
≈≈8 9
$str
≈≈: I
,
≈≈I J
nullable
≈≈K S
:
≈≈S T
false
≈≈U Z
)
≈≈Z [
}
∆∆ 
,
∆∆ 
constraints
«« 
:
«« 
table
«« "
=>
««# %
{
»» 
table
…… 
.
…… 

PrimaryKey
…… $
(
……$ %
$str
……% 8
,
……8 9
x
……: ;
=>
……< >
x
……? @
.
……@ A
Id
……A C
)
……C D
;
……D E
table
   
.
   

ForeignKey
   $
(
  $ %
name
ÀÀ 
:
ÀÀ 
$str
ÀÀ P
,
ÀÀP Q
column
ÃÃ 
:
ÃÃ 
x
ÃÃ  !
=>
ÃÃ" $
x
ÃÃ% &
.
ÃÃ& '
CourseSectionId
ÃÃ' 6
,
ÃÃ6 7
principalTable
ÕÕ &
:
ÕÕ& '
$str
ÕÕ( 8
,
ÕÕ8 9
principalColumn
ŒŒ '
:
ŒŒ' (
$str
ŒŒ) -
,
ŒŒ- .
onDelete
œœ  
:
œœ  !
ReferentialAction
œœ" 3
.
œœ3 4
Cascade
œœ4 ;
)
œœ; <
;
œœ< =
}
–– 
)
–– 
;
–– 
migrationBuilder
““ 
.
““ 

UpdateData
““ '
(
““' (
table
”” 
:
”” 
$str
”” $
,
””$ %
	keyColumn
‘‘ 
:
‘‘ 
$str
‘‘ 
,
‘‘  
keyValue
’’ 
:
’’ 
$str
’’ +
,
’’+ ,
columns
÷÷ 
:
÷÷ 
new
÷÷ 
[
÷÷ 
]
÷÷ 
{
÷÷  
$str
÷÷! 3
,
÷÷3 4
$str
÷÷5 A
,
÷÷A B
$str
÷÷C Q
,
÷÷Q R
$str
÷÷S b
}
÷÷c d
,
÷÷d e
values
◊◊ 
:
◊◊ 
new
◊◊ 
object
◊◊ "
[
◊◊" #
]
◊◊# $
{
◊◊% &
$str
◊◊' M
,
◊◊M N
new
◊◊O R
DateTime
◊◊S [
(
◊◊[ \
$num
◊◊\ `
,
◊◊` a
$num
◊◊b c
,
◊◊c d
$num
◊◊e f
,
◊◊f g
$num
◊◊h i
,
◊◊i j
$num
◊◊k m
,
◊◊m n
$num
◊◊o q
,
◊◊q r
$num
◊◊s v
,
◊◊v w
DateTimeKind◊◊x Ñ
.◊◊Ñ Ö
Utc◊◊Ö à
)◊◊à â
.◊◊â ä
AddTicks◊◊ä í
(◊◊í ì
$num◊◊ì ó
)◊◊ó ò
,◊◊ò ô
$str◊◊ö 
,◊◊ Ò
$str◊◊Ú ò
}◊◊ô ö
)◊◊ö õ
;◊◊õ ú
migrationBuilder
ŸŸ 
.
ŸŸ 
CreateIndex
ŸŸ (
(
ŸŸ( )
name
⁄⁄ 
:
⁄⁄ 
$str
⁄⁄ -
,
⁄⁄- .
table
€€ 
:
€€ 
$str
€€  
,
€€  !
column
‹‹ 
:
‹‹ 
$str
‹‹ $
)
‹‹$ %
;
‹‹% &
migrationBuilder
ﬁﬁ 
.
ﬁﬁ 
CreateIndex
ﬁﬁ (
(
ﬁﬁ( )
name
ﬂﬂ 
:
ﬂﬂ 
$str
ﬂﬂ *
,
ﬂﬂ* +
table
‡‡ 
:
‡‡ 
$str
‡‡  
,
‡‡  !
column
·· 
:
·· 
$str
·· !
)
··! "
;
··" #
migrationBuilder
„„ 
.
„„ 
CreateIndex
„„ (
(
„„( )
name
‰‰ 
:
‰‰ 
$str
‰‰ 2
,
‰‰2 3
table
ÂÂ 
:
ÂÂ 
$str
ÂÂ '
,
ÂÂ' (
column
ÊÊ 
:
ÊÊ 
$str
ÊÊ "
)
ÊÊ" #
;
ÊÊ# $
migrationBuilder
ËË 
.
ËË 
CreateIndex
ËË (
(
ËË( )
name
ÈÈ 
:
ÈÈ 
$str
ÈÈ 9
,
ÈÈ9 :
table
ÍÍ 
:
ÍÍ 
$str
ÍÍ '
,
ÍÍ' (
column
ÎÎ 
:
ÎÎ 
$str
ÎÎ )
)
ÎÎ) *
;
ÎÎ* +
migrationBuilder
ÌÌ 
.
ÌÌ 
AddForeignKey
ÌÌ *
(
ÌÌ* +
name
ÓÓ 
:
ÓÓ 
$str
ÓÓ 8
,
ÓÓ8 9
table
ÔÔ 
:
ÔÔ 
$str
ÔÔ  
,
ÔÔ  !
column
 
:
 
$str
 $
,
$ %
principalTable
ÒÒ 
:
ÒÒ 
$str
ÒÒ  ,
,
ÒÒ, -
principalColumn
ÚÚ 
:
ÚÚ  
$str
ÚÚ! %
)
ÚÚ% &
;
ÚÚ& '
migrationBuilder
ÙÙ 
.
ÙÙ 
AddForeignKey
ÙÙ *
(
ÙÙ* +
name
ıı 
:
ıı 
$str
ıı 1
,
ıı1 2
table
ˆˆ 
:
ˆˆ 
$str
ˆˆ  
,
ˆˆ  !
column
˜˜ 
:
˜˜ 
$str
˜˜ !
,
˜˜! "
principalTable
¯¯ 
:
¯¯ 
$str
¯¯  (
,
¯¯( )
principalColumn
˘˘ 
:
˘˘  
$str
˘˘! %
)
˘˘% &
;
˘˘& '
}
˙˙ 	
}
˚˚ 
}¸¸ µ
àD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240701051059_AddMoreUrlToSectionDetails.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public		 

partial		 
class		 &
AddMoreUrlToSectionDetails		 3
:		4 5
	Migration		6 ?
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
RenameColumn )
() *
name 
: 
$str  
,  !
table 
: 
$str /
,/ 0
newName 
: 
$str #
)# $
;$ %
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str 
,  
table 
: 
$str '
,' (
type 
: 
$str %
,% &
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str  
,  !
table 
: 
$str '
,' (
type 
: 
$str %
,% &
nullable 
: 
false 
,  
defaultValue 
: 
$str  
)  !
;! "
migrationBuilder   
.   
	AddColumn   &
<  & '
int  ' *
>  * +
(  + ,
name!! 
:!! 
$str!! 
,!! 
table"" 
:"" 
$str"" '
,""' (
type## 
:## 
$str## 
,## 
nullable$$ 
:$$ 
true$$ 
)$$ 
;$$  
}%% 	
	protected(( 
override(( 
void(( 
Down((  $
((($ %
MigrationBuilder((% 5
migrationBuilder((6 F
)((F G
{)) 	
migrationBuilder** 
.** 

DropColumn** '
(**' (
name++ 
:++ 
$str++ 
,++  
table,, 
:,, 
$str,, '
),,' (
;,,( )
migrationBuilder.. 
... 

DropColumn.. '
(..' (
name// 
:// 
$str//  
,//  !
table00 
:00 
$str00 '
)00' (
;00( )
migrationBuilder22 
.22 

DropColumn22 '
(22' (
name33 
:33 
$str33 
,33 
table44 
:44 
$str44 '
)44' (
;44( )
migrationBuilder66 
.66 
RenameColumn66 )
(66) *
name77 
:77 
$str77  
,77  !
table88 
:88 
$str88 /
,88/ 0
newName99 
:99 
$str99 #
)99# $
;99$ %
};; 	
}<< 
}== ü9
âD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240629022632_AddMoreColumnForCourseTable.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public		 

partial		 
class		 '
AddMoreColumnForCourseTable		 4
:		5 6
	Migration		7 @
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
	AddColumn &
<& '
DateTime' /
>/ 0
(0 1
name 
: 
$str #
,# $
table 
: 
$str '
,' (
type 
: 
$str !
,! "
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
	AddColumn &
<& '
int' *
>* +
(+ ,
name 
: 
$str 
,  
table 
: 
$str '
,' (
type 
: 
$str 
, 
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str !
,! "
table 
: 
$str  
,  !
type 
: 
$str %
,% &
nullable 
: 
true 
) 
;  
migrationBuilder   
.   
	AddColumn   &
<  & '
DateTime  ' /
>  / 0
(  0 1
name!! 
:!! 
$str!! #
,!!# $
table"" 
:"" 
$str""  
,""  !
type## 
:## 
$str## !
,##! "
nullable$$ 
:$$ 
true$$ 
)$$ 
;$$  
migrationBuilder&& 
.&& 
	AddColumn&& &
<&&& '
string&&' -
>&&- .
(&&. /
name'' 
:'' 
$str''  
,''  !
table(( 
:(( 
$str((  
,((  !
type)) 
:)) 
$str)) %
,))% &
nullable** 
:** 
true** 
)** 
;**  
migrationBuilder,, 
.,, 
	AddColumn,, &
<,,& '
DateTime,,' /
>,,/ 0
(,,0 1
name-- 
:-- 
$str-- "
,--" #
table.. 
:.. 
$str..  
,..  !
type// 
:// 
$str// !
,//! "
nullable00 
:00 
true00 
)00 
;00  
migrationBuilder22 
.22 

UpdateData22 '
(22' (
table33 
:33 
$str33 $
,33$ %
	keyColumn44 
:44 
$str44 
,44  
keyValue55 
:55 
$str55 +
,55+ ,
columns66 
:66 
new66 
[66 
]66 
{66  
$str66! 3
,663 4
$str665 A
,66A B
$str66C Q
,66Q R
$str66S b
}66c d
,66d e
values77 
:77 
new77 
object77 "
[77" #
]77# $
{77% &
$str77' M
,77M N
new77O R
DateTime77S [
(77[ \
$num77\ `
,77` a
$num77b c
,77c d
$num77e g
,77g h
$num77i j
,77j k
$num77l n
,77n o
$num77p r
,77r s
$num77t w
,77w x
DateTimeKind	77y Ö
.
77Ö Ü
Utc
77Ü â
)
77â ä
.
77ä ã
AddTicks
77ã ì
(
77ì î
$num
77î ò
)
77ò ô
,
77ô ö
$str
77õ Ò
,
77Ò Ú
$str
77Û ô
}
77ö õ
)
77õ ú
;
77ú ù
}88 	
	protected;; 
override;; 
void;; 
Down;;  $
(;;$ %
MigrationBuilder;;% 5
migrationBuilder;;6 F
);;F G
{<< 	
migrationBuilder== 
.== 

DropColumn== '
(==' (
name>> 
:>> 
$str>> #
,>># $
table?? 
:?? 
$str?? '
)??' (
;??( )
migrationBuilderAA 
.AA 

DropColumnAA '
(AA' (
nameBB 
:BB 
$strBB 
,BB  
tableCC 
:CC 
$strCC '
)CC' (
;CC( )
migrationBuilderEE 
.EE 

DropColumnEE '
(EE' (
nameFF 
:FF 
$strFF !
,FF! "
tableGG 
:GG 
$strGG  
)GG  !
;GG! "
migrationBuilderII 
.II 

DropColumnII '
(II' (
nameJJ 
:JJ 
$strJJ #
,JJ# $
tableKK 
:KK 
$strKK  
)KK  !
;KK! "
migrationBuilderMM 
.MM 

DropColumnMM '
(MM' (
nameNN 
:NN 
$strNN  
,NN  !
tableOO 
:OO 
$strOO  
)OO  !
;OO! "
migrationBuilderQQ 
.QQ 

DropColumnQQ '
(QQ' (
nameRR 
:RR 
$strRR "
,RR" #
tableSS 
:SS 
$strSS  
)SS  !
;SS! "
migrationBuilderUU 
.UU 

UpdateDataUU '
(UU' (
tableVV 
:VV 
$strVV $
,VV$ %
	keyColumnWW 
:WW 
$strWW 
,WW  
keyValueXX 
:XX 
$strXX +
,XX+ ,
columnsYY 
:YY 
newYY 
[YY 
]YY 
{YY  
$strYY! 3
,YY3 4
$strYY5 A
,YYA B
$strYYC Q
,YYQ R
$strYYS b
}YYc d
,YYd e
valuesZZ 
:ZZ 
newZZ 
objectZZ "
[ZZ" #
]ZZ# $
{ZZ% &
$strZZ' M
,ZZM N
newZZO R
DateTimeZZS [
(ZZ[ \
$numZZ\ `
,ZZ` a
$numZZb c
,ZZc d
$numZZe g
,ZZg h
$numZZi k
,ZZk l
$numZZm o
,ZZo p
$numZZq s
,ZZs t
$numZZu x
,ZZx y
DateTimeKind	ZZz Ü
.
ZZÜ á
Utc
ZZá ä
)
ZZä ã
.
ZZã å
AddTicks
ZZå î
(
ZZî ï
$num
ZZï ô
)
ZZô ö
,
ZZö õ
$str
ZZú Ú
,
ZZÚ Û
$str
ZZÙ ö
}
ZZõ ú
)
ZZú ù
;
ZZù û
}[[ 	
}\\ 
}]] â&
êD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240628165735_AllowNullForCourseVerionInstructor.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public		 

partial		 
class		 .
"AllowNullForCourseVerionInstructor		 ;
:		< =
	Migration		> G
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
AlterColumn (
<( )
Guid) -
>- .
(. /
name 
: 
$str $
,$ %
table 
: 
$str '
,' (
type 
: 
$str (
,( )
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
Guid# '
)' (
,( )
oldType 
: 
$str +
)+ ,
;, -
migrationBuilder 
. 

UpdateData '
(' (
table 
: 
$str $
,$ %
	keyColumn 
: 
$str 
,  
keyValue 
: 
$str +
,+ ,
columns 
: 
new 
[ 
] 
{  
$str! 3
,3 4
$str5 A
,A B
$strC Q
,Q R
$strS b
}c d
,d e
values 
: 
new 
object "
[" #
]# $
{% &
$str' M
,M N
newO R
DateTimeS [
([ \
$num\ `
,` a
$numb c
,c d
$nume g
,g h
$numi k
,k l
$numm o
,o p
$numq s
,s t
$numu x
,x y
DateTimeKind	z Ü
.
Ü á
Utc
á ä
)
ä ã
.
ã å
AddTicks
å î
(
î ï
$num
ï ô
)
ô ö
,
ö õ
$str
ú Ú
,
Ú Û
$str
Ù ö
}
õ ú
)
ú ù
;
ù û
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{   	
migrationBuilder!! 
.!! 
AlterColumn!! (
<!!( )
Guid!!) -
>!!- .
(!!. /
name"" 
:"" 
$str"" $
,""$ %
table## 
:## 
$str## '
,##' (
type$$ 
:$$ 
$str$$ (
,$$( )
nullable%% 
:%% 
false%% 
,%%  
defaultValue&& 
:&& 
new&& !
Guid&&" &
(&&& '
$str&&' M
)&&M N
,&&N O

oldClrType'' 
:'' 
typeof'' "
(''" #
Guid''# '
)''' (
,''( )
oldType(( 
:(( 
$str(( +
,((+ ,
oldNullable)) 
:)) 
true)) !
)))! "
;))" #
migrationBuilder++ 
.++ 

UpdateData++ '
(++' (
table,, 
:,, 
$str,, $
,,,$ %
	keyColumn-- 
:-- 
$str-- 
,--  
keyValue.. 
:.. 
$str.. +
,..+ ,
columns// 
:// 
new// 
[// 
]// 
{//  
$str//! 3
,//3 4
$str//5 A
,//A B
$str//C Q
,//Q R
$str//S b
}//c d
,//d e
values00 
:00 
new00 
object00 "
[00" #
]00# $
{00% &
$str00' M
,00M N
new00O R
DateTime00S [
(00[ \
$num00\ `
,00` a
$num00b c
,00c d
$num00e g
,00g h
$num00i k
,00k l
$num00m o
,00o p
$num00q s
,00s t
$num00u x
,00x y
DateTimeKind	00z Ü
.
00Ü á
Utc
00á ä
)
00ä ã
.
00ã å
AddTicks
00å î
(
00î ï
$num
00ï ô
)
00ô ö
,
00ö õ
$str
00ú Ú
,
00Ú Û
$str
00Ù ö
}
00õ ú
)
00ú ù
;
00ù û
}11 	
}22 
}33 †´
ÖD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240628164825_AllowNullForCourseProps.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public		 

partial		 
class		 #
AllowNullForCourseProps		 0
:		1 2
	Migration		3 <
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str 8
,8 9
table 
: 
$str  
)  !
;! "
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str ;
,; <
table 
: 
$str  
)  !
;! "
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str 1
,1 2
table 
: 
$str  
)  !
;! "
migrationBuilder 
. 
AlterColumn (
<( )
int) ,
>, -
(- .
name 
: 
$str 
,  
table 
: 
$str  
,  !
type 
: 
$str 
, 
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
int# &
)& '
,' (
oldType   
:   
$str   
)   
;    
migrationBuilder"" 
."" 
AlterColumn"" (
<""( )
float"") .
>"". /
(""/ 0
name## 
:## 
$str## !
,##! "
table$$ 
:$$ 
$str$$  
,$$  !
type%% 
:%% 
$str%% 
,%% 
nullable&& 
:&& 
true&& 
,&& 

oldClrType'' 
:'' 
typeof'' "
(''" #
float''# (
)''( )
,'') *
oldType(( 
:(( 
$str(( 
)((  
;((  !
migrationBuilder** 
.** 
AlterColumn** (
<**( )
string**) /
>**/ 0
(**0 1
name++ 
:++ 
$str++ 
,++ 
table,, 
:,, 
$str,,  
,,,  !
type-- 
:-- 
$str-- %
,--% &
nullable.. 
:.. 
true.. 
,.. 

oldClrType// 
:// 
typeof// "
(//" #
string//# )
)//) *
,//* +
oldType00 
:00 
$str00 (
)00( )
;00) *
migrationBuilder22 
.22 
AlterColumn22 (
<22( )
int22) ,
>22, -
(22- .
name33 
:33 
$str33 #
,33# $
table44 
:44 
$str44  
,44  !
type55 
:55 
$str55 
,55 
nullable66 
:66 
true66 
,66 

oldClrType77 
:77 
typeof77 "
(77" #
int77# &
)77& '
,77' (
oldType88 
:88 
$str88 
)88 
;88  
migrationBuilder:: 
.:: 
AlterColumn:: (
<::( )
double::) /
>::/ 0
(::0 1
name;; 
:;; 
$str;; 
,;; 
table<< 
:<< 
$str<<  
,<<  !
type== 
:== 
$str== 
,== 
nullable>> 
:>> 
true>> 
,>> 

oldClrType?? 
:?? 
typeof?? "
(??" #
double??# )
)??) *
,??* +
oldType@@ 
:@@ 
$str@@  
)@@  !
;@@! "
migrationBuilderBB 
.BB 
AlterColumnBB (
<BB( )
GuidBB) -
>BB- .
(BB. /
nameCC 
:CC 
$strCC 
,CC  
tableDD 
:DD 
$strDD  
,DD  !
typeEE 
:EE 
$strEE (
,EE( )
nullableFF 
:FF 
trueFF 
,FF 

oldClrTypeGG 
:GG 
typeofGG "
(GG" #
GuidGG# '
)GG' (
,GG( )
oldTypeHH 
:HH 
$strHH +
)HH+ ,
;HH, -
migrationBuilderJJ 
.JJ 
AlterColumnJJ (
<JJ( )
intJJ) ,
>JJ, -
(JJ- .
nameKK 
:KK 
$strKK $
,KK$ %
tableLL 
:LL 
$strLL  
,LL  !
typeMM 
:MM 
$strMM 
,MM 
nullableNN 
:NN 
trueNN 
,NN 

oldClrTypeOO 
:OO 
typeofOO "
(OO" #
intOO# &
)OO& '
,OO' (
oldTypePP 
:PP 
$strPP 
)PP 
;PP  
migrationBuilderRR 
.RR 
AlterColumnRR (
<RR( )
GuidRR) -
>RR- .
(RR. /
nameSS 
:SS 
$strSS $
,SS$ %
tableTT 
:TT 
$strTT  
,TT  !
typeUU 
:UU 
$strUU (
,UU( )
nullableVV 
:VV 
trueVV 
,VV 

oldClrTypeWW 
:WW 
typeofWW "
(WW" #
GuidWW# '
)WW' (
,WW( )
oldTypeXX 
:XX 
$strXX +
)XX+ ,
;XX, -
migrationBuilderZZ 
.ZZ 
AlterColumnZZ (
<ZZ( )
stringZZ) /
>ZZ/ 0
(ZZ0 1
name[[ 
:[[ 
$str[[ #
,[[# $
table\\ 
:\\ 
$str\\  
,\\  !
type]] 
:]] 
$str]] %
,]]% &
nullable^^ 
:^^ 
true^^ 
,^^ 

oldClrType__ 
:__ 
typeof__ "
(__" #
string__# )
)__) *
,__* +
oldType`` 
:`` 
$str`` (
)``( )
;``) *
migrationBuilderbb 
.bb 
AlterColumnbb (
<bb( )
stringbb) /
>bb/ 0
(bb0 1
namecc 
:cc 
$strcc 
,cc 
tabledd 
:dd 
$strdd  
,dd  !
typeee 
:ee 
$stree %
,ee% &
nullableff 
:ff 
trueff 
,ff 

oldClrTypegg 
:gg 
typeofgg "
(gg" #
stringgg# )
)gg) *
,gg* +
oldTypehh 
:hh 
$strhh (
)hh( )
;hh) *
migrationBuilderjj 
.jj 
AlterColumnjj (
<jj( )
Guidjj) -
>jj- .
(jj. /
namekk 
:kk 
$strkk "
,kk" #
tablell 
:ll 
$strll  
,ll  !
typemm 
:mm 
$strmm (
,mm( )
nullablenn 
:nn 
truenn 
,nn 

oldClrTypeoo 
:oo 
typeofoo "
(oo" #
Guidoo# '
)oo' (
,oo( )
oldTypepp 
:pp 
$strpp +
)pp+ ,
;pp, -
migrationBuilderrr 
.rr 
AddForeignKeyrr *
(rr* +
namess 
:ss 
$strss 8
,ss8 9
tablett 
:tt 
$strtt  
,tt  !
columnuu 
:uu 
$struu $
,uu$ %
principalTablevv 
:vv 
$strvv  ,
,vv, -
principalColumnww 
:ww  
$strww! %
)ww% &
;ww& '
migrationBuilderyy 
.yy 
AddForeignKeyyy *
(yy* +
namezz 
:zz 
$strzz ;
,zz; <
table{{ 
:{{ 
$str{{  
,{{  !
column|| 
:|| 
$str|| &
,||& '
principalTable}} 
:}} 
$str}}  -
,}}- .
principalColumn~~ 
:~~  
$str~~! /
)~~/ 0
;~~0 1
migrationBuilder
ÄÄ 
.
ÄÄ 
AddForeignKey
ÄÄ *
(
ÄÄ* +
name
ÅÅ 
:
ÅÅ 
$str
ÅÅ 1
,
ÅÅ1 2
table
ÇÇ 
:
ÇÇ 
$str
ÇÇ  
,
ÇÇ  !
column
ÉÉ 
:
ÉÉ 
$str
ÉÉ !
,
ÉÉ! "
principalTable
ÑÑ 
:
ÑÑ 
$str
ÑÑ  (
,
ÑÑ( )
principalColumn
ÖÖ 
:
ÖÖ  
$str
ÖÖ! %
)
ÖÖ% &
;
ÖÖ& '
}
ÜÜ 	
	protected
ââ 
override
ââ 
void
ââ 
Down
ââ  $
(
ââ$ %
MigrationBuilder
ââ% 5
migrationBuilder
ââ6 F
)
ââF G
{
ää 	
migrationBuilder
ãã 
.
ãã 
DropForeignKey
ãã +
(
ãã+ ,
name
åå 
:
åå 
$str
åå 8
,
åå8 9
table
çç 
:
çç 
$str
çç  
)
çç  !
;
çç! "
migrationBuilder
èè 
.
èè 
DropForeignKey
èè +
(
èè+ ,
name
êê 
:
êê 
$str
êê ;
,
êê; <
table
ëë 
:
ëë 
$str
ëë  
)
ëë  !
;
ëë! "
migrationBuilder
ìì 
.
ìì 
DropForeignKey
ìì +
(
ìì+ ,
name
îî 
:
îî 
$str
îî 1
,
îî1 2
table
ïï 
:
ïï 
$str
ïï  
)
ïï  !
;
ïï! "
migrationBuilder
óó 
.
óó 
AlterColumn
óó (
<
óó( )
int
óó) ,
>
óó, -
(
óó- .
name
òò 
:
òò 
$str
òò 
,
òò  
table
ôô 
:
ôô 
$str
ôô  
,
ôô  !
type
öö 
:
öö 
$str
öö 
,
öö 
nullable
õõ 
:
õõ 
false
õõ 
,
õõ  
defaultValue
úú 
:
úú 
$num
úú 
,
úú  

oldClrType
ùù 
:
ùù 
typeof
ùù "
(
ùù" #
int
ùù# &
)
ùù& '
,
ùù' (
oldType
ûû 
:
ûû 
$str
ûû 
,
ûû 
oldNullable
üü 
:
üü 
true
üü !
)
üü! "
;
üü" #
migrationBuilder
°° 
.
°° 
AlterColumn
°° (
<
°°( )
float
°°) .
>
°°. /
(
°°/ 0
name
¢¢ 
:
¢¢ 
$str
¢¢ !
,
¢¢! "
table
££ 
:
££ 
$str
££  
,
££  !
type
§§ 
:
§§ 
$str
§§ 
,
§§ 
nullable
•• 
:
•• 
false
•• 
,
••  
defaultValue
¶¶ 
:
¶¶ 
$num
¶¶  
,
¶¶  !

oldClrType
ßß 
:
ßß 
typeof
ßß "
(
ßß" #
float
ßß# (
)
ßß( )
,
ßß) *
oldType
®® 
:
®® 
$str
®® 
,
®®  
oldNullable
©© 
:
©© 
true
©© !
)
©©! "
;
©©" #
migrationBuilder
´´ 
.
´´ 
AlterColumn
´´ (
<
´´( )
string
´´) /
>
´´/ 0
(
´´0 1
name
¨¨ 
:
¨¨ 
$str
¨¨ 
,
¨¨ 
table
≠≠ 
:
≠≠ 
$str
≠≠  
,
≠≠  !
type
ÆÆ 
:
ÆÆ 
$str
ÆÆ %
,
ÆÆ% &
nullable
ØØ 
:
ØØ 
false
ØØ 
,
ØØ  
defaultValue
∞∞ 
:
∞∞ 
$str
∞∞  
,
∞∞  !

oldClrType
±± 
:
±± 
typeof
±± "
(
±±" #
string
±±# )
)
±±) *
,
±±* +
oldType
≤≤ 
:
≤≤ 
$str
≤≤ (
,
≤≤( )
oldNullable
≥≥ 
:
≥≥ 
true
≥≥ !
)
≥≥! "
;
≥≥" #
migrationBuilder
µµ 
.
µµ 
AlterColumn
µµ (
<
µµ( )
int
µµ) ,
>
µµ, -
(
µµ- .
name
∂∂ 
:
∂∂ 
$str
∂∂ #
,
∂∂# $
table
∑∑ 
:
∑∑ 
$str
∑∑  
,
∑∑  !
type
∏∏ 
:
∏∏ 
$str
∏∏ 
,
∏∏ 
nullable
ππ 
:
ππ 
false
ππ 
,
ππ  
defaultValue
∫∫ 
:
∫∫ 
$num
∫∫ 
,
∫∫  

oldClrType
ªª 
:
ªª 
typeof
ªª "
(
ªª" #
int
ªª# &
)
ªª& '
,
ªª' (
oldType
ºº 
:
ºº 
$str
ºº 
,
ºº 
oldNullable
ΩΩ 
:
ΩΩ 
true
ΩΩ !
)
ΩΩ! "
;
ΩΩ" #
migrationBuilder
øø 
.
øø 
AlterColumn
øø (
<
øø( )
double
øø) /
>
øø/ 0
(
øø0 1
name
¿¿ 
:
¿¿ 
$str
¿¿ 
,
¿¿ 
table
¡¡ 
:
¡¡ 
$str
¡¡  
,
¡¡  !
type
¬¬ 
:
¬¬ 
$str
¬¬ 
,
¬¬ 
nullable
√√ 
:
√√ 
false
√√ 
,
√√  
defaultValue
ƒƒ 
:
ƒƒ 
$num
ƒƒ !
,
ƒƒ! "

oldClrType
≈≈ 
:
≈≈ 
typeof
≈≈ "
(
≈≈" #
double
≈≈# )
)
≈≈) *
,
≈≈* +
oldType
∆∆ 
:
∆∆ 
$str
∆∆  
,
∆∆  !
oldNullable
«« 
:
«« 
true
«« !
)
««! "
;
««" #
migrationBuilder
…… 
.
…… 
AlterColumn
…… (
<
……( )
Guid
……) -
>
……- .
(
……. /
name
   
:
   
$str
   
,
    
table
ÀÀ 
:
ÀÀ 
$str
ÀÀ  
,
ÀÀ  !
type
ÃÃ 
:
ÃÃ 
$str
ÃÃ (
,
ÃÃ( )
nullable
ÕÕ 
:
ÕÕ 
false
ÕÕ 
,
ÕÕ  
defaultValue
ŒŒ 
:
ŒŒ 
new
ŒŒ !
Guid
ŒŒ" &
(
ŒŒ& '
$str
ŒŒ' M
)
ŒŒM N
,
ŒŒN O

oldClrType
œœ 
:
œœ 
typeof
œœ "
(
œœ" #
Guid
œœ# '
)
œœ' (
,
œœ( )
oldType
–– 
:
–– 
$str
–– +
,
––+ ,
oldNullable
—— 
:
—— 
true
—— !
)
——! "
;
——" #
migrationBuilder
”” 
.
”” 
AlterColumn
”” (
<
””( )
int
””) ,
>
””, -
(
””- .
name
‘‘ 
:
‘‘ 
$str
‘‘ $
,
‘‘$ %
table
’’ 
:
’’ 
$str
’’  
,
’’  !
type
÷÷ 
:
÷÷ 
$str
÷÷ 
,
÷÷ 
nullable
◊◊ 
:
◊◊ 
false
◊◊ 
,
◊◊  
defaultValue
ÿÿ 
:
ÿÿ 
$num
ÿÿ 
,
ÿÿ  

oldClrType
ŸŸ 
:
ŸŸ 
typeof
ŸŸ "
(
ŸŸ" #
int
ŸŸ# &
)
ŸŸ& '
,
ŸŸ' (
oldType
⁄⁄ 
:
⁄⁄ 
$str
⁄⁄ 
,
⁄⁄ 
oldNullable
€€ 
:
€€ 
true
€€ !
)
€€! "
;
€€" #
migrationBuilder
›› 
.
›› 
AlterColumn
›› (
<
››( )
Guid
››) -
>
››- .
(
››. /
name
ﬁﬁ 
:
ﬁﬁ 
$str
ﬁﬁ $
,
ﬁﬁ$ %
table
ﬂﬂ 
:
ﬂﬂ 
$str
ﬂﬂ  
,
ﬂﬂ  !
type
‡‡ 
:
‡‡ 
$str
‡‡ (
,
‡‡( )
nullable
·· 
:
·· 
false
·· 
,
··  
defaultValue
‚‚ 
:
‚‚ 
new
‚‚ !
Guid
‚‚" &
(
‚‚& '
$str
‚‚' M
)
‚‚M N
,
‚‚N O

oldClrType
„„ 
:
„„ 
typeof
„„ "
(
„„" #
Guid
„„# '
)
„„' (
,
„„( )
oldType
‰‰ 
:
‰‰ 
$str
‰‰ +
,
‰‰+ ,
oldNullable
ÂÂ 
:
ÂÂ 
true
ÂÂ !
)
ÂÂ! "
;
ÂÂ" #
migrationBuilder
ÁÁ 
.
ÁÁ 
AlterColumn
ÁÁ (
<
ÁÁ( )
string
ÁÁ) /
>
ÁÁ/ 0
(
ÁÁ0 1
name
ËË 
:
ËË 
$str
ËË #
,
ËË# $
table
ÈÈ 
:
ÈÈ 
$str
ÈÈ  
,
ÈÈ  !
type
ÍÍ 
:
ÍÍ 
$str
ÍÍ %
,
ÍÍ% &
nullable
ÎÎ 
:
ÎÎ 
false
ÎÎ 
,
ÎÎ  
defaultValue
ÏÏ 
:
ÏÏ 
$str
ÏÏ  
,
ÏÏ  !

oldClrType
ÌÌ 
:
ÌÌ 
typeof
ÌÌ "
(
ÌÌ" #
string
ÌÌ# )
)
ÌÌ) *
,
ÌÌ* +
oldType
ÓÓ 
:
ÓÓ 
$str
ÓÓ (
,
ÓÓ( )
oldNullable
ÔÔ 
:
ÔÔ 
true
ÔÔ !
)
ÔÔ! "
;
ÔÔ" #
migrationBuilder
ÒÒ 
.
ÒÒ 
AlterColumn
ÒÒ (
<
ÒÒ( )
string
ÒÒ) /
>
ÒÒ/ 0
(
ÒÒ0 1
name
ÚÚ 
:
ÚÚ 
$str
ÚÚ 
,
ÚÚ 
table
ÛÛ 
:
ÛÛ 
$str
ÛÛ  
,
ÛÛ  !
type
ÙÙ 
:
ÙÙ 
$str
ÙÙ %
,
ÙÙ% &
nullable
ıı 
:
ıı 
false
ıı 
,
ıı  
defaultValue
ˆˆ 
:
ˆˆ 
$str
ˆˆ  
,
ˆˆ  !

oldClrType
˜˜ 
:
˜˜ 
typeof
˜˜ "
(
˜˜" #
string
˜˜# )
)
˜˜) *
,
˜˜* +
oldType
¯¯ 
:
¯¯ 
$str
¯¯ (
,
¯¯( )
oldNullable
˘˘ 
:
˘˘ 
true
˘˘ !
)
˘˘! "
;
˘˘" #
migrationBuilder
˚˚ 
.
˚˚ 
AlterColumn
˚˚ (
<
˚˚( )
Guid
˚˚) -
>
˚˚- .
(
˚˚. /
name
¸¸ 
:
¸¸ 
$str
¸¸ "
,
¸¸" #
table
˝˝ 
:
˝˝ 
$str
˝˝  
,
˝˝  !
type
˛˛ 
:
˛˛ 
$str
˛˛ (
,
˛˛( )
nullable
ˇˇ 
:
ˇˇ 
false
ˇˇ 
,
ˇˇ  
defaultValue
ÄÄ 
:
ÄÄ 
new
ÄÄ !
Guid
ÄÄ" &
(
ÄÄ& '
$str
ÄÄ' M
)
ÄÄM N
,
ÄÄN O

oldClrType
ÅÅ 
:
ÅÅ 
typeof
ÅÅ "
(
ÅÅ" #
Guid
ÅÅ# '
)
ÅÅ' (
,
ÅÅ( )
oldType
ÇÇ 
:
ÇÇ 
$str
ÇÇ +
,
ÇÇ+ ,
oldNullable
ÉÉ 
:
ÉÉ 
true
ÉÉ !
)
ÉÉ! "
;
ÉÉ" #
migrationBuilder
ÖÖ 
.
ÖÖ 
AddForeignKey
ÖÖ *
(
ÖÖ* +
name
ÜÜ 
:
ÜÜ 
$str
ÜÜ 8
,
ÜÜ8 9
table
áá 
:
áá 
$str
áá  
,
áá  !
column
àà 
:
àà 
$str
àà $
,
àà$ %
principalTable
ââ 
:
ââ 
$str
ââ  ,
,
ââ, -
principalColumn
ää 
:
ää  
$str
ää! %
,
ää% &
onDelete
ãã 
:
ãã 
ReferentialAction
ãã +
.
ãã+ ,
Cascade
ãã, 3
)
ãã3 4
;
ãã4 5
migrationBuilder
çç 
.
çç 
AddForeignKey
çç *
(
çç* +
name
éé 
:
éé 
$str
éé ;
,
éé; <
table
èè 
:
èè 
$str
èè  
,
èè  !
column
êê 
:
êê 
$str
êê &
,
êê& '
principalTable
ëë 
:
ëë 
$str
ëë  -
,
ëë- .
principalColumn
íí 
:
íí  
$str
íí! /
,
íí/ 0
onDelete
ìì 
:
ìì 
ReferentialAction
ìì +
.
ìì+ ,
Cascade
ìì, 3
)
ìì3 4
;
ìì4 5
migrationBuilder
ïï 
.
ïï 
AddForeignKey
ïï *
(
ïï* +
name
ññ 
:
ññ 
$str
ññ 1
,
ññ1 2
table
óó 
:
óó 
$str
óó  
,
óó  !
column
òò 
:
òò 
$str
òò !
,
òò! "
principalTable
ôô 
:
ôô 
$str
ôô  (
,
ôô( )
principalColumn
öö 
:
öö  
$str
öö! %
,
öö% &
onDelete
õõ 
:
õõ 
ReferentialAction
õõ +
.
õõ+ ,
Cascade
õõ, 3
)
õõ3 4
;
õõ4 5
}
úú 	
}
ùù 
}ûû ò
âD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240628164354_RenameColumnInCourseVersion.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public		 

partial		 
class		 '
RenameColumnInCourseVersion		 4
:		5 6
	Migration		7 @
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str A
,A B
table 
: 
$str '
)' (
;( )
migrationBuilder 
. 
RenameColumn )
() *
name 
: 
$str '
,' (
table 
: 
$str '
,' (
newName 
: 
$str #
)# $
;$ %
migrationBuilder 
. 
RenameIndex (
(( )
name 
: 
$str 9
,9 :
table 
: 
$str '
,' (
newName 
: 
$str 5
)5 6
;6 7
migrationBuilder 
. 
AddForeignKey *
(* +
name 
: 
$str :
,: ;
table 
: 
$str '
,' (
column 
: 
$str "
," #
principalTable   
:   
$str    )
,  ) *
principalColumn!! 
:!!  
$str!!! %
)!!% &
;!!& '
}"" 	
	protected%% 
override%% 
void%% 
Down%%  $
(%%$ %
MigrationBuilder%%% 5
migrationBuilder%%6 F
)%%F G
{&& 	
migrationBuilder'' 
.'' 
DropForeignKey'' +
(''+ ,
name(( 
:(( 
$str(( :
,((: ;
table)) 
:)) 
$str)) '
)))' (
;))( )
migrationBuilder++ 
.++ 
RenameColumn++ )
(++) *
name,, 
:,, 
$str,,  
,,,  !
table-- 
:-- 
$str-- '
,--' (
newName.. 
:.. 
$str.. *
)..* +
;..+ ,
migrationBuilder00 
.00 
RenameIndex00 (
(00( )
name11 
:11 
$str11 2
,112 3
table22 
:22 
$str22 '
,22' (
newName33 
:33 
$str33 <
)33< =
;33= >
migrationBuilder55 
.55 
AddForeignKey55 *
(55* +
name66 
:66 
$str66 A
,66A B
table77 
:77 
$str77 '
,77' (
column88 
:88 
$str88 )
,88) *
principalTable99 
:99 
$str99  )
,99) *
principalColumn:: 
:::  
$str::! %
)::% &
;::& '
};; 	
}<< 
}== ˇQ
êD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240628080934_RemoveStatusTableAndSomeForeignkey.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public		 

partial		 
class		 .
"RemoveStatusTableAndSomeForeignkey		 ;
:		< =
	Migration		> G
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str O
,O P
table 
: 
$str .
). /
;/ 0
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str Q
,Q R
table 
: 
$str /
)/ 0
;0 1
migrationBuilder 
. 
	DropTable &
(& '
name 
: 
$str 2
)2 3
;3 4
migrationBuilder 
. 
	DropTable &
(& '
name 
: 
$str 3
)3 4
;4 5
migrationBuilder 
. 
	DropIndex &
(& '
name 
: 
$str B
,B C
table 
: 
$str /
)/ 0
;0 1
migrationBuilder   
.   
	DropIndex   &
(  & '
name!! 
:!! 
$str!! @
,!!@ A
table"" 
:"" 
$str"" .
)"". /
;""/ 0
migrationBuilder$$ 
.$$ 

DropColumn$$ '
($$' (
name%% 
:%% 
$str%% (
,%%( )
table&& 
:&& 
$str&& /
)&&/ 0
;&&0 1
migrationBuilder(( 
.(( 

DropColumn(( '
(((' (
name)) 
:)) 
$str)) '
,))' (
table** 
:** 
$str** .
)**. /
;**/ 0
}++ 	
	protected.. 
override.. 
void.. 
Down..  $
(..$ %
MigrationBuilder..% 5
migrationBuilder..6 F
)..F G
{// 	
migrationBuilder00 
.00 
	AddColumn00 &
<00& '
Guid00' +
>00+ ,
(00, -
name11 
:11 
$str11 (
,11( )
table22 
:22 
$str22 /
,22/ 0
type33 
:33 
$str33 (
,33( )
nullable44 
:44 
false44 
,44  
defaultValue55 
:55 
new55 !
Guid55" &
(55& '
$str55' M
)55M N
)55N O
;55O P
migrationBuilder77 
.77 
	AddColumn77 &
<77& '
Guid77' +
>77+ ,
(77, -
name88 
:88 
$str88 '
,88' (
table99 
:99 
$str99 .
,99. /
type:: 
::: 
$str:: (
,::( )
nullable;; 
:;; 
true;; 
);; 
;;;  
migrationBuilder== 
.== 
CreateTable== (
(==( )
name>> 
:>> 
$str>> 2
,>>2 3
columns?? 
:?? 
table?? 
=>?? !
new??" %
{@@ 
IdAA 
=AA 
tableAA 
.AA 
ColumnAA %
<AA% &
GuidAA& *
>AA* +
(AA+ ,
typeAA, 0
:AA0 1
$strAA2 D
,AAD E
nullableAAF N
:AAN O
falseAAP U
)AAU V
,AAV W"
CourseSectionVersionIdBB *
=BB+ ,
tableBB- 2
.BB2 3
ColumnBB3 9
<BB9 :
GuidBB: >
>BB> ?
(BB? @
typeBB@ D
:BBD E
$strBBF X
,BBX Y
nullableBBZ b
:BBb c
trueBBd h
)BBh i
,BBi j

CreateTimeCC 
=CC  
tableCC! &
.CC& '
ColumnCC' -
<CC- .
DateTimeCC. 6
>CC6 7
(CC7 8
typeCC8 <
:CC< =
$strCC> I
,CCI J
nullableCCK S
:CCS T
falseCCU Z
)CCZ [
,CC[ \
StatusDD 
=DD 
tableDD "
.DD" #
ColumnDD# )
<DD) *
intDD* -
>DD- .
(DD. /
typeDD/ 3
:DD3 4
$strDD5 :
,DD: ;
nullableDD< D
:DDD E
falseDDF K
)DDK L
}EE 
,EE 
constraintsFF 
:FF 
tableFF "
=>FF# %
{GG 
tableHH 
.HH 

PrimaryKeyHH $
(HH$ %
$strHH% D
,HHD E
xHHF G
=>HHH J
xHHK L
.HHL M
IdHHM O
)HHO P
;HHP Q
tableII 
.II 

ForeignKeyII $
(II$ %
nameJJ 
:JJ 
$strJJ j
,JJj k
columnKK 
:KK 
xKK  !
=>KK" $
xKK% &
.KK& '"
CourseSectionVersionIdKK' =
,KK= >
principalTableLL &
:LL& '
$strLL( ?
,LL? @
principalColumnMM '
:MM' (
$strMM) -
)MM- .
;MM. /
}NN 
)NN 
;NN 
migrationBuilderPP 
.PP 
CreateTablePP (
(PP( )
nameQQ 
:QQ 
$strQQ 3
,QQ3 4
columnsRR 
:RR 
tableRR 
=>RR !
newRR" %
{SS 
IdTT 
=TT 
tableTT 
.TT 
ColumnTT %
<TT% &
GuidTT& *
>TT* +
(TT+ ,
typeTT, 0
:TT0 1
$strTT2 D
,TTD E
nullableTTF N
:TTN O
falseTTP U
)TTU V
,TTV W#
SectionDetailsVersionIdUU +
=UU, -
tableUU. 3
.UU3 4
ColumnUU4 :
<UU: ;
GuidUU; ?
>UU? @
(UU@ A
typeUUA E
:UUE F
$strUUG Y
,UUY Z
nullableUU[ c
:UUc d
trueUUe i
)UUi j
,UUj k

CreateTimeVV 
=VV  
tableVV! &
.VV& '
ColumnVV' -
<VV- .
DateTimeVV. 6
>VV6 7
(VV7 8
typeVV8 <
:VV< =
$strVV> I
,VVI J
nullableVVK S
:VVS T
falseVVU Z
)VVZ [
,VV[ \
StatusWW 
=WW 
tableWW "
.WW" #
ColumnWW# )
<WW) *
intWW* -
>WW- .
(WW. /
typeWW/ 3
:WW3 4
$strWW5 :
,WW: ;
nullableWW< D
:WWD E
falseWWF K
)WWK L
}XX 
,XX 
constraintsYY 
:YY 
tableYY "
=>YY# %
{ZZ 
table[[ 
.[[ 

PrimaryKey[[ $
([[$ %
$str[[% E
,[[E F
x[[G H
=>[[I K
x[[L M
.[[M N
Id[[N P
)[[P Q
;[[Q R
table\\ 
.\\ 

ForeignKey\\ $
(\\$ %
name]] 
:]] 
$str]] m
,]]m n
column^^ 
:^^ 
x^^  !
=>^^" $
x^^% &
.^^& '#
SectionDetailsVersionId^^' >
,^^> ?
principalTable__ &
:__& '
$str__( @
,__@ A
principalColumn`` '
:``' (
$str``) -
)``- .
;``. /
}aa 
)aa 
;aa 
migrationBuildercc 
.cc 
CreateIndexcc (
(cc( )
namedd 
:dd 
$strdd B
,ddB C
tableee 
:ee 
$stree /
,ee/ 0
columnff 
:ff 
$strff *
)ff* +
;ff+ ,
migrationBuilderhh 
.hh 
CreateIndexhh (
(hh( )
nameii 
:ii 
$strii @
,ii@ A
tablejj 
:jj 
$strjj .
,jj. /
columnkk 
:kk 
$strkk )
)kk) *
;kk* +
migrationBuildermm 
.mm 
CreateIndexmm (
(mm( )
namenn 
:nn 
$strnn L
,nnL M
tableoo 
:oo 
$stroo 3
,oo3 4
columnpp 
:pp 
$strpp 0
)pp0 1
;pp1 2
migrationBuilderrr 
.rr 
CreateIndexrr (
(rr( )
namess 
:ss 
$strss N
,ssN O
tablett 
:tt 
$strtt 4
,tt4 5
columnuu 
:uu 
$struu 1
)uu1 2
;uu2 3
migrationBuilderww 
.ww 
AddForeignKeyww *
(ww* +
namexx 
:xx 
$strxx O
,xxO P
tableyy 
:yy 
$stryy .
,yy. /
columnzz 
:zz 
$strzz )
,zz) *
principalTable{{ 
:{{ 
$str{{  0
,{{0 1
principalColumn|| 
:||  
$str||! %
)||% &
;||& '
migrationBuilder~~ 
.~~ 
AddForeignKey~~ *
(~~* +
name 
: 
$str Q
,Q R
table
ÄÄ 
:
ÄÄ 
$str
ÄÄ /
,
ÄÄ/ 0
column
ÅÅ 
:
ÅÅ 
$str
ÅÅ *
,
ÅÅ* +
principalTable
ÇÇ 
:
ÇÇ 
$str
ÇÇ  0
,
ÇÇ0 1
principalColumn
ÉÉ 
:
ÉÉ  
$str
ÉÉ! %
,
ÉÉ% &
onDelete
ÑÑ 
:
ÑÑ 
ReferentialAction
ÑÑ +
.
ÑÑ+ ,
Cascade
ÑÑ, 3
)
ÑÑ3 4
;
ÑÑ4 5
}
ÖÖ 	
}
ÜÜ 
}áá ı&
ÉD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240628062641_AddCourseCommentTable.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public		 

partial		 
class		 !
AddCourseCommentTable		 .
:		/ 0
	Migration		1 :
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str -
,- .
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
Guid& *
>* +
(+ ,
type, 0
:0 1
$str2 D
,D E
nullableF N
:N O
falseP U
)U V
,V W
CourseVersionId #
=$ %
table& +
.+ ,
Column, 2
<2 3
Guid3 7
>7 8
(8 9
type9 =
:= >
$str? Q
,Q R
nullableS [
:[ \
false] b
)b c
,c d
Comment 
= 
table #
.# $
Column$ *
<* +
string+ 1
>1 2
(2 3
type3 7
:7 8
$str9 H
,H I
nullableJ R
:R S
falseT Y
)Y Z
,Z [
CreateBy 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: I
,I J
nullableK S
:S T
trueU Y
)Y Z
,Z [

CreateTime 
=  
table! &
.& '
Column' -
<- .
DateTime. 6
>6 7
(7 8
type8 <
:< =
$str> I
,I J
nullableK S
:S T
trueU Y
)Y Z
,Z [
UpdateBy 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: I
,I J
nullableK S
:S T
trueU Y
)Y Z
,Z [

UpdateTime 
=  
table! &
.& '
Column' -
<- .
DateTime. 6
>6 7
(7 8
type8 <
:< =
$str> I
,I J
nullableK S
:S T
trueU Y
)Y Z
,Z [
Status 
= 
table "
." #
Column# )
<) *
int* -
>- .
(. /
type/ 3
:3 4
$str5 :
,: ;
nullable< D
:D E
falseF K
)K L
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% ?
,? @
xA B
=>C E
xF G
.G H
IdH J
)J K
;K L
table 
. 

ForeignKey $
($ %
name 
: 
$str W
,W X
column   
:   
x    !
=>  " $
x  % &
.  & '
CourseVersionId  ' 6
,  6 7
principalTable!! &
:!!& '
$str!!( 8
,!!8 9
principalColumn"" '
:""' (
$str"") -
,""- .
onDelete##  
:##  !
ReferentialAction##" 3
.##3 4
Cascade##4 ;
)##; <
;##< =
}$$ 
)$$ 
;$$ 
migrationBuilder&& 
.&& 
CreateIndex&& (
(&&( )
name'' 
:'' 
$str'' @
,''@ A
table(( 
:(( 
$str(( .
,((. /
column)) 
:)) 
$str)) )
)))) *
;))* +
}** 	
	protected-- 
override-- 
void-- 
Down--  $
(--$ %
MigrationBuilder--% 5
migrationBuilder--6 F
)--F G
{.. 	
migrationBuilder// 
.// 
	DropTable// &
(//& '
name00 
:00 
$str00 -
)00- .
;00. /
}22 	
}33 
}44 ¡
ÜD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240628061226_AddVersionIntCourseTable.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public		 

partial		 
class		 $
AddVersionIntCourseTable		 1
:		2 3
	Migration		4 =
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
	AddColumn &
<& '
int' *
>* +
(+ ,
name 
: 
$str 
,  
table 
: 
$str  
,  !
type 
: 
$str 
, 
nullable 
: 
false 
,  
defaultValue 
: 
$num 
)  
;  !
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str 
,  
table 
: 
$str  
)  !
;! "
} 	
} 
} ¶U
çD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240628035240_AddSateAndPropsForCourseVersion.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public		 

partial		 
class		 +
AddSateAndPropsForCourseVersion		 8
:		9 :
	Migration		; D
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
	AddColumn &
<& '
int' *
>* +
(+ ,
name 
: 
$str %
,% &
table 
: 
$str /
,/ 0
type 
: 
$str 
, 
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
	AddColumn &
<& '
int' *
>* +
(+ ,
name 
: 
$str %
,% &
table 
: 
$str '
,' (
type 
: 
$str 
, 
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
	AddColumn &
<& '
int' *
>* +
(+ ,
name 
: 
$str %
,% &
table 
: 
$str .
,. /
type 
: 
$str 
, 
nullable 
: 
true 
) 
;  
migrationBuilder   
.   
CreateTable   (
(  ( )
name!! 
:!! 
$str!! 2
,!!2 3
columns"" 
:"" 
table"" 
=>"" !
new""" %
{## 
Id$$ 
=$$ 
table$$ 
.$$ 
Column$$ %
<$$% &
Guid$$& *
>$$* +
($$+ ,
type$$, 0
:$$0 1
$str$$2 D
,$$D E
nullable$$F N
:$$N O
false$$P U
)$$U V
,$$V W"
CourseSectionVersionId%% *
=%%+ ,
table%%- 2
.%%2 3
Column%%3 9
<%%9 :
Guid%%: >
>%%> ?
(%%? @
type%%@ D
:%%D E
$str%%F X
,%%X Y
nullable%%Z b
:%%b c
true%%d h
)%%h i
,%%i j
Status&& 
=&& 
table&& "
.&&" #
Column&&# )
<&&) *
int&&* -
>&&- .
(&&. /
type&&/ 3
:&&3 4
$str&&5 :
,&&: ;
nullable&&< D
:&&D E
false&&F K
)&&K L
,&&L M

CreateTime'' 
=''  
table''! &
.''& '
Column''' -
<''- .
DateTime''. 6
>''6 7
(''7 8
type''8 <
:''< =
$str''> I
,''I J
nullable''K S
:''S T
false''U Z
)''Z [
}(( 
,(( 
constraints)) 
:)) 
table)) "
=>))# %
{** 
table++ 
.++ 

PrimaryKey++ $
(++$ %
$str++% D
,++D E
x++F G
=>++H J
x++K L
.++L M
Id++M O
)++O P
;++P Q
table,, 
.,, 

ForeignKey,, $
(,,$ %
name-- 
:-- 
$str-- j
,--j k
column.. 
:.. 
x..  !
=>.." $
x..% &
...& '"
CourseSectionVersionId..' =
,..= >
principalTable// &
://& '
$str//( ?
,//? @
principalColumn00 '
:00' (
$str00) -
)00- .
;00. /
}11 
)11 
;11 
migrationBuilder33 
.33 
CreateTable33 (
(33( )
name44 
:44 
$str44 3
,443 4
columns55 
:55 
table55 
=>55 !
new55" %
{66 
Id77 
=77 
table77 
.77 
Column77 %
<77% &
Guid77& *
>77* +
(77+ ,
type77, 0
:770 1
$str772 D
,77D E
nullable77F N
:77N O
false77P U
)77U V
,77V W#
SectionDetailsVersionId88 +
=88, -
table88. 3
.883 4
Column884 :
<88: ;
Guid88; ?
>88? @
(88@ A
type88A E
:88E F
$str88G Y
,88Y Z
nullable88[ c
:88c d
true88e i
)88i j
,88j k
Status99 
=99 
table99 "
.99" #
Column99# )
<99) *
int99* -
>99- .
(99. /
type99/ 3
:993 4
$str995 :
,99: ;
nullable99< D
:99D E
false99F K
)99K L
,99L M

CreateTime:: 
=::  
table::! &
.::& '
Column::' -
<::- .
DateTime::. 6
>::6 7
(::7 8
type::8 <
:::< =
$str::> I
,::I J
nullable::K S
:::S T
false::U Z
)::Z [
};; 
,;; 
constraints<< 
:<< 
table<< "
=><<# %
{== 
table>> 
.>> 

PrimaryKey>> $
(>>$ %
$str>>% E
,>>E F
x>>G H
=>>>I K
x>>L M
.>>M N
Id>>N P
)>>P Q
;>>Q R
table?? 
.?? 

ForeignKey?? $
(??$ %
name@@ 
:@@ 
$str@@ m
,@@m n
columnAA 
:AA 
xAA  !
=>AA" $
xAA% &
.AA& '#
SectionDetailsVersionIdAA' >
,AA> ?
principalTableBB &
:BB& '
$strBB( @
,BB@ A
principalColumnCC '
:CC' (
$strCC) -
)CC- .
;CC. /
}DD 
)DD 
;DD 
migrationBuilderFF 
.FF 

UpdateDataFF '
(FF' (
tableGG 
:GG 
$strGG $
,GG$ %
	keyColumnHH 
:HH 
$strHH 
,HH  
keyValueII 
:II 
$strII +
,II+ ,
columnsJJ 
:JJ 
newJJ 
[JJ 
]JJ 
{JJ  
$strJJ! 3
,JJ3 4
$strJJ5 A
,JJA B
$strJJC Q
,JJQ R
$strJJS b
}JJc d
,JJd e
valuesKK 
:KK 
newKK 
objectKK "
[KK" #
]KK# $
{KK% &
$strKK' M
,KKM N
newKKO R
DateTimeKKS [
(KK[ \
$numKK\ `
,KK` a
$numKKb c
,KKc d
$numKKe g
,KKg h
$numKKi j
,KKj k
$numKKl n
,KKn o
$numKKp r
,KKr s
$numKKt w
,KKw x
DateTimeKind	KKy Ö
.
KKÖ Ü
Utc
KKÜ â
)
KKâ ä
.
KKä ã
AddTicks
KKã ì
(
KKì î
$num
KKî ò
)
KKò ô
,
KKô ö
$str
KKõ Ò
,
KKÒ Ú
$str
KKÛ ô
}
KKö õ
)
KKõ ú
;
KKú ù
migrationBuilderMM 
.MM 
CreateIndexMM (
(MM( )
nameNN 
:NN 
$strNN L
,NNL M
tableOO 
:OO 
$strOO 3
,OO3 4
columnPP 
:PP 
$strPP 0
)PP0 1
;PP1 2
migrationBuilderRR 
.RR 
CreateIndexRR (
(RR( )
nameSS 
:SS 
$strSS N
,SSN O
tableTT 
:TT 
$strTT 4
,TT4 5
columnUU 
:UU 
$strUU 1
)UU1 2
;UU2 3
}VV 	
	protectedYY 
overrideYY 
voidYY 
DownYY  $
(YY$ %
MigrationBuilderYY% 5
migrationBuilderYY6 F
)YYF G
{ZZ 	
migrationBuilder[[ 
.[[ 
	DropTable[[ &
([[& '
name\\ 
:\\ 
$str\\ 2
)\\2 3
;\\3 4
migrationBuilder^^ 
.^^ 
	DropTable^^ &
(^^& '
name__ 
:__ 
$str__ 3
)__3 4
;__4 5
migrationBuilderaa 
.aa 

DropColumnaa '
(aa' (
namebb 
:bb 
$strbb %
,bb% &
tablecc 
:cc 
$strcc /
)cc/ 0
;cc0 1
migrationBuilderee 
.ee 

DropColumnee '
(ee' (
nameff 
:ff 
$strff %
,ff% &
tablegg 
:gg 
$strgg '
)gg' (
;gg( )
migrationBuilderii 
.ii 

DropColumnii '
(ii' (
namejj 
:jj 
$strjj %
,jj% &
tablekk 
:kk 
$strkk .
)kk. /
;kk/ 0
migrationBuildermm 
.mm 

UpdateDatamm '
(mm' (
tablenn 
:nn 
$strnn $
,nn$ %
	keyColumnoo 
:oo 
$stroo 
,oo  
keyValuepp 
:pp 
$strpp +
,pp+ ,
columnsqq 
:qq 
newqq 
[qq 
]qq 
{qq  
$strqq! 3
,qq3 4
$strqq5 A
,qqA B
$strqqC Q
,qqQ R
$strqqS b
}qqc d
,qqd e
valuesrr 
:rr 
newrr 
objectrr "
[rr" #
]rr# $
{rr% &
$strrr' M
,rrM N
newrrO R
DateTimerrS [
(rr[ \
$numrr\ `
,rr` a
$numrrb c
,rrc d
$numrre g
,rrg h
$numrri j
,rrj k
$numrrl n
,rrn o
$numrrp r
,rrr s
$numrrt w
,rrw x
DateTimeKind	rry Ö
.
rrÖ Ü
Utc
rrÜ â
)
rrâ ä
.
rrä ã
AddTicks
rrã ì
(
rrì î
$num
rrî ò
)
rrò ô
,
rrô ö
$str
rrõ Ò
,
rrÒ Ú
$str
rrÛ ô
}
rrö õ
)
rrõ ú
;
rrú ù
}ss 	
}tt 
}uu ﬂü
~D:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240628032028_AddCourseVersion.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public		 

partial		 
class		 
AddCourseVersion		 )
:		* +
	Migration		, 5
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str &
,& '
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
Guid& *
>* +
(+ ,
type, 0
:0 1
$str2 D
,D E
nullableF N
:N O
falseP U
)U V
,V W
CourseVersionId #
=$ %
table& +
.+ ,
Column, 2
<2 3
Guid3 7
>7 8
(8 9
type9 =
:= >
$str? Q
,Q R
nullableS [
:[ \
true] a
)a b
,b c
Title 
= 
table !
.! "
Column" (
<( )
string) /
>/ 0
(0 1
type1 5
:5 6
$str7 F
,F G
nullableH P
:P Q
trueR V
)V W
,W X
Code 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 E
,E F
nullableG O
:O P
trueQ U
)U V
,V W
Description 
=  !
table" '
.' (
Column( .
<. /
string/ 5
>5 6
(6 7
type7 ;
:; <
$str= L
,L M
nullableN V
:V W
trueX \
)\ ]
,] ^
LearningTime  
=! "
table# (
.( )
Column) /
</ 0
int0 3
>3 4
(4 5
type5 9
:9 :
$str; @
,@ A
nullableB J
:J K
falseL Q
)Q R
,R S
Price 
= 
table !
.! "
Column" (
<( )
double) /
>/ 0
(0 1
type1 5
:5 6
$str7 >
,> ?
nullable@ H
:H I
falseJ O
)O P
,P Q
OldPrice 
= 
table $
.$ %
Column% +
<+ ,
double, 2
>2 3
(3 4
type4 8
:8 9
$str: A
,A B
nullableC K
:K L
trueM Q
)Q R
,R S
CourseImgUrl  
=! "
table# (
.( )
Column) /
</ 0
string0 6
>6 7
(7 8
type8 <
:< =
$str> M
,M N
nullableO W
:W X
trueY ]
)] ^
,^ _
InstructorId  
=! "
table# (
.( )
Column) /
</ 0
Guid0 4
>4 5
(5 6
type6 :
:: ;
$str< N
,N O
nullableP X
:X Y
falseZ _
)_ `
,` a

CategoryId 
=  
table! &
.& '
Column' -
<- .
Guid. 2
>2 3
(3 4
type4 8
:8 9
$str: L
,L M
nullableN V
:V W
trueX \
)\ ]
,] ^
LevelId 
= 
table #
.# $
Column$ *
<* +
Guid+ /
>/ 0
(0 1
type1 5
:5 6
$str7 I
,I J
nullableK S
:S T
trueU Y
)Y Z
} 
, 
constraints 
: 
table "
=># %
{   
table!! 
.!! 

PrimaryKey!! $
(!!$ %
$str!!% 8
,!!8 9
x!!: ;
=>!!< >
x!!? @
.!!@ A
Id!!A C
)!!C D
;!!D E
table"" 
."" 

ForeignKey"" $
(""$ %
name## 
:## 
$str## I
,##I J
column$$ 
:$$ 
x$$  !
=>$$" $
x$$% &
.$$& '
CourseVersionId$$' 6
,$$6 7
principalTable%% &
:%%& '
$str%%( 1
,%%1 2
principalColumn&& '
:&&' (
$str&&) -
)&&- .
;&&. /
}'' 
)'' 
;'' 
migrationBuilder)) 
.)) 
CreateTable)) (
())( )
name** 
:** 
$str** -
,**- .
columns++ 
:++ 
table++ 
=>++ !
new++" %
{,, 
Id-- 
=-- 
table-- 
.-- 
Column-- %
<--% &
Guid--& *
>--* +
(--+ ,
type--, 0
:--0 1
$str--2 D
,--D E
nullable--F N
:--N O
false--P U
)--U V
,--V W
CourseVersionId.. #
=..$ %
table..& +
...+ ,
Column.., 2
<..2 3
Guid..3 7
>..7 8
(..8 9
type..9 =
:..= >
$str..? Q
,..Q R
nullable..S [
:..[ \
true..] a
)..a b
,..b c
CourseSectionId// #
=//$ %
table//& +
.//+ ,
Column//, 2
<//2 3
Guid//3 7
>//7 8
(//8 9
type//9 =
://= >
$str//? Q
,//Q R
nullable//S [
://[ \
true//] a
)//a b
,//b c
Title00 
=00 
table00 !
.00! "
Column00" (
<00( )
string00) /
>00/ 0
(000 1
type001 5
:005 6
$str007 F
,00F G
nullable00H P
:00P Q
true00R V
)00V W
,00W X
Description11 
=11  !
table11" '
.11' (
Column11( .
<11. /
string11/ 5
>115 6
(116 7
type117 ;
:11; <
$str11= L
,11L M
nullable11N V
:11V W
true11X \
)11\ ]
}22 
,22 
constraints33 
:33 
table33 "
=>33# %
{44 
table55 
.55 

PrimaryKey55 $
(55$ %
$str55% ?
,55? @
x55A B
=>55C E
x55F G
.55G H
Id55H J
)55J K
;55K L
table66 
.66 

ForeignKey66 $
(66$ %
name77 
:77 
$str77 W
,77W X
column88 
:88 
x88  !
=>88" $
x88% &
.88& '
CourseSectionId88' 6
,886 7
principalTable99 &
:99& '
$str99( 8
,998 9
principalColumn:: '
:::' (
$str::) -
)::- .
;::. /
table;; 
.;; 

ForeignKey;; $
(;;$ %
name<< 
:<< 
$str<< W
,<<W X
column== 
:== 
x==  !
=>==" $
x==% &
.==& '
CourseVersionId==' 6
,==6 7
principalTable>> &
:>>& '
$str>>( 8
,>>8 9
principalColumn?? '
:??' (
$str??) -
)??- .
;??. /
}@@ 
)@@ 
;@@ 
migrationBuilderBB 
.BB 
CreateTableBB (
(BB( )
nameCC 
:CC 
$strCC +
,CC+ ,
columnsDD 
:DD 
tableDD 
=>DD !
newDD" %
{EE 
IdFF 
=FF 
tableFF 
.FF 
ColumnFF %
<FF% &
GuidFF& *
>FF* +
(FF+ ,
typeFF, 0
:FF0 1
$strFF2 D
,FFD E
nullableFFF N
:FFN O
falseFFP U
)FFU V
,FFV W
CourseVersionIdGG #
=GG$ %
tableGG& +
.GG+ ,
ColumnGG, 2
<GG2 3
GuidGG3 7
>GG7 8
(GG8 9
typeGG9 =
:GG= >
$strGG? Q
,GGQ R
nullableGGS [
:GG[ \
trueGG] a
)GGa b
,GGb c
StatusHH 
=HH 
tableHH "
.HH" #
ColumnHH# )
<HH) *
intHH* -
>HH- .
(HH. /
typeHH/ 3
:HH3 4
$strHH5 :
,HH: ;
nullableHH< D
:HHD E
falseHHF K
)HHK L
,HHL M

CreateTimeII 
=II  
tableII! &
.II& '
ColumnII' -
<II- .
DateTimeII. 6
>II6 7
(II7 8
typeII8 <
:II< =
$strII> I
,III J
nullableIIK S
:IIS T
falseIIU Z
)IIZ [
}JJ 
,JJ 
constraintsKK 
:KK 
tableKK "
=>KK# %
{LL 
tableMM 
.MM 

PrimaryKeyMM $
(MM$ %
$strMM% =
,MM= >
xMM? @
=>MMA C
xMMD E
.MME F
IdMMF H
)MMH I
;MMI J
tableNN 
.NN 

ForeignKeyNN $
(NN$ %
nameOO 
:OO 
$strOO U
,OOU V
columnPP 
:PP 
xPP  !
=>PP" $
xPP% &
.PP& '
CourseVersionIdPP' 6
,PP6 7
principalTableQQ &
:QQ& '
$strQQ( 8
,QQ8 9
principalColumnRR '
:RR' (
$strRR) -
)RR- .
;RR. /
}SS 
)SS 
;SS 
migrationBuilderUU 
.UU 
CreateTableUU (
(UU( )
nameVV 
:VV 
$strVV .
,VV. /
columnsWW 
:WW 
tableWW 
=>WW !
newWW" %
{XX 
IdYY 
=YY 
tableYY 
.YY 
ColumnYY %
<YY% &
GuidYY& *
>YY* +
(YY+ ,
typeYY, 0
:YY0 1
$strYY2 D
,YYD E
nullableYYF N
:YYN O
falseYYP U
)YYU V
,YYV W"
CourseSectionVersionIdZZ *
=ZZ+ ,
tableZZ- 2
.ZZ2 3
ColumnZZ3 9
<ZZ9 :
GuidZZ: >
>ZZ> ?
(ZZ? @
typeZZ@ D
:ZZD E
$strZZF X
,ZZX Y
nullableZZZ b
:ZZb c
trueZZd h
)ZZh i
,ZZi j
SectionDetailsId[[ $
=[[% &
table[[' ,
.[[, -
Column[[- 3
<[[3 4
Guid[[4 8
>[[8 9
([[9 :
type[[: >
:[[> ?
$str[[@ R
,[[R S
nullable[[T \
:[[\ ]
false[[^ c
)[[c d
,[[d e
Name\\ 
=\\ 
table\\  
.\\  !
Column\\! '
<\\' (
string\\( .
>\\. /
(\\/ 0
type\\0 4
:\\4 5
$str\\6 E
,\\E F
nullable\\G O
:\\O P
true\\Q U
)\\U V
,\\V W
VideoUrl]] 
=]] 
table]] $
.]]$ %
Column]]% +
<]]+ ,
string]], 2
>]]2 3
(]]3 4
type]]4 8
:]]8 9
$str]]: I
,]]I J
nullable]]K S
:]]S T
true]]U Y
)]]Y Z
,]]Z [
SlideUrk^^ 
=^^ 
table^^ $
.^^$ %
Column^^% +
<^^+ ,
string^^, 2
>^^2 3
(^^3 4
type^^4 8
:^^8 9
$str^^: I
,^^I J
nullable^^K S
:^^S T
true^^U Y
)^^Y Z
,^^Z [
DocsUrl__ 
=__ 
table__ #
.__# $
Column__$ *
<__* +
string__+ 1
>__1 2
(__2 3
type__3 7
:__7 8
$str__9 H
,__H I
nullable__J R
:__R S
true__T X
)__X Y
,__Y Z
Type`` 
=`` 
table``  
.``  !
Column``! '
<``' (
int``( +
>``+ ,
(``, -
type``- 1
:``1 2
$str``3 8
,``8 9
nullable``: B
:``B C
true``D H
)``H I
}aa 
,aa 
constraintsbb 
:bb 
tablebb "
=>bb# %
{cc 
tabledd 
.dd 

PrimaryKeydd $
(dd$ %
$strdd% @
,dd@ A
xddB C
=>ddD F
xddG H
.ddH I
IdddI K
)ddK L
;ddL M
tableee 
.ee 

ForeignKeyee $
(ee$ %
nameff 
:ff 
$strff f
,fff g
columngg 
:gg 
xgg  !
=>gg" $
xgg% &
.gg& '"
CourseSectionVersionIdgg' =
,gg= >
principalTablehh &
:hh& '
$strhh( ?
,hh? @
principalColumnii '
:ii' (
$strii) -
)ii- .
;ii. /
tablejj 
.jj 

ForeignKeyjj $
(jj$ %
namekk 
:kk 
$strkk Y
,kkY Z
columnll 
:ll 
xll  !
=>ll" $
xll% &
.ll& '
SectionDetailsIdll' 7
,ll7 8
principalTablemm &
:mm& '
$strmm( 8
,mm8 9
principalColumnnn '
:nn' (
$strnn) -
,nn- .
onDeleteoo  
:oo  !
ReferentialActionoo" 3
.oo3 4
Cascadeoo4 ;
)oo; <
;oo< =
}pp 
)pp 
;pp 
migrationBuilderrr 
.rr 

UpdateDatarr '
(rr' (
tabless 
:ss 
$strss $
,ss$ %
	keyColumntt 
:tt 
$strtt 
,tt  
keyValueuu 
:uu 
$struu +
,uu+ ,
columnsvv 
:vv 
newvv 
[vv 
]vv 
{vv  
$strvv! 3
,vv3 4
$strvv5 A
,vvA B
$strvvC Q
,vvQ R
$strvvS b
}vvc d
,vvd e
valuesww 
:ww 
newww 
objectww "
[ww" #
]ww# $
{ww% &
$strww' M
,wwM N
newwwO R
DateTimewwS [
(ww[ \
$numww\ `
,ww` a
$numwwb c
,wwc d
$numwwe g
,wwg h
$numwwi j
,wwj k
$numwwl n
,wwn o
$numwwp r
,wwr s
$numwwt w
,www x
DateTimeKind	wwy Ö
.
wwÖ Ü
Utc
wwÜ â
)
wwâ ä
.
wwä ã
AddTicks
wwã ì
(
wwì î
$num
wwî ò
)
wwò ô
,
wwô ö
$str
wwõ Ò
,
wwÒ Ú
$str
wwÛ ô
}
wwö õ
)
wwõ ú
;
wwú ù
migrationBuilderyy 
.yy 
CreateIndexyy (
(yy( )
namezz 
:zz 
$strzz @
,zz@ A
table{{ 
:{{ 
$str{{ .
,{{. /
column|| 
:|| 
$str|| )
)||) *
;||* +
migrationBuilder~~ 
.~~ 
CreateIndex~~ (
(~~( )
name 
: 
$str @
,@ A
table
ÄÄ 
:
ÄÄ 
$str
ÄÄ .
,
ÄÄ. /
column
ÅÅ 
:
ÅÅ 
$str
ÅÅ )
)
ÅÅ) *
;
ÅÅ* +
migrationBuilder
ÉÉ 
.
ÉÉ 
CreateIndex
ÉÉ (
(
ÉÉ( )
name
ÑÑ 
:
ÑÑ 
$str
ÑÑ 9
,
ÑÑ9 :
table
ÖÖ 
:
ÖÖ 
$str
ÖÖ '
,
ÖÖ' (
column
ÜÜ 
:
ÜÜ 
$str
ÜÜ )
)
ÜÜ) *
;
ÜÜ* +
migrationBuilder
àà 
.
àà 
CreateIndex
àà (
(
àà( )
name
ââ 
:
ââ 
$str
ââ >
,
ââ> ?
table
ää 
:
ää 
$str
ää ,
,
ää, -
column
ãã 
:
ãã 
$str
ãã )
)
ãã) *
;
ãã* +
migrationBuilder
çç 
.
çç 
CreateIndex
çç (
(
çç( )
name
éé 
:
éé 
$str
éé H
,
ééH I
table
èè 
:
èè 
$str
èè /
,
èè/ 0
column
êê 
:
êê 
$str
êê 0
)
êê0 1
;
êê1 2
migrationBuilder
íí 
.
íí 
CreateIndex
íí (
(
íí( )
name
ìì 
:
ìì 
$str
ìì B
,
ììB C
table
îî 
:
îî 
$str
îî /
,
îî/ 0
column
ïï 
:
ïï 
$str
ïï *
)
ïï* +
;
ïï+ ,
}
ññ 	
	protected
ôô 
override
ôô 
void
ôô 
Down
ôô  $
(
ôô$ %
MigrationBuilder
ôô% 5
migrationBuilder
ôô6 F
)
ôôF G
{
öö 	
migrationBuilder
õõ 
.
õõ 
	DropTable
õõ &
(
õõ& '
name
úú 
:
úú 
$str
úú +
)
úú+ ,
;
úú, -
migrationBuilder
ûû 
.
ûû 
	DropTable
ûû &
(
ûû& '
name
üü 
:
üü 
$str
üü .
)
üü. /
;
üü/ 0
migrationBuilder
°° 
.
°° 
	DropTable
°° &
(
°°& '
name
¢¢ 
:
¢¢ 
$str
¢¢ -
)
¢¢- .
;
¢¢. /
migrationBuilder
§§ 
.
§§ 
	DropTable
§§ &
(
§§& '
name
•• 
:
•• 
$str
•• &
)
••& '
;
••' (
migrationBuilder
ßß 
.
ßß 

UpdateData
ßß '
(
ßß' (
table
®® 
:
®® 
$str
®® $
,
®®$ %
	keyColumn
©© 
:
©© 
$str
©© 
,
©©  
keyValue
™™ 
:
™™ 
$str
™™ +
,
™™+ ,
columns
´´ 
:
´´ 
new
´´ 
[
´´ 
]
´´ 
{
´´  
$str
´´! 3
,
´´3 4
$str
´´5 A
,
´´A B
$str
´´C Q
,
´´Q R
$str
´´S b
}
´´c d
,
´´d e
values
¨¨ 
:
¨¨ 
new
¨¨ 
object
¨¨ "
[
¨¨" #
]
¨¨# $
{
¨¨% &
$str
¨¨' M
,
¨¨M N
new
¨¨O R
DateTime
¨¨S [
(
¨¨[ \
$num
¨¨\ `
,
¨¨` a
$num
¨¨b c
,
¨¨c d
$num
¨¨e g
,
¨¨g h
$num
¨¨i j
,
¨¨j k
$num
¨¨l n
,
¨¨n o
$num
¨¨p r
,
¨¨r s
$num
¨¨t u
,
¨¨u v
DateTimeKind¨¨w É
.¨¨É Ñ
Utc¨¨Ñ á
)¨¨á à
.¨¨à â
AddTicks¨¨â ë
(¨¨ë í
$num¨¨í ñ
)¨¨ñ ó
,¨¨ó ò
$str¨¨ô Ô
,¨¨Ô 
$str¨¨Ò ó
}¨¨ò ô
)¨¨ô ö
;¨¨ö õ
}
≠≠ 	
}
ÆÆ 
}ØØ £l
D:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240628031259_AddStateForCourse.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public		 

partial		 
class		 
AddStateForCourse		 *
:		+ ,
	Migration		- 6
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str (
,( )

keyColumns 
: 
new 
[  
]  !
{" #
$str$ ,
,, -
$str. 6
}7 8
,8 9
	keyValues 
: 
new 
object %
[% &
]& '
{( )
$str* P
,P Q
$strR c
}d e
)e f
;f g
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str $
,$ %
	keyColumn 
: 
$str 
,  
keyValue 
: 
$str +
)+ ,
;, -
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str #
,# $
table 
: 
$str  
,  !
type 
: 
$str %
,% &
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
	AddColumn &
<& '
DateTime' /
>/ 0
(0 1
name 
: 
$str %
,% &
table   
:   
$str    
,    !
type!! 
:!! 
$str!! !
,!!! "
nullable"" 
:"" 
true"" 
)"" 
;""  
migrationBuilder$$ 
.$$ 
	AddColumn$$ &
<$$& '
string$$' -
>$$- .
($$. /
name%% 
:%% 
$str%% %
,%%% &
table&& 
:&& 
$str&&  
,&&  !
type'' 
:'' 
$str'' %
,''% &
nullable(( 
:(( 
true(( 
)(( 
;((  
migrationBuilder** 
.** 
	AddColumn** &
<**& '
DateTime**' /
>**/ 0
(**0 1
name++ 
:++ 
$str++ '
,++' (
table,, 
:,, 
$str,,  
,,,  !
type-- 
:-- 
$str-- !
,--! "
nullable.. 
:.. 
true.. 
).. 
;..  
migrationBuilder00 
.00 
	AddColumn00 &
<00& '
int00' *
>00* +
(00+ ,
name11 
:11 
$str11 
,11 
table22 
:22 
$str22  
,22  !
type33 
:33 
$str33 
,33 
nullable44 
:44 
false44 
,44  
defaultValue55 
:55 
$num55 
)55  
;55  !
migrationBuilder77 
.77 

InsertData77 '
(77' (
table88 
:88 
$str88 $
,88$ %
columns99 
:99 
new99 
[99 
]99 
{99  
$str99! %
,99% &
$str99' :
,99: ;
$str99< E
,99E F
$str99G R
,99R S
$str99T _
,99_ `
$str99a s
,99s t
$str99u ~
,99~ 
$str
99Ä å
,
99å ç
$str
99é ï
,
99ï ñ
$str
99ó ß
,
99ß ®
$str
99© ≥
,
99≥ ¥
$str
99µ Ω
,
99Ω æ
$str
99ø œ
,
99œ –
$str
99— ›
,
99› ﬁ
$str
99ﬂ 
,
99 Ò
$str
99Ú Ü
,
99Ü á
$str
99à ñ
,
99ñ ó
$str
99ò •
,
99• ¶
$str
99ß Ω
,
99Ω æ
$str
99ø Œ
,
99Œ œ
$str
99– €
,
99€ ‹
$str
99› Ô
,
99Ô 
$str
99Ò ˝
,
99˝ ˛
$str
99ˇ â
}
99ä ã
,
99ã å
values:: 
::: 
new:: 
object:: "
[::" #
]::# $
{::% &
$str::' 8
,::8 9
$num::: ;
,::; <
$str::= K
,::K L
$str::M m
,::m n
new::o r
DateTime::s {
(::{ |
$num	::| Ä
,
::Ä Å
$num
::Ç É
,
::É Ñ
$num
::Ö Ü
,
::Ü á
$num
::à â
,
::â ä
$num
::ã å
,
::å ç
$num
::é è
,
::è ê
$num
::ë í
,
::í ì
DateTimeKind
::î †
.
::† °
Unspecified
::° ¨
)
::¨ ≠
,
::≠ Æ
$str
::Ø ’
,
::’ ÷
$str
::◊ ‡
,
::‡ ·
new
::‚ Â
DateTime
::Ê Ó
(
::Ó Ô
$num
::Ô Û
,
::Û Ù
$num
::ı ˆ
,
::ˆ ˜
$num
::¯ ˙
,
::˙ ˚
$num
::¸ ˝
,
::˝ ˛
$num
::ˇ Å
,
::Å Ç
$num
::É Ö
,
::Ö Ü
$num
::á à
,
::à â
DateTimeKind
::ä ñ
.
::ñ ó
Utc
::ó ö
)
::ö õ
.
::õ ú
AddTicks
::ú §
(
::§ •
$num
::• ©
)
::© ™
,
::™ ´
$str
::¨ Ω
,
::Ω æ
true
::ø √
,
::√ ƒ
$str
::≈ —
,
::— “
$str
::” Ÿ
,
::Ÿ ⁄
true
::€ ﬂ
,
::ﬂ ‡
null
::· Â
,
::Â Ê
$str
::Á ¯
,
::¯ ˘
$str
::˙ ã
,
::ã å
$str
::ç „
,
::„ ‰
$str
::Â Ò
,
::Ò Ú
true
::Û ˜
,
::˜ ¯
$str
::˘ ü
,
::ü †
$str
::° ¨
,
::¨ ≠
false
::Æ ≥
,
::≥ ¥
new
::µ ∏
DateTime
::π ¡
(
::¡ ¬
$num
::¬ ∆
,
::∆ «
$num
::» …
,
::…  
$num
::À Õ
,
::Õ Œ
$num
::œ –
,
::– —
$num
::“ ”
,
::” ‘
$num
::’ ÷
,
::÷ ◊
$num
::ÿ Ÿ
,
::Ÿ ⁄
DateTimeKind
::€ Á
.
::Á Ë
Unspecified
::Ë Û
)
::Û Ù
,
::Ù ı
$str
::ˆ á
}
::à â
)
::â ä
;
::ä ã
migrationBuilder<< 
.<< 

InsertData<< '
(<<' (
table== 
:== 
$str== (
,==( )
columns>> 
:>> 
new>> 
[>> 
]>> 
{>>  
$str>>! )
,>>) *
$str>>+ 3
}>>4 5
,>>5 6
values?? 
:?? 
new?? 
object?? "
[??" #
]??# $
{??% &
$str??' M
,??M N
$str??O `
}??a b
)??b c
;??c d
}@@ 	
	protectedCC 
overrideCC 
voidCC 
DownCC  $
(CC$ %
MigrationBuilderCC% 5
migrationBuilderCC6 F
)CCF G
{DD 	
migrationBuilderEE 
.EE 

DeleteDataEE '
(EE' (
tableFF 
:FF 
$strFF (
,FF( )

keyColumnsGG 
:GG 
newGG 
[GG  
]GG  !
{GG" #
$strGG$ ,
,GG, -
$strGG. 6
}GG7 8
,GG8 9
	keyValuesHH 
:HH 
newHH 
objectHH %
[HH% &
]HH& '
{HH( )
$strHH* P
,HHP Q
$strHHR c
}HHd e
)HHe f
;HHf g
migrationBuilderJJ 
.JJ 

DeleteDataJJ '
(JJ' (
tableKK 
:KK 
$strKK $
,KK$ %
	keyColumnLL 
:LL 
$strLL 
,LL  
keyValueMM 
:MM 
$strMM +
)MM+ ,
;MM, -
migrationBuilderOO 
.OO 

DropColumnOO '
(OO' (
namePP 
:PP 
$strPP #
,PP# $
tableQQ 
:QQ 
$strQQ  
)QQ  !
;QQ! "
migrationBuilderSS 
.SS 

DropColumnSS '
(SS' (
nameTT 
:TT 
$strTT %
,TT% &
tableUU 
:UU 
$strUU  
)UU  !
;UU! "
migrationBuilderWW 
.WW 

DropColumnWW '
(WW' (
nameXX 
:XX 
$strXX %
,XX% &
tableYY 
:YY 
$strYY  
)YY  !
;YY! "
migrationBuilder[[ 
.[[ 

DropColumn[[ '
([[' (
name\\ 
:\\ 
$str\\ '
,\\' (
table]] 
:]] 
$str]]  
)]]  !
;]]! "
migrationBuilder__ 
.__ 

DropColumn__ '
(__' (
name`` 
:`` 
$str`` 
,`` 
tableaa 
:aa 
$straa  
)aa  !
;aa! "
migrationBuildercc 
.cc 

InsertDatacc '
(cc' (
tabledd 
:dd 
$strdd $
,dd$ %
columnsee 
:ee 
newee 
[ee 
]ee 
{ee  
$stree! %
,ee% &
$stree' :
,ee: ;
$stree< E
,eeE F
$streeG R
,eeR S
$streeT _
,ee_ `
$streea s
,ees t
$streeu ~
,ee~ 
$str
eeÄ å
,
eeå ç
$str
eeé ï
,
eeï ñ
$str
eeó ß
,
eeß ®
$str
ee© ≥
,
ee≥ ¥
$str
eeµ Ω
,
eeΩ æ
$str
eeø œ
,
eeœ –
$str
ee— ›
,
ee› ﬁ
$str
eeﬂ 
,
ee Ò
$str
eeÚ Ü
,
eeÜ á
$str
eeà ñ
,
eeñ ó
$str
eeò •
,
ee• ¶
$str
eeß Ω
,
eeΩ æ
$str
eeø Œ
,
eeŒ œ
$str
ee– €
,
ee€ ‹
$str
ee› Ô
,
eeÔ 
$str
eeÒ ˝
,
ee˝ ˛
$str
eeˇ â
}
eeä ã
,
eeã å
valuesff 
:ff 
newff 
objectff "
[ff" #
]ff# $
{ff% &
$strff' 8
,ff8 9
$numff: ;
,ff; <
$strff= K
,ffK L
$strffM m
,ffm n
newffo r
DateTimeffs {
(ff{ |
$num	ff| Ä
,
ffÄ Å
$num
ffÇ É
,
ffÉ Ñ
$num
ffÖ Ü
,
ffÜ á
$num
ffà â
,
ffâ ä
$num
ffã å
,
ffå ç
$num
ffé è
,
ffè ê
$num
ffë í
,
ffí ì
DateTimeKind
ffî †
.
ff† °
Unspecified
ff° ¨
)
ff¨ ≠
,
ff≠ Æ
$str
ffØ ’
,
ff’ ÷
$str
ff◊ ‡
,
ff‡ ·
new
ff‚ Â
DateTime
ffÊ Ó
(
ffÓ Ô
$num
ffÔ Û
,
ffÛ Ù
$num
ffı ˆ
,
ffˆ ˜
$num
ff¯ ˙
,
ff˙ ˚
$num
ff¸ ˝
,
ff˝ ˛
$num
ffˇ Ä
,
ffÄ Å
$num
ffÇ Ñ
,
ffÑ Ö
$num
ffÜ â
,
ffâ ä
DateTimeKind
ffã ó
.
ffó ò
Utc
ffò õ
)
ffõ ú
.
ffú ù
AddTicks
ffù •
(
ff• ¶
$num
ff¶ ™
)
ff™ ´
,
ff´ ¨
$str
ff≠ æ
,
ffæ ø
true
ff¿ ƒ
,
ffƒ ≈
$str
ff∆ “
,
ff“ ”
$str
ff‘ ⁄
,
ff⁄ €
true
ff‹ ‡
,
ff‡ ·
null
ff‚ Ê
,
ffÊ Á
$str
ffË ˘
,
ff˘ ˙
$str
ff˚ å
,
ffå ç
$str
ffé ‰
,
ff‰ Â
$str
ffÊ Ú
,
ffÚ Û
true
ffÙ ¯
,
ff¯ ˘
$str
ff˙ †
,
ff† °
$str
ff¢ ≠
,
ff≠ Æ
false
ffØ ¥
,
ff¥ µ
new
ff∂ π
DateTime
ff∫ ¬
(
ff¬ √
$num
ff√ «
,
ff« »
$num
ff…  
,
ff  À
$num
ffÃ Œ
,
ffŒ œ
$num
ff– —
,
ff— “
$num
ff” ‘
,
ff‘ ’
$num
ff÷ ÿ
,
ffÿ Ÿ
$num
ff⁄ ›
,
ff› ﬁ
DateTimeKind
ffﬂ Î
.
ffÎ Ï
Utc
ffÏ Ô
)
ffÔ 
.
ff Ò
AddTicks
ffÒ ˘
(
ff˘ ˙
$num
ff˙ ˛
)
ff˛ ˇ
,
ffˇ Ä
$str
ffÅ í
}
ffì î
)
ffî ï
;
ffï ñ
migrationBuilderhh 
.hh 

InsertDatahh '
(hh' (
tableii 
:ii 
$strii (
,ii( )
columnsjj 
:jj 
newjj 
[jj 
]jj 
{jj  
$strjj! )
,jj) *
$strjj+ 3
}jj4 5
,jj5 6
valueskk 
:kk 
newkk 
objectkk "
[kk" #
]kk# $
{kk% &
$strkk' M
,kkM N
$strkkO `
}kka b
)kkb c
;kkc d
}ll 	
}mm 
}nn ã:
D:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240628030144_DeleteStateCourse.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public		 

partial		 
class		 
DeleteStateCourse		 *
:		+ ,
	Migration		- 6
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str #
,# $
table 
: 
$str  
)  !
;! "
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str !
,! "
table 
: 
$str  
)  !
;! "
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str !
,! "
table 
: 
$str  
)  !
;! "
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str #
,# $
table 
: 
$str  
)  !
;! "
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str "
," #
table   
:   
$str    
)    !
;  ! "
migrationBuilder"" 
."" 

DropColumn"" '
(""' (
name## 
:## 
$str## $
,##$ %
table$$ 
:$$ 
$str$$  
)$$  !
;$$! "
migrationBuilder&& 
.&& 

DropColumn&& '
(&&' (
name'' 
:'' 
$str'' 
,'' 
table(( 
:(( 
$str((  
)((  !
;((! "
migrationBuilder** 
.** 

DropColumn** '
(**' (
name++ 
:++ 
$str++ #
,++# $
table,, 
:,, 
$str,,  
),,  !
;,,! "
migrationBuilder.. 
... 

DropColumn.. '
(..' (
name// 
:// 
$str// !
,//! "
table00 
:00 
$str00  
)00  !
;00! "
migrationBuilder22 
.22 
	AddColumn22 &
<22& '
double22' -
>22- .
(22. /
name33 
:33 
$str33  
,33  !
table44 
:44 
$str44  
,44  !
type55 
:55 
$str55 
,55 
nullable66 
:66 
true66 
)66 
;66  
}77 	
	protected:: 
override:: 
void:: 
Down::  $
(::$ %
MigrationBuilder::% 5
migrationBuilder::6 F
)::F G
{;; 	
migrationBuilder<< 
.<< 

DropColumn<< '
(<<' (
name== 
:== 
$str==  
,==  !
table>> 
:>> 
$str>>  
)>>  !
;>>! "
migrationBuilder@@ 
.@@ 
	AddColumn@@ &
<@@& '
DateTime@@' /
>@@/ 0
(@@0 1
nameAA 
:AA 
$strAA #
,AA# $
tableBB 
:BB 
$strBB  
,BB  !
typeCC 
:CC 
$strCC !
,CC! "
nullableDD 
:DD 
trueDD 
)DD 
;DD  
migrationBuilderFF 
.FF 
	AddColumnFF &
<FF& '
stringFF' -
>FF- .
(FF. /
nameGG 
:GG 
$strGG !
,GG! "
tableHH 
:HH 
$strHH  
,HH  !
typeII 
:II 
$strII %
,II% &
nullableJJ 
:JJ 
trueJJ 
)JJ 
;JJ  
migrationBuilderLL 
.LL 
	AddColumnLL &
<LL& '
stringLL' -
>LL- .
(LL. /
nameMM 
:MM 
$strMM !
,MM! "
tableNN 
:NN 
$strNN  
,NN  !
typeOO 
:OO 
$strOO %
,OO% &
nullablePP 
:PP 
truePP 
)PP 
;PP  
migrationBuilderRR 
.RR 
	AddColumnRR &
<RR& '
DateTimeRR' /
>RR/ 0
(RR0 1
nameSS 
:SS 
$strSS #
,SS# $
tableTT 
:TT 
$strTT  
,TT  !
typeUU 
:UU 
$strUU !
,UU! "
nullableVV 
:VV 
trueVV 
)VV 
;VV  
migrationBuilderXX 
.XX 
	AddColumnXX &
<XX& '
stringXX' -
>XX- .
(XX. /
nameYY 
:YY 
$strYY "
,YY" #
tableZZ 
:ZZ 
$strZZ  
,ZZ  !
type[[ 
:[[ 
$str[[ %
,[[% &
nullable\\ 
:\\ 
true\\ 
)\\ 
;\\  
migrationBuilder^^ 
.^^ 
	AddColumn^^ &
<^^& '
DateTime^^' /
>^^/ 0
(^^0 1
name__ 
:__ 
$str__ $
,__$ %
table`` 
:`` 
$str``  
,``  !
typeaa 
:aa 
$straa !
,aa! "
nullablebb 
:bb 
truebb 
)bb 
;bb  
migrationBuilderdd 
.dd 
	AddColumndd &
<dd& '
intdd' *
>dd* +
(dd+ ,
nameee 
:ee 
$stree 
,ee 
tableff 
:ff 
$strff  
,ff  !
typegg 
:gg 
$strgg 
,gg 
nullablehh 
:hh 
falsehh 
,hh  
defaultValueii 
:ii 
$numii 
)ii  
;ii  !
migrationBuilderkk 
.kk 
	AddColumnkk &
<kk& '
DateTimekk' /
>kk/ 0
(kk0 1
namell 
:ll 
$strll #
,ll# $
tablemm 
:mm 
$strmm  
,mm  !
typenn 
:nn 
$strnn !
,nn! "
nullableoo 
:oo 
trueoo 
)oo 
;oo  
migrationBuilderqq 
.qq 
	AddColumnqq &
<qq& '
stringqq' -
>qq- .
(qq. /
namerr 
:rr 
$strrr !
,rr! "
tabless 
:ss 
$strss  
,ss  !
typett 
:tt 
$strtt %
,tt% &
nullableuu 
:uu 
trueuu 
)uu 
;uu  
}ww 	
}xx 
}yy ÿ:
ÅD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240625020837_AddMorePropsCourses.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public		 

partial		 
class		 
AddMorePropsCourses		 ,
:		- .
	Migration		/ 8
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
	AddColumn &
<& '
DateTime' /
>/ 0
(0 1
name 
: 
$str #
,# $
table 
: 
$str  
,  !
type 
: 
$str !
,! "
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str !
,! "
table 
: 
$str  
,  !
type 
: 
$str %
,% &
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str !
,! "
table 
: 
$str  
,  !
type 
: 
$str %
,% &
nullable 
: 
true 
) 
;  
migrationBuilder   
.   
	AddColumn   &
<  & '
DateTime  ' /
>  / 0
(  0 1
name!! 
:!! 
$str!! #
,!!# $
table"" 
:"" 
$str""  
,""  !
type## 
:## 
$str## !
,##! "
nullable$$ 
:$$ 
true$$ 
)$$ 
;$$  
migrationBuilder&& 
.&& 
	AddColumn&& &
<&&& '
int&&' *
>&&* +
(&&+ ,
name'' 
:'' 
$str'' $
,''$ %
table(( 
:(( 
$str((  
,((  !
type)) 
:)) 
$str)) 
,)) 
nullable** 
:** 
false** 
,**  
defaultValue++ 
:++ 
$num++ 
)++  
;++  !
migrationBuilder-- 
.-- 
	AddColumn-- &
<--& '
string--' -
>--- .
(--. /
name.. 
:.. 
$str.. "
,.." #
table// 
:// 
$str//  
,//  !
type00 
:00 
$str00 %
,00% &
nullable11 
:11 
true11 
)11 
;11  
migrationBuilder33 
.33 
	AddColumn33 &
<33& '
DateTime33' /
>33/ 0
(330 1
name44 
:44 
$str44 $
,44$ %
table55 
:55 
$str55  
,55  !
type66 
:66 
$str66 !
,66! "
nullable77 
:77 
true77 
)77 
;77  
migrationBuilder99 
.99 
	AddColumn99 &
<99& '
int99' *
>99* +
(99+ ,
name:: 
::: 
$str:: 
,:: 
table;; 
:;; 
$str;;  
,;;  !
type<< 
:<< 
$str<< 
,<< 
nullable== 
:== 
false== 
,==  
defaultValue>> 
:>> 
$num>> 
)>>  
;>>  !
migrationBuilder@@ 
.@@ 
	AddColumn@@ &
<@@& '
DateTime@@' /
>@@/ 0
(@@0 1
nameAA 
:AA 
$strAA #
,AA# $
tableBB 
:BB 
$strBB  
,BB  !
typeCC 
:CC 
$strCC !
,CC! "
nullableDD 
:DD 
trueDD 
)DD 
;DD  
migrationBuilderFF 
.FF 
	AddColumnFF &
<FF& '
stringFF' -
>FF- .
(FF. /
nameGG 
:GG 
$strGG !
,GG! "
tableHH 
:HH 
$strHH  
,HH  !
typeII 
:II 
$strII %
,II% &
nullableJJ 
:JJ 
trueJJ 
)JJ 
;JJ  
}LL 	
	protectedOO 
overrideOO 
voidOO 
DownOO  $
(OO$ %
MigrationBuilderOO% 5
migrationBuilderOO6 F
)OOF G
{PP 	
migrationBuilderQQ 
.QQ 

DropColumnQQ '
(QQ' (
nameRR 
:RR 
$strRR #
,RR# $
tableSS 
:SS 
$strSS  
)SS  !
;SS! "
migrationBuilderUU 
.UU 

DropColumnUU '
(UU' (
nameVV 
:VV 
$strVV !
,VV! "
tableWW 
:WW 
$strWW  
)WW  !
;WW! "
migrationBuilderYY 
.YY 

DropColumnYY '
(YY' (
nameZZ 
:ZZ 
$strZZ !
,ZZ! "
table[[ 
:[[ 
$str[[  
)[[  !
;[[! "
migrationBuilder]] 
.]] 

DropColumn]] '
(]]' (
name^^ 
:^^ 
$str^^ #
,^^# $
table__ 
:__ 
$str__  
)__  !
;__! "
migrationBuilderaa 
.aa 

DropColumnaa '
(aa' (
namebb 
:bb 
$strbb $
,bb$ %
tablecc 
:cc 
$strcc  
)cc  !
;cc! "
migrationBuilderee 
.ee 

DropColumnee '
(ee' (
nameff 
:ff 
$strff "
,ff" #
tablegg 
:gg 
$strgg  
)gg  !
;gg! "
migrationBuilderii 
.ii 

DropColumnii '
(ii' (
namejj 
:jj 
$strjj $
,jj$ %
tablekk 
:kk 
$strkk  
)kk  !
;kk! "
migrationBuildermm 
.mm 

DropColumnmm '
(mm' (
namenn 
:nn 
$strnn 
,nn 
tableoo 
:oo 
$stroo  
)oo  !
;oo! "
migrationBuilderqq 
.qq 

DropColumnqq '
(qq' (
namerr 
:rr 
$strrr #
,rr# $
tabless 
:ss 
$strss  
)ss  !
;ss! "
migrationBuilderuu 
.uu 

DropColumnuu '
(uu' (
namevv 
:vv 
$strvv !
,vv! "
tableww 
:ww 
$strww  
)ww  !
;ww! "
}yy 	
}zz 
}{{ ª(
}D:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240625015912_ModifiedCourses.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public		 

partial		 
class		 
ModifiedCourses		 (
:		) *
	Migration		+ 4
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str  
,  !
table 
: 
$str  
)  !
;! "
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str "
," #
table 
: 
$str  
)  !
;! "
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str  
,  !
table 
: 
$str  
)  !
;! "
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str $
,$ %
table 
: 
$str  
)  !
;! "
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str 
, 
table   
:   
$str    
,    !
type!! 
:!! 
$str!! %
,!!% &
nullable"" 
:"" 
false"" 
,""  
defaultValue## 
:## 
$str##  
)##  !
;##! "
}%% 	
	protected(( 
override(( 
void(( 
Down((  $
((($ %
MigrationBuilder((% 5
migrationBuilder((6 F
)((F G
{)) 	
migrationBuilder** 
.** 

DropColumn** '
(**' (
name++ 
:++ 
$str++ 
,++ 
table,, 
:,, 
$str,,  
),,  !
;,,! "
migrationBuilder.. 
... 
	AddColumn.. &
<..& '
DateTime..' /
>../ 0
(..0 1
name// 
:// 
$str//  
,//  !
table00 
:00 
$str00  
,00  !
type11 
:11 
$str11 !
,11! "
nullable22 
:22 
false22 
,22  
defaultValue33 
:33 
new33 !
DateTime33" *
(33* +
$num33+ ,
,33, -
$num33. /
,33/ 0
$num331 2
,332 3
$num334 5
,335 6
$num337 8
,338 9
$num33: ;
,33; <
$num33= >
,33> ?
DateTimeKind33@ L
.33L M
Unspecified33M X
)33X Y
)33Y Z
;33Z [
migrationBuilder55 
.55 
	AddColumn55 &
<55& '
bool55' +
>55+ ,
(55, -
name66 
:66 
$str66 "
,66" #
table77 
:77 
$str77  
,77  !
type88 
:88 
$str88 
,88 
nullable99 
:99 
false99 
,99  
defaultValue:: 
::: 
false:: #
)::# $
;::$ %
migrationBuilder<< 
.<< 
	AddColumn<< &
<<<& '
bool<<' +
><<+ ,
(<<, -
name== 
:== 
$str==  
,==  !
table>> 
:>> 
$str>>  
,>>  !
type?? 
:?? 
$str?? 
,?? 
nullable@@ 
:@@ 
false@@ 
,@@  
defaultValueAA 
:AA 
falseAA #
)AA# $
;AA$ %
migrationBuilderCC 
.CC 
	AddColumnCC &
<CC& '
DateTimeCC' /
>CC/ 0
(CC0 1
nameDD 
:DD 
$strDD $
,DD$ %
tableEE 
:EE 
$strEE  
,EE  !
typeFF 
:FF 
$strFF !
,FF! "
nullableGG 
:GG 
falseGG 
,GG  
defaultValueHH 
:HH 
newHH !
DateTimeHH" *
(HH* +
$numHH+ ,
,HH, -
$numHH. /
,HH/ 0
$numHH1 2
,HH2 3
$numHH4 5
,HH5 6
$numHH7 8
,HH8 9
$numHH: ;
,HH; <
$numHH= >
,HH> ?
DateTimeKindHH@ L
.HHL M
UnspecifiedHHM X
)HHX Y
)HHY Z
;HHZ [
}II 	
}JJ 
}KK Ù÷
ÄD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240625015607_ModifiedBaseEntity.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public		 

partial		 
class		 
ModifiedBaseEntity		 +
:		, -
	Migration		. 7
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
AlterColumn (
<( )
DateTime) 1
>1 2
(2 3
name 
: 
$str "
," #
table 
: 
$str *
,* +
type 
: 
$str !
,! "
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
DateTime# +
)+ ,
,, -
oldType 
: 
$str $
)$ %
;% &
migrationBuilder 
. 
AlterColumn (
<( )
string) /
>/ 0
(0 1
name 
: 
$str  
,  !
table 
: 
$str *
,* +
type 
: 
$str %
,% &
nullable 
: 
true 
, 

oldClrType 
: 
typeof "
(" #
string# )
)) *
,* +
oldType 
: 
$str (
)( )
;) *
migrationBuilder 
. 
AlterColumn (
<( )
DateTime) 1
>1 2
(2 3
name 
: 
$str "
," #
table   
:   
$str   *
,  * +
type!! 
:!! 
$str!! !
,!!! "
nullable"" 
:"" 
true"" 
,"" 

oldClrType## 
:## 
typeof## "
(##" #
DateTime### +
)##+ ,
,##, -
oldType$$ 
:$$ 
$str$$ $
)$$$ %
;$$% &
migrationBuilder&& 
.&& 
AlterColumn&& (
<&&( )
string&&) /
>&&/ 0
(&&0 1
name'' 
:'' 
$str''  
,''  !
table(( 
:(( 
$str(( *
,((* +
type)) 
:)) 
$str)) %
,))% &
nullable** 
:** 
true** 
,** 

oldClrType++ 
:++ 
typeof++ "
(++" #
string++# )
)++) *
,++* +
oldType,, 
:,, 
$str,, (
),,( )
;,,) *
migrationBuilder.. 
... 
AlterColumn.. (
<..( )
DateTime..) 1
>..1 2
(..2 3
name// 
:// 
$str// "
,//" #
table00 
:00 
$str00 +
,00+ ,
type11 
:11 
$str11 !
,11! "
nullable22 
:22 
true22 
,22 

oldClrType33 
:33 
typeof33 "
(33" #
DateTime33# +
)33+ ,
,33, -
oldType44 
:44 
$str44 $
)44$ %
;44% &
migrationBuilder66 
.66 
AlterColumn66 (
<66( )
string66) /
>66/ 0
(660 1
name77 
:77 
$str77  
,77  !
table88 
:88 
$str88 +
,88+ ,
type99 
:99 
$str99 %
,99% &
nullable:: 
::: 
true:: 
,:: 

oldClrType;; 
:;; 
typeof;; "
(;;" #
string;;# )
);;) *
,;;* +
oldType<< 
:<< 
$str<< (
)<<( )
;<<) *
migrationBuilder>> 
.>> 
AlterColumn>> (
<>>( )
DateTime>>) 1
>>>1 2
(>>2 3
name?? 
:?? 
$str?? "
,??" #
table@@ 
:@@ 
$str@@ +
,@@+ ,
typeAA 
:AA 
$strAA !
,AA! "
nullableBB 
:BB 
trueBB 
,BB 

oldClrTypeCC 
:CC 
typeofCC "
(CC" #
DateTimeCC# +
)CC+ ,
,CC, -
oldTypeDD 
:DD 
$strDD $
)DD$ %
;DD% &
migrationBuilderFF 
.FF 
AlterColumnFF (
<FF( )
stringFF) /
>FF/ 0
(FF0 1
nameGG 
:GG 
$strGG  
,GG  !
tableHH 
:HH 
$strHH +
,HH+ ,
typeII 
:II 
$strII %
,II% &
nullableJJ 
:JJ 
trueJJ 
,JJ 

oldClrTypeKK 
:KK 
typeofKK "
(KK" #
stringKK# )
)KK) *
,KK* +
oldTypeLL 
:LL 
$strLL (
)LL( )
;LL) *
migrationBuilderNN 
.NN 
AlterColumnNN (
<NN( )
DateTimeNN) 1
>NN1 2
(NN2 3
nameOO 
:OO 
$strOO "
,OO" #
tablePP 
:PP 
$strPP '
,PP' (
typeQQ 
:QQ 
$strQQ !
,QQ! "
nullableRR 
:RR 
trueRR 
,RR 

oldClrTypeSS 
:SS 
typeofSS "
(SS" #
DateTimeSS# +
)SS+ ,
,SS, -
oldTypeTT 
:TT 
$strTT $
)TT$ %
;TT% &
migrationBuilderVV 
.VV 
AlterColumnVV (
<VV( )
stringVV) /
>VV/ 0
(VV0 1
nameWW 
:WW 
$strWW  
,WW  !
tableXX 
:XX 
$strXX '
,XX' (
typeYY 
:YY 
$strYY %
,YY% &
nullableZZ 
:ZZ 
trueZZ 
,ZZ 

oldClrType[[ 
:[[ 
typeof[[ "
([[" #
string[[# )
)[[) *
,[[* +
oldType\\ 
:\\ 
$str\\ (
)\\( )
;\\) *
migrationBuilder^^ 
.^^ 
AlterColumn^^ (
<^^( )
DateTime^^) 1
>^^1 2
(^^2 3
name__ 
:__ 
$str__ "
,__" #
table`` 
:`` 
$str`` '
,``' (
typeaa 
:aa 
$straa !
,aa! "
nullablebb 
:bb 
truebb 
,bb 

oldClrTypecc 
:cc 
typeofcc "
(cc" #
DateTimecc# +
)cc+ ,
,cc, -
oldTypedd 
:dd 
$strdd $
)dd$ %
;dd% &
migrationBuilderff 
.ff 
AlterColumnff (
<ff( )
stringff) /
>ff/ 0
(ff0 1
namegg 
:gg 
$strgg  
,gg  !
tablehh 
:hh 
$strhh '
,hh' (
typeii 
:ii 
$strii %
,ii% &
nullablejj 
:jj 
truejj 
,jj 

oldClrTypekk 
:kk 
typeofkk "
(kk" #
stringkk# )
)kk) *
,kk* +
oldTypell 
:ll 
$strll (
)ll( )
;ll) *
migrationBuildernn 
.nn 
AlterColumnnn (
<nn( )
DateTimenn) 1
>nn1 2
(nn2 3
nameoo 
:oo 
$stroo "
,oo" #
tablepp 
:pp 
$strpp #
,pp# $
typeqq 
:qq 
$strqq !
,qq! "
nullablerr 
:rr 
truerr 
,rr 

oldClrTypess 
:ss 
typeofss "
(ss" #
DateTimess# +
)ss+ ,
,ss, -
oldTypett 
:tt 
$strtt $
)tt$ %
;tt% &
migrationBuildervv 
.vv 
AlterColumnvv (
<vv( )
stringvv) /
>vv/ 0
(vv0 1
nameww 
:ww 
$strww  
,ww  !
tablexx 
:xx 
$strxx #
,xx# $
typeyy 
:yy 
$stryy %
,yy% &
nullablezz 
:zz 
truezz 
,zz 

oldClrType{{ 
:{{ 
typeof{{ "
({{" #
string{{# )
){{) *
,{{* +
oldType|| 
:|| 
$str|| (
)||( )
;||) *
migrationBuilder~~ 
.~~ 
AlterColumn~~ (
<~~( )
DateTime~~) 1
>~~1 2
(~~2 3
name 
: 
$str "
," #
table
ÄÄ 
:
ÄÄ 
$str
ÄÄ #
,
ÄÄ# $
type
ÅÅ 
:
ÅÅ 
$str
ÅÅ !
,
ÅÅ! "
nullable
ÇÇ 
:
ÇÇ 
true
ÇÇ 
,
ÇÇ 

oldClrType
ÉÉ 
:
ÉÉ 
typeof
ÉÉ "
(
ÉÉ" #
DateTime
ÉÉ# +
)
ÉÉ+ ,
,
ÉÉ, -
oldType
ÑÑ 
:
ÑÑ 
$str
ÑÑ $
)
ÑÑ$ %
;
ÑÑ% &
migrationBuilder
ÜÜ 
.
ÜÜ 
AlterColumn
ÜÜ (
<
ÜÜ( )
string
ÜÜ) /
>
ÜÜ/ 0
(
ÜÜ0 1
name
áá 
:
áá 
$str
áá  
,
áá  !
table
àà 
:
àà 
$str
àà #
,
àà# $
type
ââ 
:
ââ 
$str
ââ %
,
ââ% &
nullable
ää 
:
ää 
true
ää 
,
ää 

oldClrType
ãã 
:
ãã 
typeof
ãã "
(
ãã" #
string
ãã# )
)
ãã) *
,
ãã* +
oldType
åå 
:
åå 
$str
åå (
)
åå( )
;
åå) *
}
çç 	
	protected
êê 
override
êê 
void
êê 
Down
êê  $
(
êê$ %
MigrationBuilder
êê% 5
migrationBuilder
êê6 F
)
êêF G
{
ëë 	
migrationBuilder
íí 
.
íí 
AlterColumn
íí (
<
íí( )
DateTime
íí) 1
>
íí1 2
(
íí2 3
name
ìì 
:
ìì 
$str
ìì "
,
ìì" #
table
îî 
:
îî 
$str
îî *
,
îî* +
type
ïï 
:
ïï 
$str
ïï !
,
ïï! "
nullable
ññ 
:
ññ 
false
ññ 
,
ññ  
defaultValue
óó 
:
óó 
new
óó !
DateTime
óó" *
(
óó* +
$num
óó+ ,
,
óó, -
$num
óó. /
,
óó/ 0
$num
óó1 2
,
óó2 3
$num
óó4 5
,
óó5 6
$num
óó7 8
,
óó8 9
$num
óó: ;
,
óó; <
$num
óó= >
,
óó> ?
DateTimeKind
óó@ L
.
óóL M
Unspecified
óóM X
)
óóX Y
,
óóY Z

oldClrType
òò 
:
òò 
typeof
òò "
(
òò" #
DateTime
òò# +
)
òò+ ,
,
òò, -
oldType
ôô 
:
ôô 
$str
ôô $
,
ôô$ %
oldNullable
öö 
:
öö 
true
öö !
)
öö! "
;
öö" #
migrationBuilder
úú 
.
úú 
AlterColumn
úú (
<
úú( )
string
úú) /
>
úú/ 0
(
úú0 1
name
ùù 
:
ùù 
$str
ùù  
,
ùù  !
table
ûû 
:
ûû 
$str
ûû *
,
ûû* +
type
üü 
:
üü 
$str
üü %
,
üü% &
nullable
†† 
:
†† 
false
†† 
,
††  
defaultValue
°° 
:
°° 
$str
°°  
,
°°  !

oldClrType
¢¢ 
:
¢¢ 
typeof
¢¢ "
(
¢¢" #
string
¢¢# )
)
¢¢) *
,
¢¢* +
oldType
££ 
:
££ 
$str
££ (
,
££( )
oldNullable
§§ 
:
§§ 
true
§§ !
)
§§! "
;
§§" #
migrationBuilder
¶¶ 
.
¶¶ 
AlterColumn
¶¶ (
<
¶¶( )
DateTime
¶¶) 1
>
¶¶1 2
(
¶¶2 3
name
ßß 
:
ßß 
$str
ßß "
,
ßß" #
table
®® 
:
®® 
$str
®® *
,
®®* +
type
©© 
:
©© 
$str
©© !
,
©©! "
nullable
™™ 
:
™™ 
false
™™ 
,
™™  
defaultValue
´´ 
:
´´ 
new
´´ !
DateTime
´´" *
(
´´* +
$num
´´+ ,
,
´´, -
$num
´´. /
,
´´/ 0
$num
´´1 2
,
´´2 3
$num
´´4 5
,
´´5 6
$num
´´7 8
,
´´8 9
$num
´´: ;
,
´´; <
$num
´´= >
,
´´> ?
DateTimeKind
´´@ L
.
´´L M
Unspecified
´´M X
)
´´X Y
,
´´Y Z

oldClrType
¨¨ 
:
¨¨ 
typeof
¨¨ "
(
¨¨" #
DateTime
¨¨# +
)
¨¨+ ,
,
¨¨, -
oldType
≠≠ 
:
≠≠ 
$str
≠≠ $
,
≠≠$ %
oldNullable
ÆÆ 
:
ÆÆ 
true
ÆÆ !
)
ÆÆ! "
;
ÆÆ" #
migrationBuilder
∞∞ 
.
∞∞ 
AlterColumn
∞∞ (
<
∞∞( )
string
∞∞) /
>
∞∞/ 0
(
∞∞0 1
name
±± 
:
±± 
$str
±±  
,
±±  !
table
≤≤ 
:
≤≤ 
$str
≤≤ *
,
≤≤* +
type
≥≥ 
:
≥≥ 
$str
≥≥ %
,
≥≥% &
nullable
¥¥ 
:
¥¥ 
false
¥¥ 
,
¥¥  
defaultValue
µµ 
:
µµ 
$str
µµ  
,
µµ  !

oldClrType
∂∂ 
:
∂∂ 
typeof
∂∂ "
(
∂∂" #
string
∂∂# )
)
∂∂) *
,
∂∂* +
oldType
∑∑ 
:
∑∑ 
$str
∑∑ (
,
∑∑( )
oldNullable
∏∏ 
:
∏∏ 
true
∏∏ !
)
∏∏! "
;
∏∏" #
migrationBuilder
∫∫ 
.
∫∫ 
AlterColumn
∫∫ (
<
∫∫( )
DateTime
∫∫) 1
>
∫∫1 2
(
∫∫2 3
name
ªª 
:
ªª 
$str
ªª "
,
ªª" #
table
ºº 
:
ºº 
$str
ºº +
,
ºº+ ,
type
ΩΩ 
:
ΩΩ 
$str
ΩΩ !
,
ΩΩ! "
nullable
ææ 
:
ææ 
false
ææ 
,
ææ  
defaultValue
øø 
:
øø 
new
øø !
DateTime
øø" *
(
øø* +
$num
øø+ ,
,
øø, -
$num
øø. /
,
øø/ 0
$num
øø1 2
,
øø2 3
$num
øø4 5
,
øø5 6
$num
øø7 8
,
øø8 9
$num
øø: ;
,
øø; <
$num
øø= >
,
øø> ?
DateTimeKind
øø@ L
.
øøL M
Unspecified
øøM X
)
øøX Y
,
øøY Z

oldClrType
¿¿ 
:
¿¿ 
typeof
¿¿ "
(
¿¿" #
DateTime
¿¿# +
)
¿¿+ ,
,
¿¿, -
oldType
¡¡ 
:
¡¡ 
$str
¡¡ $
,
¡¡$ %
oldNullable
¬¬ 
:
¬¬ 
true
¬¬ !
)
¬¬! "
;
¬¬" #
migrationBuilder
ƒƒ 
.
ƒƒ 
AlterColumn
ƒƒ (
<
ƒƒ( )
string
ƒƒ) /
>
ƒƒ/ 0
(
ƒƒ0 1
name
≈≈ 
:
≈≈ 
$str
≈≈  
,
≈≈  !
table
∆∆ 
:
∆∆ 
$str
∆∆ +
,
∆∆+ ,
type
«« 
:
«« 
$str
«« %
,
««% &
nullable
»» 
:
»» 
false
»» 
,
»»  
defaultValue
…… 
:
…… 
$str
……  
,
……  !

oldClrType
   
:
   
typeof
   "
(
  " #
string
  # )
)
  ) *
,
  * +
oldType
ÀÀ 
:
ÀÀ 
$str
ÀÀ (
,
ÀÀ( )
oldNullable
ÃÃ 
:
ÃÃ 
true
ÃÃ !
)
ÃÃ! "
;
ÃÃ" #
migrationBuilder
ŒŒ 
.
ŒŒ 
AlterColumn
ŒŒ (
<
ŒŒ( )
DateTime
ŒŒ) 1
>
ŒŒ1 2
(
ŒŒ2 3
name
œœ 
:
œœ 
$str
œœ "
,
œœ" #
table
–– 
:
–– 
$str
–– +
,
––+ ,
type
—— 
:
—— 
$str
—— !
,
——! "
nullable
““ 
:
““ 
false
““ 
,
““  
defaultValue
”” 
:
”” 
new
”” !
DateTime
””" *
(
””* +
$num
””+ ,
,
””, -
$num
””. /
,
””/ 0
$num
””1 2
,
””2 3
$num
””4 5
,
””5 6
$num
””7 8
,
””8 9
$num
””: ;
,
””; <
$num
””= >
,
””> ?
DateTimeKind
””@ L
.
””L M
Unspecified
””M X
)
””X Y
,
””Y Z

oldClrType
‘‘ 
:
‘‘ 
typeof
‘‘ "
(
‘‘" #
DateTime
‘‘# +
)
‘‘+ ,
,
‘‘, -
oldType
’’ 
:
’’ 
$str
’’ $
,
’’$ %
oldNullable
÷÷ 
:
÷÷ 
true
÷÷ !
)
÷÷! "
;
÷÷" #
migrationBuilder
ÿÿ 
.
ÿÿ 
AlterColumn
ÿÿ (
<
ÿÿ( )
string
ÿÿ) /
>
ÿÿ/ 0
(
ÿÿ0 1
name
ŸŸ 
:
ŸŸ 
$str
ŸŸ  
,
ŸŸ  !
table
⁄⁄ 
:
⁄⁄ 
$str
⁄⁄ +
,
⁄⁄+ ,
type
€€ 
:
€€ 
$str
€€ %
,
€€% &
nullable
‹‹ 
:
‹‹ 
false
‹‹ 
,
‹‹  
defaultValue
›› 
:
›› 
$str
››  
,
››  !

oldClrType
ﬁﬁ 
:
ﬁﬁ 
typeof
ﬁﬁ "
(
ﬁﬁ" #
string
ﬁﬁ# )
)
ﬁﬁ) *
,
ﬁﬁ* +
oldType
ﬂﬂ 
:
ﬂﬂ 
$str
ﬂﬂ (
,
ﬂﬂ( )
oldNullable
‡‡ 
:
‡‡ 
true
‡‡ !
)
‡‡! "
;
‡‡" #
migrationBuilder
‚‚ 
.
‚‚ 
AlterColumn
‚‚ (
<
‚‚( )
DateTime
‚‚) 1
>
‚‚1 2
(
‚‚2 3
name
„„ 
:
„„ 
$str
„„ "
,
„„" #
table
‰‰ 
:
‰‰ 
$str
‰‰ '
,
‰‰' (
type
ÂÂ 
:
ÂÂ 
$str
ÂÂ !
,
ÂÂ! "
nullable
ÊÊ 
:
ÊÊ 
false
ÊÊ 
,
ÊÊ  
defaultValue
ÁÁ 
:
ÁÁ 
new
ÁÁ !
DateTime
ÁÁ" *
(
ÁÁ* +
$num
ÁÁ+ ,
,
ÁÁ, -
$num
ÁÁ. /
,
ÁÁ/ 0
$num
ÁÁ1 2
,
ÁÁ2 3
$num
ÁÁ4 5
,
ÁÁ5 6
$num
ÁÁ7 8
,
ÁÁ8 9
$num
ÁÁ: ;
,
ÁÁ; <
$num
ÁÁ= >
,
ÁÁ> ?
DateTimeKind
ÁÁ@ L
.
ÁÁL M
Unspecified
ÁÁM X
)
ÁÁX Y
,
ÁÁY Z

oldClrType
ËË 
:
ËË 
typeof
ËË "
(
ËË" #
DateTime
ËË# +
)
ËË+ ,
,
ËË, -
oldType
ÈÈ 
:
ÈÈ 
$str
ÈÈ $
,
ÈÈ$ %
oldNullable
ÍÍ 
:
ÍÍ 
true
ÍÍ !
)
ÍÍ! "
;
ÍÍ" #
migrationBuilder
ÏÏ 
.
ÏÏ 
AlterColumn
ÏÏ (
<
ÏÏ( )
string
ÏÏ) /
>
ÏÏ/ 0
(
ÏÏ0 1
name
ÌÌ 
:
ÌÌ 
$str
ÌÌ  
,
ÌÌ  !
table
ÓÓ 
:
ÓÓ 
$str
ÓÓ '
,
ÓÓ' (
type
ÔÔ 
:
ÔÔ 
$str
ÔÔ %
,
ÔÔ% &
nullable
 
:
 
false
 
,
  
defaultValue
ÒÒ 
:
ÒÒ 
$str
ÒÒ  
,
ÒÒ  !

oldClrType
ÚÚ 
:
ÚÚ 
typeof
ÚÚ "
(
ÚÚ" #
string
ÚÚ# )
)
ÚÚ) *
,
ÚÚ* +
oldType
ÛÛ 
:
ÛÛ 
$str
ÛÛ (
,
ÛÛ( )
oldNullable
ÙÙ 
:
ÙÙ 
true
ÙÙ !
)
ÙÙ! "
;
ÙÙ" #
migrationBuilder
ˆˆ 
.
ˆˆ 
AlterColumn
ˆˆ (
<
ˆˆ( )
DateTime
ˆˆ) 1
>
ˆˆ1 2
(
ˆˆ2 3
name
˜˜ 
:
˜˜ 
$str
˜˜ "
,
˜˜" #
table
¯¯ 
:
¯¯ 
$str
¯¯ '
,
¯¯' (
type
˘˘ 
:
˘˘ 
$str
˘˘ !
,
˘˘! "
nullable
˙˙ 
:
˙˙ 
false
˙˙ 
,
˙˙  
defaultValue
˚˚ 
:
˚˚ 
new
˚˚ !
DateTime
˚˚" *
(
˚˚* +
$num
˚˚+ ,
,
˚˚, -
$num
˚˚. /
,
˚˚/ 0
$num
˚˚1 2
,
˚˚2 3
$num
˚˚4 5
,
˚˚5 6
$num
˚˚7 8
,
˚˚8 9
$num
˚˚: ;
,
˚˚; <
$num
˚˚= >
,
˚˚> ?
DateTimeKind
˚˚@ L
.
˚˚L M
Unspecified
˚˚M X
)
˚˚X Y
,
˚˚Y Z

oldClrType
¸¸ 
:
¸¸ 
typeof
¸¸ "
(
¸¸" #
DateTime
¸¸# +
)
¸¸+ ,
,
¸¸, -
oldType
˝˝ 
:
˝˝ 
$str
˝˝ $
,
˝˝$ %
oldNullable
˛˛ 
:
˛˛ 
true
˛˛ !
)
˛˛! "
;
˛˛" #
migrationBuilder
ÄÄ 
.
ÄÄ 
AlterColumn
ÄÄ (
<
ÄÄ( )
string
ÄÄ) /
>
ÄÄ/ 0
(
ÄÄ0 1
name
ÅÅ 
:
ÅÅ 
$str
ÅÅ  
,
ÅÅ  !
table
ÇÇ 
:
ÇÇ 
$str
ÇÇ '
,
ÇÇ' (
type
ÉÉ 
:
ÉÉ 
$str
ÉÉ %
,
ÉÉ% &
nullable
ÑÑ 
:
ÑÑ 
false
ÑÑ 
,
ÑÑ  
defaultValue
ÖÖ 
:
ÖÖ 
$str
ÖÖ  
,
ÖÖ  !

oldClrType
ÜÜ 
:
ÜÜ 
typeof
ÜÜ "
(
ÜÜ" #
string
ÜÜ# )
)
ÜÜ) *
,
ÜÜ* +
oldType
áá 
:
áá 
$str
áá (
,
áá( )
oldNullable
àà 
:
àà 
true
àà !
)
àà! "
;
àà" #
migrationBuilder
ää 
.
ää 
AlterColumn
ää (
<
ää( )
DateTime
ää) 1
>
ää1 2
(
ää2 3
name
ãã 
:
ãã 
$str
ãã "
,
ãã" #
table
åå 
:
åå 
$str
åå #
,
åå# $
type
çç 
:
çç 
$str
çç !
,
çç! "
nullable
éé 
:
éé 
false
éé 
,
éé  
defaultValue
èè 
:
èè 
new
èè !
DateTime
èè" *
(
èè* +
$num
èè+ ,
,
èè, -
$num
èè. /
,
èè/ 0
$num
èè1 2
,
èè2 3
$num
èè4 5
,
èè5 6
$num
èè7 8
,
èè8 9
$num
èè: ;
,
èè; <
$num
èè= >
,
èè> ?
DateTimeKind
èè@ L
.
èèL M
Unspecified
èèM X
)
èèX Y
,
èèY Z

oldClrType
êê 
:
êê 
typeof
êê "
(
êê" #
DateTime
êê# +
)
êê+ ,
,
êê, -
oldType
ëë 
:
ëë 
$str
ëë $
,
ëë$ %
oldNullable
íí 
:
íí 
true
íí !
)
íí! "
;
íí" #
migrationBuilder
îî 
.
îî 
AlterColumn
îî (
<
îî( )
string
îî) /
>
îî/ 0
(
îî0 1
name
ïï 
:
ïï 
$str
ïï  
,
ïï  !
table
ññ 
:
ññ 
$str
ññ #
,
ññ# $
type
óó 
:
óó 
$str
óó %
,
óó% &
nullable
òò 
:
òò 
false
òò 
,
òò  
defaultValue
ôô 
:
ôô 
$str
ôô  
,
ôô  !

oldClrType
öö 
:
öö 
typeof
öö "
(
öö" #
string
öö# )
)
öö) *
,
öö* +
oldType
õõ 
:
õõ 
$str
õõ (
,
õõ( )
oldNullable
úú 
:
úú 
true
úú !
)
úú! "
;
úú" #
migrationBuilder
ûû 
.
ûû 
AlterColumn
ûû (
<
ûû( )
DateTime
ûû) 1
>
ûû1 2
(
ûû2 3
name
üü 
:
üü 
$str
üü "
,
üü" #
table
†† 
:
†† 
$str
†† #
,
††# $
type
°° 
:
°° 
$str
°° !
,
°°! "
nullable
¢¢ 
:
¢¢ 
false
¢¢ 
,
¢¢  
defaultValue
££ 
:
££ 
new
££ !
DateTime
££" *
(
££* +
$num
££+ ,
,
££, -
$num
££. /
,
££/ 0
$num
££1 2
,
££2 3
$num
££4 5
,
££5 6
$num
££7 8
,
££8 9
$num
££: ;
,
££; <
$num
££= >
,
££> ?
DateTimeKind
££@ L
.
££L M
Unspecified
££M X
)
££X Y
,
££Y Z

oldClrType
§§ 
:
§§ 
typeof
§§ "
(
§§" #
DateTime
§§# +
)
§§+ ,
,
§§, -
oldType
•• 
:
•• 
$str
•• $
,
••$ %
oldNullable
¶¶ 
:
¶¶ 
true
¶¶ !
)
¶¶! "
;
¶¶" #
migrationBuilder
®® 
.
®® 
AlterColumn
®® (
<
®®( )
string
®®) /
>
®®/ 0
(
®®0 1
name
©© 
:
©© 
$str
©©  
,
©©  !
table
™™ 
:
™™ 
$str
™™ #
,
™™# $
type
´´ 
:
´´ 
$str
´´ %
,
´´% &
nullable
¨¨ 
:
¨¨ 
false
¨¨ 
,
¨¨  
defaultValue
≠≠ 
:
≠≠ 
$str
≠≠  
,
≠≠  !

oldClrType
ÆÆ 
:
ÆÆ 
typeof
ÆÆ "
(
ÆÆ" #
string
ÆÆ# )
)
ÆÆ) *
,
ÆÆ* +
oldType
ØØ 
:
ØØ 
$str
ØØ (
,
ØØ( )
oldNullable
∞∞ 
:
∞∞ 
true
∞∞ !
)
∞∞! "
;
∞∞" #
}
±± 	
}
≤≤ 
}≥≥ ∫$
åD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240620015801_AddCreateTimeInApplicationUser.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public		 

partial		 
class		 *
AddCreateTimeInApplicationUser		 7
:		8 9
	Migration		: C
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
	AddColumn &
<& '
DateTime' /
>/ 0
(0 1
name 
: 
$str "
," #
table 
: 
$str $
,$ %
type 
: 
$str !
,! "
nullable 
: 
true 
) 
;  
migrationBuilder 
. 

UpdateData '
(' (
table 
: 
$str $
,$ %
	keyColumn 
: 
$str 
,  
keyValue 
: 
$str +
,+ ,
columns 
: 
new 
[ 
] 
{  
$str! 3
,3 4
$str5 A
,A B
$strC Q
,Q R
$strS b
,b c
$strd p
}q r
,r s
values 
: 
new 
object "
[" #
]# $
{% &
$str' M
,M N
newO R
DateTimeS [
([ \
$num\ `
,` a
$numb c
,c d
$nume g
,g h
$numi j
,j k
$numl n
,n o
$nump r
,r s
$numt w
,w x
DateTimeKind	y Ö
.
Ö Ü
Utc
Ü â
)
â ä
.
ä ã
AddTicks
ã ì
(
ì î
$num
î ò
)
ò ô
,
ô ö
$str
õ Ò
,
Ò Ú
$str
Û ô
,
ô ö
new
õ û
DateTime
ü ß
(
ß ®
$num
® ¨
,
¨ ≠
$num
Æ Ø
,
Ø ∞
$num
± ≥
,
≥ ¥
$num
µ ∂
,
∂ ∑
$num
∏ ∫
,
∫ ª
$num
º æ
,
æ ø
$num
¿ √
,
√ ƒ
DateTimeKind
≈ —
.
— “
Utc
“ ’
)
’ ÷
.
÷ ◊
AddTicks
◊ ﬂ
(
ﬂ ‡
$num
‡ „
)
„ ‰
}
Â Ê
)
Ê Á
;
Á Ë
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name   
:   
$str   "
,  " #
table!! 
:!! 
$str!! $
)!!$ %
;!!% &
migrationBuilder## 
.## 

UpdateData## '
(##' (
table$$ 
:$$ 
$str$$ $
,$$$ %
	keyColumn%% 
:%% 
$str%% 
,%%  
keyValue&& 
:&& 
$str&& +
,&&+ ,
columns'' 
:'' 
new'' 
['' 
]'' 
{''  
$str''! 3
,''3 4
$str''5 C
,''C D
$str''E T
,''T U
$str''V b
}''c d
,''d e
values(( 
:(( 
new(( 
object(( "
[((" #
]((# $
{((% &
$str((' M
,((M N
$str	((O •
,
((• ¶
$str
((ß Õ
,
((Õ Œ
new
((œ “
DateTime
((” €
(
((€ ‹
$num
((‹ ‡
,
((‡ ·
$num
((‚ „
,
((„ ‰
$num
((Â Á
,
((Á Ë
$num
((È Í
,
((Í Î
$num
((Ï Ó
,
((Ó Ô
$num
(( Ú
,
((Ú Û
$num
((Ù ˜
,
((˜ ¯
DateTimeKind
((˘ Ö
.
((Ö Ü
Utc
((Ü â
)
((â ä
.
((ä ã
AddTicks
((ã ì
(
((ì î
$num
((î ò
)
((ò ô
}
((ö õ
)
((õ ú
;
((ú ù
})) 	
}** 
}++ ≈*
âD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240619024532_AddMorePropertiesInstructor.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public		 

partial		 
class		 '
AddMorePropertiesInstructor		 4
:		5 6
	Migration		7 @
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
	AddColumn &
<& '
bool' +
>+ ,
(, -
name 
: 
$str "
," #
table 
: 
$str $
,$ %
type 
: 
$str 
, 
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str "
," #
table 
: 
$str $
,$ %
type 
: 
$str %
,% &
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
	AddColumn &
<& '
DateTime' /
>/ 0
(0 1
name 
: 
$str $
,$ %
table 
: 
$str $
,$ %
type 
: 
$str !
,! "
nullable 
: 
true 
) 
;  
migrationBuilder   
.   

UpdateData   '
(  ' (
table!! 
:!! 
$str!! $
,!!$ %
	keyColumn"" 
:"" 
$str"" 
,""  
keyValue## 
:## 
$str## +
,##+ ,
columns$$ 
:$$ 
new$$ 
[$$ 
]$$ 
{$$  
$str$$! 3
,$$3 4
$str$$5 C
,$$C D
$str$$E T
,$$T U
$str$$V b
}$$c d
,$$d e
values%% 
:%% 
new%% 
object%% "
[%%" #
]%%# $
{%%% &
$str%%' M
,%%M N
$str	%%O •
,
%%• ¶
$str
%%ß Õ
,
%%Õ Œ
new
%%œ “
DateTime
%%” €
(
%%€ ‹
$num
%%‹ ‡
,
%%‡ ·
$num
%%‚ „
,
%%„ ‰
$num
%%Â Á
,
%%Á Ë
$num
%%È Í
,
%%Í Î
$num
%%Ï Ó
,
%%Ó Ô
$num
%% Ú
,
%%Ú Û
$num
%%Ù ˜
,
%%˜ ¯
DateTimeKind
%%˘ Ö
.
%%Ö Ü
Utc
%%Ü â
)
%%â ä
.
%%ä ã
AddTicks
%%ã ì
(
%%ì î
$num
%%î ò
)
%%ò ô
}
%%ö õ
)
%%õ ú
;
%%ú ù
}&& 	
	protected)) 
override)) 
void)) 
Down))  $
())$ %
MigrationBuilder))% 5
migrationBuilder))6 F
)))F G
{** 	
migrationBuilder++ 
.++ 

DropColumn++ '
(++' (
name,, 
:,, 
$str,, "
,,," #
table-- 
:-- 
$str-- $
)--$ %
;--% &
migrationBuilder// 
.// 

DropColumn// '
(//' (
name00 
:00 
$str00 "
,00" #
table11 
:11 
$str11 $
)11$ %
;11% &
migrationBuilder33 
.33 

DropColumn33 '
(33' (
name44 
:44 
$str44 $
,44$ %
table55 
:55 
$str55 $
)55$ %
;55% &
migrationBuilder77 
.77 

UpdateData77 '
(77' (
table88 
:88 
$str88 $
,88$ %
	keyColumn99 
:99 
$str99 
,99  
keyValue:: 
::: 
$str:: +
,::+ ,
columns;; 
:;; 
new;; 
[;; 
];; 
{;;  
$str;;! 3
,;;3 4
$str;;5 C
,;;C D
$str;;E T
,;;T U
$str;;V b
};;c d
,;;d e
values<< 
:<< 
new<< 
object<< "
[<<" #
]<<# $
{<<% &
$str<<' M
,<<M N
$str	<<O •
,
<<• ¶
$str
<<ß Õ
,
<<Õ Œ
new
<<œ “
DateTime
<<” €
(
<<€ ‹
$num
<<‹ ‡
,
<<‡ ·
$num
<<‚ „
,
<<„ ‰
$num
<<Â Á
,
<<Á Ë
$num
<<È Í
,
<<Í Î
$num
<<Ï Ó
,
<<Ó Ô
$num
<< Ú
,
<<Ú Û
$num
<<Ù ˜
,
<<˜ ¯
DateTimeKind
<<˘ Ö
.
<<Ö Ü
Utc
<<Ü â
)
<<â ä
.
<<ä ã
AddTicks
<<ã ì
(
<<ì î
$num
<<î ò
)
<<ò ô
}
<<ö õ
)
<<õ ú
;
<<ú ù
}== 	
}>> 
}?? ˝ 
âD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240619024142_RemoveIsAceptedInInstructor.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public		 

partial		 
class		 '
RemoveIsAceptedInInstructor		 4
:		5 6
	Migration		7 @
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str "
," #
table 
: 
$str $
)$ %
;% &
migrationBuilder 
. 

UpdateData '
(' (
table 
: 
$str $
,$ %
	keyColumn 
: 
$str 
,  
keyValue 
: 
$str +
,+ ,
columns 
: 
new 
[ 
] 
{  
$str! 3
,3 4
$str5 C
,C D
$strE T
,T U
$strV b
}c d
,d e
values 
: 
new 
object "
[" #
]# $
{% &
$str' M
,M N
$str	O •
,
• ¶
$str
ß Õ
,
Õ Œ
new
œ “
DateTime
” €
(
€ ‹
$num
‹ ‡
,
‡ ·
$num
‚ „
,
„ ‰
$num
Â Á
,
Á Ë
$num
È Í
,
Í Î
$num
Ï Ó
,
Ó Ô
$num
 Ú
,
Ú Û
$num
Ù ˜
,
˜ ¯
DateTimeKind
˘ Ö
.
Ö Ü
Utc
Ü â
)
â ä
.
ä ã
AddTicks
ã ì
(
ì î
$num
î ò
)
ò ô
}
ö õ
)
õ ú
;
ú ù
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
	AddColumn &
<& '
bool' +
>+ ,
(, -
name 
: 
$str "
," #
table 
: 
$str $
,$ %
type   
:   
$str   
,   
nullable!! 
:!! 
false!! 
,!!  
defaultValue"" 
:"" 
false"" #
)""# $
;""$ %
migrationBuilder$$ 
.$$ 

UpdateData$$ '
($$' (
table%% 
:%% 
$str%% $
,%%$ %
	keyColumn&& 
:&& 
$str&& 
,&&  
keyValue'' 
:'' 
$str'' +
,''+ ,
columns(( 
:(( 
new(( 
[(( 
](( 
{((  
$str((! 3
,((3 4
$str((5 C
,((C D
$str((E T
,((T U
$str((V b
}((c d
,((d e
values)) 
:)) 
new)) 
object)) "
[))" #
]))# $
{))% &
$str))' M
,))M N
$str	))O •
,
))• ¶
$str
))ß Õ
,
))Õ Œ
new
))œ “
DateTime
))” €
(
))€ ‹
$num
))‹ ‡
,
))‡ ·
$num
))‚ „
,
))„ ‰
$num
))Â Á
,
))Á Ë
$num
))È Î
,
))Î Ï
$num
))Ì Ô
,
))Ô 
$num
))Ò Û
,
))Û Ù
$num
))ı ¯
,
))¯ ˘
DateTimeKind
))˙ Ü
.
))Ü á
Utc
))á ä
)
))ä ã
.
))ã å
AddTicks
))å î
(
))î ï
$num
))ï ô
)
))ô ö
}
))õ ú
)
))ú ù
;
))ù û
}** 	
}++ 
},, ¶
àD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240617111413_RemoveRejectedInInstructor.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public		 

partial		 
class		 &
RemoveRejectedInInstructor		 3
:		4 5
	Migration		6 ?
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str "
," #
table 
: 
$str $
)$ %
;% &
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str "
," #
table 
: 
$str $
)$ %
;% &
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str $
,$ %
table 
: 
$str $
)$ %
;% &
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
	AddColumn &
<& '
bool' +
>+ ,
(, -
name 
: 
$str "
," #
table   
:   
$str   $
,  $ %
type!! 
:!! 
$str!! 
,!! 
nullable"" 
:"" 
false"" 
,""  
defaultValue## 
:## 
false## #
)### $
;##$ %
migrationBuilder%% 
.%% 
	AddColumn%% &
<%%& '
string%%' -
>%%- .
(%%. /
name&& 
:&& 
$str&& "
,&&" #
table'' 
:'' 
$str'' $
,''$ %
type(( 
:(( 
$str(( %
,((% &
nullable)) 
:)) 
false)) 
,))  
defaultValue** 
:** 
$str**  
)**  !
;**! "
migrationBuilder,, 
.,, 
	AddColumn,, &
<,,& '
DateTime,,' /
>,,/ 0
(,,0 1
name-- 
:-- 
$str-- $
,--$ %
table.. 
:.. 
$str.. $
,..$ %
type// 
:// 
$str// !
,//! "
nullable00 
:00 
true00 
)00 
;00  
}11 	
}22 
}33 Ú
áD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240614115054_AddEmailTemplatesSeedData.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public 

partial 
class %
AddEmailTemplatesSeedData 2
:3 4
	Migration5 >
{		 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{   	
}"" 	
}## 
}$$ Í
ÉD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240614074722_SeedAdminUserAndRoles.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{		 
public 

partial 
class !
SeedAdminUserAndRoles .
:/ 0
	Migration1 :
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
}## 	
	protected&& 
override&& 
void&& 
Down&&  $
(&&$ %
MigrationBuilder&&% 5
migrationBuilder&&6 F
)&&F G
{'' 	
}@@ 	
}AA 
}BB ¿8
ÉD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240614063232_AddEmailTemplateTable.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public		 

partial		 
class		 !
AddEmailTemplateTable		 .
:		/ 0
	Migration		1 :
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str &
,& '
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
Guid& *
>* +
(+ ,
type, 0
:0 1
$str2 D
,D E
nullableF N
:N O
falseP U
)U V
,V W
TemplateName  
=! "
table# (
.( )
Column) /
</ 0
string0 6
>6 7
(7 8
type8 <
:< =
$str> M
,M N
nullableO W
:W X
falseY ^
)^ _
,_ `

SenderName 
=  
table! &
.& '
Column' -
<- .
string. 4
>4 5
(5 6
type6 :
:: ;
$str< K
,K L
nullableM U
:U V
trueW [
)[ \
,\ ]
SenderEmail 
=  !
table" '
.' (
Column( .
<. /
string/ 5
>5 6
(6 7
type7 ;
:; <
$str= L
,L M
nullableN V
:V W
trueX \
)\ ]
,] ^
Category 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: I
,I J
nullableK S
:S T
falseU Z
)Z [
,[ \
SubjectLine 
=  !
table" '
.' (
Column( .
<. /
string/ 5
>5 6
(6 7
type7 ;
:; <
$str= L
,L M
nullableN V
:V W
falseX ]
)] ^
,^ _
PreHeaderText !
=" #
table$ )
.) *
Column* 0
<0 1
string1 7
>7 8
(8 9
type9 =
:= >
$str? N
,N O
nullableP X
:X Y
trueZ ^
)^ _
,_ `
PersonalizationTags '
=( )
table* /
./ 0
Column0 6
<6 7
string7 =
>= >
(> ?
type? C
:C D
$strE T
,T U
nullableV ^
:^ _
true` d
)d e
,e f
BodyContent 
=  !
table" '
.' (
Column( .
<. /
string/ 5
>5 6
(6 7
type7 ;
:; <
$str= L
,L M
nullableN V
:V W
falseX ]
)] ^
,^ _
FooterContent !
=" #
table$ )
.) *
Column* 0
<0 1
string1 7
>7 8
(8 9
type9 =
:= >
$str? N
,N O
nullableP X
:X Y
trueZ ^
)^ _
,_ `
CallToAction  
=! "
table# (
.( )
Column) /
</ 0
string0 6
>6 7
(7 8
type8 <
:< =
$str> M
,M N
nullableO W
:W X
trueY ]
)] ^
,^ _
Language 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: I
,I J
nullableK S
:S T
trueU Y
)Y Z
,Z [
RecipientType !
=" #
table$ )
.) *
Column* 0
<0 1
string1 7
>7 8
(8 9
type9 =
:= >
$str? N
,N O
nullableP X
:X Y
falseZ _
)_ `
,` a
CreateBy 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: I
,I J
nullableK S
:S T
falseU Z
)Z [
,[ \

CreateTime   
=    
table  ! &
.  & '
Column  ' -
<  - .
DateTime  . 6
>  6 7
(  7 8
type  8 <
:  < =
$str  > I
,  I J
nullable  K S
:  S T
false  U Z
)  Z [
,  [ \
UpdateBy!! 
=!! 
table!! $
.!!$ %
Column!!% +
<!!+ ,
string!!, 2
>!!2 3
(!!3 4
type!!4 8
:!!8 9
$str!!: I
,!!I J
nullable!!K S
:!!S T
false!!U Z
)!!Z [
,!![ \

UpdateTime"" 
=""  
table""! &
.""& '
Column""' -
<""- .
DateTime"". 6
>""6 7
(""7 8
type""8 <
:""< =
$str""> I
,""I J
nullable""K S
:""S T
false""U Z
)""Z [
,""[ \
Status## 
=## 
table## "
.##" #
Column### )
<##) *
int##* -
>##- .
(##. /
type##/ 3
:##3 4
$str##5 :
,##: ;
nullable##< D
:##D E
false##F K
)##K L
}$$ 
,$$ 
constraints%% 
:%% 
table%% "
=>%%# %
{&& 
table'' 
.'' 

PrimaryKey'' $
(''$ %
$str''% 8
,''8 9
x'': ;
=>''< >
x''? @
.''@ A
Id''A C
)''C D
;''D E
}(( 
)(( 
;(( 
})) 	
	protected,, 
override,, 
void,, 
Down,,  $
(,,$ %
MigrationBuilder,,% 5
migrationBuilder,,6 F
),,F G
{-- 	
migrationBuilder.. 
... 
	DropTable.. &
(..& '
name// 
:// 
$str// &
)//& '
;//' (
}00 	
}11 
}22 å
ÉD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240614063134_AddStatusToBaseEntity.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public 

partial 
class !
AddStatusToBaseEntity .
:/ 0
	Migration1 :
{		 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
	AddColumn &
<& '
int' *
>* +
(+ ,
name 
: 
$str 
, 
table 
: 
$str *
,* +
type 
: 
$str 
, 
nullable 
: 
false 
,  
defaultValue 
: 
$num 
)  
;  !
migrationBuilder 
. 
	AddColumn &
<& '
int' *
>* +
(+ ,
name 
: 
$str 
, 
table 
: 
$str +
,+ ,
type 
: 
$str 
, 
nullable 
: 
false 
,  
defaultValue 
: 
$num 
)  
;  !
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name   
:   
$str   
,   
table!! 
:!! 
$str!! *
)!!* +
;!!+ ,
migrationBuilder## 
.## 

DropColumn## '
(##' (
name$$ 
:$$ 
$str$$ 
,$$ 
table%% 
:%% 
$str%% +
)%%+ ,
;%%, -
}&& 	
}'' 
}(( Û
ôD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240614022706_AddRejectedByAndAcceptedByInTableInstructor.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public 

partial 
class 7
+AddRejectedByAndAcceptedByInTableInstructor D
:E F
	MigrationG P
{		 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str "
," #
table 
: 
$str $
,$ %
type 
: 
$str %
,% &
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str "
," #
table 
: 
$str $
,$ %
type 
: 
$str %
,% &
nullable 
: 
false 
,  
defaultValue 
: 
$str  
)  !
;! "
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str "
," #
table   
:   
$str   $
)  $ %
;  % &
migrationBuilder"" 
."" 

DropColumn"" '
(""' (
name## 
:## 
$str## "
,##" #
table$$ 
:$$ 
$str$$ $
)$$$ %
;$$% &
}%% 	
}&& 
}'' À
êD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240614022444_AddMorePropertiesInTableInstructor.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public		 

partial		 
class		 .
"AddMorePropertiesInTableInstructor		 ;
:		< =
	Migration		> G
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
RenameColumn )
() *
name 
: 
$str "
," #
table 
: 
$str $
,$ %
newName 
: 
$str %
)% &
;& '
migrationBuilder 
. 
	AddColumn &
<& '
DateTime' /
>/ 0
(0 1
name 
: 
$str $
,$ %
table 
: 
$str $
,$ %
type 
: 
$str !
,! "
nullable 
: 
true 
) 
;  
migrationBuilder 
. 
	AddColumn &
<& '
bool' +
>+ ,
(, -
name 
: 
$str "
," #
table 
: 
$str $
,$ %
type 
: 
$str 
, 
nullable 
: 
false 
,  
defaultValue 
: 
false #
)# $
;$ %
migrationBuilder   
.   
	AddColumn   &
<  & '
DateTime  ' /
>  / 0
(  0 1
name!! 
:!! 
$str!! $
,!!$ %
table"" 
:"" 
$str"" $
,""$ %
type## 
:## 
$str## !
,##! "
nullable$$ 
:$$ 
true$$ 
)$$ 
;$$  
}%% 	
	protected(( 
override(( 
void(( 
Down((  $
((($ %
MigrationBuilder((% 5
migrationBuilder((6 F
)((F G
{)) 	
migrationBuilder** 
.** 

DropColumn** '
(**' (
name++ 
:++ 
$str++ $
,++$ %
table,, 
:,, 
$str,, $
),,$ %
;,,% &
migrationBuilder.. 
... 

DropColumn.. '
(..' (
name// 
:// 
$str// "
,//" #
table00 
:00 
$str00 $
)00$ %
;00% &
migrationBuilder22 
.22 

DropColumn22 '
(22' (
name33 
:33 
$str33 $
,33$ %
table44 
:44 
$str44 $
)44$ %
;44% &
migrationBuilder66 
.66 
RenameColumn66 )
(66) *
name77 
:77 
$str77 "
,77" #
table88 
:88 
$str88 $
,88$ %
newName99 
:99 
$str99 %
)99% &
;99& '
}:: 	
};; 
}<< ƒ$
ÜD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240614021640_AddTableInstructorRating.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public		 

partial		 
class		 $
AddTableInstructorRating		 1
:		2 3
	Migration		4 =
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str )
,) *
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
Guid& *
>* +
(+ ,
type, 0
:0 1
$str2 D
,D E
nullableF N
:N O
falseP U
)U V
,V W
InstructorId  
=! "
table# (
.( )
Column) /
</ 0
Guid0 4
>4 5
(5 6
type6 :
:: ;
$str< N
,N O
nullableP X
:X Y
falseZ _
)_ `
,` a
Rate 
= 
table  
.  !
Column! '
<' (
int( +
>+ ,
(, -
type- 1
:1 2
$str3 8
,8 9
nullable: B
:B C
falseD I
)I J
,J K
CreateBy 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: I
,I J
nullableK S
:S T
falseU Z
)Z [
,[ \

CreateTime 
=  
table! &
.& '
Column' -
<- .
DateTime. 6
>6 7
(7 8
type8 <
:< =
$str> I
,I J
nullableK S
:S T
falseU Z
)Z [
,[ \
UpdateBy 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: I
,I J
nullableK S
:S T
falseU Z
)Z [
,[ \

UpdateTime 
=  
table! &
.& '
Column' -
<- .
DateTime. 6
>6 7
(7 8
type8 <
:< =
$str> I
,I J
nullableK S
:S T
falseU Z
)Z [
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% ;
,; <
x= >
=>? A
xB C
.C D
IdD F
)F G
;G H
table 
. 

ForeignKey $
($ %
name 
: 
$str M
,M N
column 
: 
x  !
=>" $
x% &
.& '
InstructorId' 3
,3 4
principalTable   &
:  & '
$str  ( 5
,  5 6
principalColumn!! '
:!!' (
$str!!) 7
,!!7 8
onDelete""  
:""  !
ReferentialAction""" 3
.""3 4
Cascade""4 ;
)""; <
;""< =
}## 
)## 
;## 
migrationBuilder%% 
.%% 
CreateIndex%% (
(%%( )
name&& 
:&& 
$str&& 9
,&&9 :
table'' 
:'' 
$str'' *
,''* +
column(( 
:(( 
$str(( &
)((& '
;((' (
})) 	
	protected,, 
override,, 
void,, 
Down,,  $
(,,$ %
MigrationBuilder,,% 5
migrationBuilder,,6 F
),,F G
{-- 	
migrationBuilder.. 
... 
	DropTable.. &
(..& '
name// 
:// 
$str// )
)//) *
;//* +
}00 	
}11 
}22 Ã$
áD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240614020848_AddTableInstructorComment.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public		 

partial		 
class		 %
AddTableInstructorComment		 2
:		3 4
	Migration		5 >
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str *
,* +
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
Guid& *
>* +
(+ ,
type, 0
:0 1
$str2 D
,D E
nullableF N
:N O
falseP U
)U V
,V W
InstructorId  
=! "
table# (
.( )
Column) /
</ 0
Guid0 4
>4 5
(5 6
type6 :
:: ;
$str< N
,N O
nullableP X
:X Y
falseZ _
)_ `
,` a
Comment 
= 
table #
.# $
Column$ *
<* +
string+ 1
>1 2
(2 3
type3 7
:7 8
$str9 H
,H I
nullableJ R
:R S
falseT Y
)Y Z
,Z [
CreateBy 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: I
,I J
nullableK S
:S T
falseU Z
)Z [
,[ \

CreateTime 
=  
table! &
.& '
Column' -
<- .
DateTime. 6
>6 7
(7 8
type8 <
:< =
$str> I
,I J
nullableK S
:S T
falseU Z
)Z [
,[ \
UpdateBy 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: I
,I J
nullableK S
:S T
falseU Z
)Z [
,[ \

UpdateTime 
=  
table! &
.& '
Column' -
<- .
DateTime. 6
>6 7
(7 8
type8 <
:< =
$str> I
,I J
nullableK S
:S T
falseU Z
)Z [
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% <
,< =
x> ?
=>@ B
xC D
.D E
IdE G
)G H
;H I
table 
. 

ForeignKey $
($ %
name 
: 
$str N
,N O
column 
: 
x  !
=>" $
x% &
.& '
InstructorId' 3
,3 4
principalTable   &
:  & '
$str  ( 5
,  5 6
principalColumn!! '
:!!' (
$str!!) 7
,!!7 8
onDelete""  
:""  !
ReferentialAction""" 3
.""3 4
Cascade""4 ;
)""; <
;""< =
}## 
)## 
;## 
migrationBuilder%% 
.%% 
CreateIndex%% (
(%%( )
name&& 
:&& 
$str&& :
,&&: ;
table'' 
:'' 
$str'' +
,''+ ,
column(( 
:(( 
$str(( &
)((& '
;((' (
})) 	
	protected,, 
override,, 
void,, 
Down,,  $
(,,$ %
MigrationBuilder,,% 5
migrationBuilder,,6 F
),,F G
{-- 	
migrationBuilder.. 
... 
	DropTable.. &
(..& '
name// 
:// 
$str// *
)//* +
;//+ ,
}00 	
}11 
}22 õ<
ÅD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240614013800_ModifyCategoryTable.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public		 

partial		 
class		 
ModifyCategoryTable		 ,
:		- .
	Migration		/ 8
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str  
,  !
table 
: 
$str #
,# $
type 
: 
$str %
,% &
nullable 
: 
false 
,  
defaultValue 
: 
$str  
)  !
;! "
migrationBuilder 
. 
	AddColumn &
<& '
DateTime' /
>/ 0
(0 1
name 
: 
$str "
," #
table 
: 
$str #
,# $
type 
: 
$str !
,! "
nullable 
: 
false 
,  
defaultValue 
: 
new !
DateTime" *
(* +
$num+ ,
,, -
$num. /
,/ 0
$num1 2
,2 3
$num4 5
,5 6
$num7 8
,8 9
$num: ;
,; <
$num= >
,> ?
DateTimeKind@ L
.L M
UnspecifiedM X
)X Y
)Y Z
;Z [
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str #
,# $
table 
: 
$str #
,# $
type 
: 
$str %
,% &
nullable   
:   
true   
)   
;    
migrationBuilder"" 
."" 
	AddColumn"" &
<""& '
Guid""' +
>""+ ,
("", -
name## 
:## 
$str##  
,##  !
table$$ 
:$$ 
$str$$ #
,$$# $
type%% 
:%% 
$str%% (
,%%( )
nullable&& 
:&& 
true&& 
)&& 
;&&  
migrationBuilder(( 
.(( 
	AddColumn(( &
<((& '
int((' *
>((* +
(((+ ,
name)) 
:)) 
$str)) 
,)) 
table** 
:** 
$str** #
,**# $
type++ 
:++ 
$str++ 
,++ 
nullable,, 
:,, 
false,, 
,,,  
defaultValue-- 
:-- 
$num-- 
)--  
;--  !
migrationBuilder// 
.// 
	AddColumn// &
<//& '
string//' -
>//- .
(//. /
name00 
:00 
$str00  
,00  !
table11 
:11 
$str11 #
,11# $
type22 
:22 
$str22 %
,22% &
nullable33 
:33 
false33 
,33  
defaultValue44 
:44 
$str44  
)44  !
;44! "
migrationBuilder66 
.66 
	AddColumn66 &
<66& '
DateTime66' /
>66/ 0
(660 1
name77 
:77 
$str77 "
,77" #
table88 
:88 
$str88 #
,88# $
type99 
:99 
$str99 !
,99! "
nullable:: 
::: 
false:: 
,::  
defaultValue;; 
:;; 
new;; !
DateTime;;" *
(;;* +
$num;;+ ,
,;;, -
$num;;. /
,;;/ 0
$num;;1 2
,;;2 3
$num;;4 5
,;;5 6
$num;;7 8
,;;8 9
$num;;: ;
,;;; <
$num;;= >
,;;> ?
DateTimeKind;;@ L
.;;L M
Unspecified;;M X
);;X Y
);;Y Z
;;;Z [
migrationBuilder== 
.== 
CreateIndex== (
(==( )
name>> 
:>> 
$str>> .
,>>. /
table?? 
:?? 
$str?? #
,??# $
column@@ 
:@@ 
$str@@ "
)@@" #
;@@# $
migrationBuilderBB 
.BB 
AddForeignKeyBB *
(BB* +
nameCC 
:CC 
$strCC 9
,CC9 :
tableDD 
:DD 
$strDD #
,DD# $
columnEE 
:EE 
$strEE "
,EE" #
principalTableFF 
:FF 
$strFF  ,
,FF, -
principalColumnGG 
:GG  
$strGG! %
)GG% &
;GG& '
}HH 	
	protectedKK 
overrideKK 
voidKK 
DownKK  $
(KK$ %
MigrationBuilderKK% 5
migrationBuilderKK6 F
)KKF G
{LL 	
migrationBuilderMM 
.MM 
DropForeignKeyMM +
(MM+ ,
nameNN 
:NN 
$strNN 9
,NN9 :
tableOO 
:OO 
$strOO #
)OO# $
;OO$ %
migrationBuilderQQ 
.QQ 
	DropIndexQQ &
(QQ& '
nameRR 
:RR 
$strRR .
,RR. /
tableSS 
:SS 
$strSS #
)SS# $
;SS$ %
migrationBuilderUU 
.UU 

DropColumnUU '
(UU' (
nameVV 
:VV 
$strVV  
,VV  !
tableWW 
:WW 
$strWW #
)WW# $
;WW$ %
migrationBuilderYY 
.YY 

DropColumnYY '
(YY' (
nameZZ 
:ZZ 
$strZZ "
,ZZ" #
table[[ 
:[[ 
$str[[ #
)[[# $
;[[$ %
migrationBuilder]] 
.]] 

DropColumn]] '
(]]' (
name^^ 
:^^ 
$str^^ #
,^^# $
table__ 
:__ 
$str__ #
)__# $
;__$ %
migrationBuilderaa 
.aa 

DropColumnaa '
(aa' (
namebb 
:bb 
$strbb  
,bb  !
tablecc 
:cc 
$strcc #
)cc# $
;cc$ %
migrationBuilderee 
.ee 

DropColumnee '
(ee' (
nameff 
:ff 
$strff 
,ff 
tablegg 
:gg 
$strgg #
)gg# $
;gg$ %
migrationBuilderii 
.ii 

DropColumnii '
(ii' (
namejj 
:jj 
$strjj  
,jj  !
tablekk 
:kk 
$strkk #
)kk# $
;kk$ %
migrationBuildermm 
.mm 

DropColumnmm '
(mm' (
namenn 
:nn 
$strnn "
,nn" #
tableoo 
:oo 
$stroo #
)oo# $
;oo$ %
}pp 	
}qq 
}rr â
çD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240608075025_AddUpdateTimeForApplicationUser.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public		 

partial		 
class		 +
AddUpdateTimeForApplicationUser		 8
:		9 :
	Migration		; D
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
	AddColumn &
<& '
DateTime' /
>/ 0
(0 1
name 
: 
$str "
," #
table 
: 
$str $
,$ %
type 
: 
$str !
,! "
nullable 
: 
true 
) 
;  
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str "
," #
table 
: 
$str $
)$ %
;% &
} 	
} 
} ÿä
uD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240608073151_Initial.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{ 
public		 

partial		 
class		 
Initial		  
:		! "
	Migration		# ,
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str #
,# $
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
string& ,
>, -
(- .
type. 2
:2 3
$str4 C
,C D
nullableE M
:M N
falseO T
)T U
,U V
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 E
,E F
	maxLengthG P
:P Q
$numR U
,U V
nullableW _
:_ `
truea e
)e f
,f g
NormalizedName "
=# $
table% *
.* +
Column+ 1
<1 2
string2 8
>8 9
(9 :
type: >
:> ?
$str@ O
,O P
	maxLengthQ Z
:Z [
$num\ _
,_ `
nullablea i
:i j
truek o
)o p
,p q
ConcurrencyStamp $
=% &
table' ,
., -
Column- 3
<3 4
string4 :
>: ;
(; <
type< @
:@ A
$strB Q
,Q R
nullableS [
:[ \
true] a
)a b
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 5
,5 6
x7 8
=>9 ;
x< =
.= >
Id> @
)@ A
;A B
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str #
,# $
columns 
: 
table 
=> !
new" %
{ 
Id   
=   
table   
.   
Column   %
<  % &
string  & ,
>  , -
(  - .
type  . 2
:  2 3
$str  4 C
,  C D
nullable  E M
:  M N
false  O T
)  T U
,  U V
Gender!! 
=!! 
table!! "
.!!" #
Column!!# )
<!!) *
string!!* 0
>!!0 1
(!!1 2
type!!2 6
:!!6 7
$str!!8 G
,!!G H
nullable!!I Q
:!!Q R
true!!S W
)!!W X
,!!X Y
FullName"" 
="" 
table"" $
.""$ %
Column""% +
<""+ ,
string"", 2
>""2 3
(""3 4
type""4 8
:""8 9
$str"": I
,""I J
nullable""K S
:""S T
true""U Y
)""Y Z
,""Z [
	BirthDate## 
=## 
table##  %
.##% &
Column##& ,
<##, -
DateTime##- 5
>##5 6
(##6 7
type##7 ;
:##; <
$str##= H
,##H I
nullable##J R
:##R S
true##T X
)##X Y
,##Y Z
	AvatarUrl$$ 
=$$ 
table$$  %
.$$% &
Column$$& ,
<$$, -
string$$- 3
>$$3 4
($$4 5
type$$5 9
:$$9 :
$str$$; J
,$$J K
nullable$$L T
:$$T U
true$$V Z
)$$Z [
,$$[ \
Country%% 
=%% 
table%% #
.%%# $
Column%%$ *
<%%* +
string%%+ 1
>%%1 2
(%%2 3
type%%3 7
:%%7 8
$str%%9 H
,%%H I
nullable%%J R
:%%R S
true%%T X
)%%X Y
,%%Y Z
Address&& 
=&& 
table&& #
.&&# $
Column&&$ *
<&&* +
string&&+ 1
>&&1 2
(&&2 3
type&&3 7
:&&7 8
$str&&9 H
,&&H I
nullable&&J R
:&&R S
true&&T X
)&&X Y
,&&Y Z
	TaxNumber'' 
='' 
table''  %
.''% &
Column''& ,
<'', -
string''- 3
>''3 4
(''4 5
type''5 9
:''9 :
$str''; J
,''J K
nullable''L T
:''T U
true''V Z
)''Z [
,''[ \
UserName(( 
=(( 
table(( $
.(($ %
Column((% +
<((+ ,
string((, 2
>((2 3
(((3 4
type((4 8
:((8 9
$str((: I
,((I J
	maxLength((K T
:((T U
$num((V Y
,((Y Z
nullable(([ c
:((c d
true((e i
)((i j
,((j k
NormalizedUserName)) &
=))' (
table))) .
.)). /
Column))/ 5
<))5 6
string))6 <
>))< =
())= >
type))> B
:))B C
$str))D S
,))S T
	maxLength))U ^
:))^ _
$num))` c
,))c d
nullable))e m
:))m n
true))o s
)))s t
,))t u
Email** 
=** 
table** !
.**! "
Column**" (
<**( )
string**) /
>**/ 0
(**0 1
type**1 5
:**5 6
$str**7 F
,**F G
	maxLength**H Q
:**Q R
$num**S V
,**V W
nullable**X `
:**` a
true**b f
)**f g
,**g h
NormalizedEmail++ #
=++$ %
table++& +
.+++ ,
Column++, 2
<++2 3
string++3 9
>++9 :
(++: ;
type++; ?
:++? @
$str++A P
,++P Q
	maxLength++R [
:++[ \
$num++] `
,++` a
nullable++b j
:++j k
true++l p
)++p q
,++q r
EmailConfirmed,, "
=,,# $
table,,% *
.,,* +
Column,,+ 1
<,,1 2
bool,,2 6
>,,6 7
(,,7 8
type,,8 <
:,,< =
$str,,> C
,,,C D
nullable,,E M
:,,M N
false,,O T
),,T U
,,,U V
PasswordHash--  
=--! "
table--# (
.--( )
Column--) /
<--/ 0
string--0 6
>--6 7
(--7 8
type--8 <
:--< =
$str--> M
,--M N
nullable--O W
:--W X
true--Y ]
)--] ^
,--^ _
SecurityStamp.. !
=.." #
table..$ )
...) *
Column..* 0
<..0 1
string..1 7
>..7 8
(..8 9
type..9 =
:..= >
$str..? N
,..N O
nullable..P X
:..X Y
true..Z ^
)..^ _
,.._ `
ConcurrencyStamp// $
=//% &
table//' ,
.//, -
Column//- 3
<//3 4
string//4 :
>//: ;
(//; <
type//< @
://@ A
$str//B Q
,//Q R
nullable//S [
://[ \
true//] a
)//a b
,//b c
PhoneNumber00 
=00  !
table00" '
.00' (
Column00( .
<00. /
string00/ 5
>005 6
(006 7
type007 ;
:00; <
$str00= L
,00L M
nullable00N V
:00V W
true00X \
)00\ ]
,00] ^ 
PhoneNumberConfirmed11 (
=11) *
table11+ 0
.110 1
Column111 7
<117 8
bool118 <
>11< =
(11= >
type11> B
:11B C
$str11D I
,11I J
nullable11K S
:11S T
false11U Z
)11Z [
,11[ \
TwoFactorEnabled22 $
=22% &
table22' ,
.22, -
Column22- 3
<223 4
bool224 8
>228 9
(229 :
type22: >
:22> ?
$str22@ E
,22E F
nullable22G O
:22O P
false22Q V
)22V W
,22W X

LockoutEnd33 
=33  
table33! &
.33& '
Column33' -
<33- .
DateTimeOffset33. <
>33< =
(33= >
type33> B
:33B C
$str33D T
,33T U
nullable33V ^
:33^ _
true33` d
)33d e
,33e f
LockoutEnabled44 "
=44# $
table44% *
.44* +
Column44+ 1
<441 2
bool442 6
>446 7
(447 8
type448 <
:44< =
$str44> C
,44C D
nullable44E M
:44M N
false44O T
)44T U
,44U V
AccessFailedCount55 %
=55& '
table55( -
.55- .
Column55. 4
<554 5
int555 8
>558 9
(559 :
type55: >
:55> ?
$str55@ E
,55E F
nullable55G O
:55O P
false55Q V
)55V W
}66 
,66 
constraints77 
:77 
table77 "
=>77# %
{88 
table99 
.99 

PrimaryKey99 $
(99$ %
$str99% 5
,995 6
x997 8
=>999 ;
x99< =
.99= >
Id99> @
)99@ A
;99A B
}:: 
):: 
;:: 
migrationBuilder<< 
.<< 
CreateTable<< (
(<<( )
name== 
:== 
$str== "
,==" #
columns>> 
:>> 
table>> 
=>>> !
new>>" %
{?? 
Id@@ 
=@@ 
table@@ 
.@@ 
Column@@ %
<@@% &
Guid@@& *
>@@* +
(@@+ ,
type@@, 0
:@@0 1
$str@@2 D
,@@D E
nullable@@F N
:@@N O
false@@P U
)@@U V
,@@V W
NameAA 
=AA 
tableAA  
.AA  !
ColumnAA! '
<AA' (
stringAA( .
>AA. /
(AA/ 0
typeAA0 4
:AA4 5
$strAA6 E
,AAE F
nullableAAG O
:AAO P
falseAAQ V
)AAV W
}BB 
,BB 
constraintsCC 
:CC 
tableCC "
=>CC# %
{DD 
tableEE 
.EE 

PrimaryKeyEE $
(EE$ %
$strEE% 4
,EE4 5
xEE6 7
=>EE8 :
xEE; <
.EE< =
IdEE= ?
)EE? @
;EE@ A
}FF 
)FF 
;FF 
migrationBuilderHH 
.HH 
CreateTableHH (
(HH( )
nameII 
:II 
$strII 
,II 
columnsJJ 
:JJ 
tableJJ 
=>JJ !
newJJ" %
{KK 
IdLL 
=LL 
tableLL 
.LL 
ColumnLL %
<LL% &
GuidLL& *
>LL* +
(LL+ ,
typeLL, 0
:LL0 1
$strLL2 D
,LLD E
nullableLLF N
:LLN O
falseLLP U
)LLU V
,LLV W
NameMM 
=MM 
tableMM  
.MM  !
ColumnMM! '
<MM' (
stringMM( .
>MM. /
(MM/ 0
typeMM0 4
:MM4 5
$strMM6 E
,MME F
nullableMMG O
:MMO P
falseMMQ V
)MMV W
}NN 
,NN 
constraintsOO 
:OO 
tableOO "
=>OO# %
{PP 
tableQQ 
.QQ 

PrimaryKeyQQ $
(QQ$ %
$strQQ% 0
,QQ0 1
xQQ2 3
=>QQ4 6
xQQ7 8
.QQ8 9
IdQQ9 ;
)QQ; <
;QQ< =
}RR 
)RR 
;RR 
migrationBuilderTT 
.TT 
CreateTableTT (
(TT( )
nameUU 
:UU 
$strUU (
,UU( )
columnsVV 
:VV 
tableVV 
=>VV !
newVV" %
{WW 
IdXX 
=XX 
tableXX 
.XX 
ColumnXX %
<XX% &
intXX& )
>XX) *
(XX* +
typeXX+ /
:XX/ 0
$strXX1 6
,XX6 7
nullableXX8 @
:XX@ A
falseXXB G
)XXG H
.YY 

AnnotationYY #
(YY# $
$strYY$ 8
,YY8 9
$strYY: @
)YY@ A
,YYA B
RoleIdZZ 
=ZZ 
tableZZ "
.ZZ" #
ColumnZZ# )
<ZZ) *
stringZZ* 0
>ZZ0 1
(ZZ1 2
typeZZ2 6
:ZZ6 7
$strZZ8 G
,ZZG H
nullableZZI Q
:ZZQ R
falseZZS X
)ZZX Y
,ZZY Z
	ClaimType[[ 
=[[ 
table[[  %
.[[% &
Column[[& ,
<[[, -
string[[- 3
>[[3 4
([[4 5
type[[5 9
:[[9 :
$str[[; J
,[[J K
nullable[[L T
:[[T U
true[[V Z
)[[Z [
,[[[ \

ClaimValue\\ 
=\\  
table\\! &
.\\& '
Column\\' -
<\\- .
string\\. 4
>\\4 5
(\\5 6
type\\6 :
:\\: ;
$str\\< K
,\\K L
nullable\\M U
:\\U V
true\\W [
)\\[ \
}]] 
,]] 
constraints^^ 
:^^ 
table^^ "
=>^^# %
{__ 
table`` 
.`` 

PrimaryKey`` $
(``$ %
$str``% :
,``: ;
x``< =
=>``> @
x``A B
.``B C
Id``C E
)``E F
;``F G
tableaa 
.aa 

ForeignKeyaa $
(aa$ %
namebb 
:bb 
$strbb F
,bbF G
columncc 
:cc 
xcc  !
=>cc" $
xcc% &
.cc& '
RoleIdcc' -
,cc- .
principalTabledd &
:dd& '
$strdd( 5
,dd5 6
principalColumnee '
:ee' (
$stree) -
,ee- .
onDeleteff  
:ff  !
ReferentialActionff" 3
.ff3 4
Cascadeff4 ;
)ff; <
;ff< =
}gg 
)gg 
;gg 
migrationBuilderii 
.ii 
CreateTableii (
(ii( )
namejj 
:jj 
$strjj (
,jj( )
columnskk 
:kk 
tablekk 
=>kk !
newkk" %
{ll 
Idmm 
=mm 
tablemm 
.mm 
Columnmm %
<mm% &
intmm& )
>mm) *
(mm* +
typemm+ /
:mm/ 0
$strmm1 6
,mm6 7
nullablemm8 @
:mm@ A
falsemmB G
)mmG H
.nn 

Annotationnn #
(nn# $
$strnn$ 8
,nn8 9
$strnn: @
)nn@ A
,nnA B
UserIdoo 
=oo 
tableoo "
.oo" #
Columnoo# )
<oo) *
stringoo* 0
>oo0 1
(oo1 2
typeoo2 6
:oo6 7
$stroo8 G
,ooG H
nullableooI Q
:ooQ R
falseooS X
)ooX Y
,ooY Z
	ClaimTypepp 
=pp 
tablepp  %
.pp% &
Columnpp& ,
<pp, -
stringpp- 3
>pp3 4
(pp4 5
typepp5 9
:pp9 :
$strpp; J
,ppJ K
nullableppL T
:ppT U
trueppV Z
)ppZ [
,pp[ \

ClaimValueqq 
=qq  
tableqq! &
.qq& '
Columnqq' -
<qq- .
stringqq. 4
>qq4 5
(qq5 6
typeqq6 :
:qq: ;
$strqq< K
,qqK L
nullableqqM U
:qqU V
trueqqW [
)qq[ \
}rr 
,rr 
constraintsss 
:ss 
tabless "
=>ss# %
{tt 
tableuu 
.uu 

PrimaryKeyuu $
(uu$ %
$struu% :
,uu: ;
xuu< =
=>uu> @
xuuA B
.uuB C
IduuC E
)uuE F
;uuF G
tablevv 
.vv 

ForeignKeyvv $
(vv$ %
nameww 
:ww 
$strww F
,wwF G
columnxx 
:xx 
xxx  !
=>xx" $
xxx% &
.xx& '
UserIdxx' -
,xx- .
principalTableyy &
:yy& '
$stryy( 5
,yy5 6
principalColumnzz '
:zz' (
$strzz) -
,zz- .
onDelete{{  
:{{  !
ReferentialAction{{" 3
.{{3 4
Cascade{{4 ;
){{; <
;{{< =
}|| 
)|| 
;|| 
migrationBuilder~~ 
.~~ 
CreateTable~~ (
(~~( )
name 
: 
$str (
,( )
columns
ÄÄ 
:
ÄÄ 
table
ÄÄ 
=>
ÄÄ !
new
ÄÄ" %
{
ÅÅ 
LoginProvider
ÇÇ !
=
ÇÇ" #
table
ÇÇ$ )
.
ÇÇ) *
Column
ÇÇ* 0
<
ÇÇ0 1
string
ÇÇ1 7
>
ÇÇ7 8
(
ÇÇ8 9
type
ÇÇ9 =
:
ÇÇ= >
$str
ÇÇ? N
,
ÇÇN O
nullable
ÇÇP X
:
ÇÇX Y
false
ÇÇZ _
)
ÇÇ_ `
,
ÇÇ` a
ProviderKey
ÉÉ 
=
ÉÉ  !
table
ÉÉ" '
.
ÉÉ' (
Column
ÉÉ( .
<
ÉÉ. /
string
ÉÉ/ 5
>
ÉÉ5 6
(
ÉÉ6 7
type
ÉÉ7 ;
:
ÉÉ; <
$str
ÉÉ= L
,
ÉÉL M
nullable
ÉÉN V
:
ÉÉV W
false
ÉÉX ]
)
ÉÉ] ^
,
ÉÉ^ _!
ProviderDisplayName
ÑÑ '
=
ÑÑ( )
table
ÑÑ* /
.
ÑÑ/ 0
Column
ÑÑ0 6
<
ÑÑ6 7
string
ÑÑ7 =
>
ÑÑ= >
(
ÑÑ> ?
type
ÑÑ? C
:
ÑÑC D
$str
ÑÑE T
,
ÑÑT U
nullable
ÑÑV ^
:
ÑÑ^ _
true
ÑÑ` d
)
ÑÑd e
,
ÑÑe f
UserId
ÖÖ 
=
ÖÖ 
table
ÖÖ "
.
ÖÖ" #
Column
ÖÖ# )
<
ÖÖ) *
string
ÖÖ* 0
>
ÖÖ0 1
(
ÖÖ1 2
type
ÖÖ2 6
:
ÖÖ6 7
$str
ÖÖ8 G
,
ÖÖG H
nullable
ÖÖI Q
:
ÖÖQ R
false
ÖÖS X
)
ÖÖX Y
}
ÜÜ 
,
ÜÜ 
constraints
áá 
:
áá 
table
áá "
=>
áá# %
{
àà 
table
ââ 
.
ââ 

PrimaryKey
ââ $
(
ââ$ %
$str
ââ% :
,
ââ: ;
x
ââ< =
=>
ââ> @
new
ââA D
{
ââE F
x
ââG H
.
ââH I
LoginProvider
ââI V
,
ââV W
x
ââX Y
.
ââY Z
ProviderKey
ââZ e
}
ââf g
)
ââg h
;
ââh i
table
ää 
.
ää 

ForeignKey
ää $
(
ää$ %
name
ãã 
:
ãã 
$str
ãã F
,
ããF G
column
åå 
:
åå 
x
åå  !
=>
åå" $
x
åå% &
.
åå& '
UserId
åå' -
,
åå- .
principalTable
çç &
:
çç& '
$str
çç( 5
,
çç5 6
principalColumn
éé '
:
éé' (
$str
éé) -
,
éé- .
onDelete
èè  
:
èè  !
ReferentialAction
èè" 3
.
èè3 4
Cascade
èè4 ;
)
èè; <
;
èè< =
}
êê 
)
êê 
;
êê 
migrationBuilder
íí 
.
íí 
CreateTable
íí (
(
íí( )
name
ìì 
:
ìì 
$str
ìì '
,
ìì' (
columns
îî 
:
îî 
table
îî 
=>
îî !
new
îî" %
{
ïï 
UserId
ññ 
=
ññ 
table
ññ "
.
ññ" #
Column
ññ# )
<
ññ) *
string
ññ* 0
>
ññ0 1
(
ññ1 2
type
ññ2 6
:
ññ6 7
$str
ññ8 G
,
ññG H
nullable
ññI Q
:
ññQ R
false
ññS X
)
ññX Y
,
ññY Z
RoleId
óó 
=
óó 
table
óó "
.
óó" #
Column
óó# )
<
óó) *
string
óó* 0
>
óó0 1
(
óó1 2
type
óó2 6
:
óó6 7
$str
óó8 G
,
óóG H
nullable
óóI Q
:
óóQ R
false
óóS X
)
óóX Y
}
òò 
,
òò 
constraints
ôô 
:
ôô 
table
ôô "
=>
ôô# %
{
öö 
table
õõ 
.
õõ 

PrimaryKey
õõ $
(
õõ$ %
$str
õõ% 9
,
õõ9 :
x
õõ; <
=>
õõ= ?
new
õõ@ C
{
õõD E
x
õõF G
.
õõG H
UserId
õõH N
,
õõN O
x
õõP Q
.
õõQ R
RoleId
õõR X
}
õõY Z
)
õõZ [
;
õõ[ \
table
úú 
.
úú 

ForeignKey
úú $
(
úú$ %
name
ùù 
:
ùù 
$str
ùù E
,
ùùE F
column
ûû 
:
ûû 
x
ûû  !
=>
ûû" $
x
ûû% &
.
ûû& '
RoleId
ûû' -
,
ûû- .
principalTable
üü &
:
üü& '
$str
üü( 5
,
üü5 6
principalColumn
†† '
:
††' (
$str
††) -
,
††- .
onDelete
°°  
:
°°  !
ReferentialAction
°°" 3
.
°°3 4
Cascade
°°4 ;
)
°°; <
;
°°< =
table
¢¢ 
.
¢¢ 

ForeignKey
¢¢ $
(
¢¢$ %
name
££ 
:
££ 
$str
££ E
,
££E F
column
§§ 
:
§§ 
x
§§  !
=>
§§" $
x
§§% &
.
§§& '
UserId
§§' -
,
§§- .
principalTable
•• &
:
••& '
$str
••( 5
,
••5 6
principalColumn
¶¶ '
:
¶¶' (
$str
¶¶) -
,
¶¶- .
onDelete
ßß  
:
ßß  !
ReferentialAction
ßß" 3
.
ßß3 4
Cascade
ßß4 ;
)
ßß; <
;
ßß< =
}
®® 
)
®® 
;
®® 
migrationBuilder
™™ 
.
™™ 
CreateTable
™™ (
(
™™( )
name
´´ 
:
´´ 
$str
´´ (
,
´´( )
columns
¨¨ 
:
¨¨ 
table
¨¨ 
=>
¨¨ !
new
¨¨" %
{
≠≠ 
UserId
ÆÆ 
=
ÆÆ 
table
ÆÆ "
.
ÆÆ" #
Column
ÆÆ# )
<
ÆÆ) *
string
ÆÆ* 0
>
ÆÆ0 1
(
ÆÆ1 2
type
ÆÆ2 6
:
ÆÆ6 7
$str
ÆÆ8 G
,
ÆÆG H
nullable
ÆÆI Q
:
ÆÆQ R
false
ÆÆS X
)
ÆÆX Y
,
ÆÆY Z
LoginProvider
ØØ !
=
ØØ" #
table
ØØ$ )
.
ØØ) *
Column
ØØ* 0
<
ØØ0 1
string
ØØ1 7
>
ØØ7 8
(
ØØ8 9
type
ØØ9 =
:
ØØ= >
$str
ØØ? N
,
ØØN O
nullable
ØØP X
:
ØØX Y
false
ØØZ _
)
ØØ_ `
,
ØØ` a
Name
∞∞ 
=
∞∞ 
table
∞∞  
.
∞∞  !
Column
∞∞! '
<
∞∞' (
string
∞∞( .
>
∞∞. /
(
∞∞/ 0
type
∞∞0 4
:
∞∞4 5
$str
∞∞6 E
,
∞∞E F
nullable
∞∞G O
:
∞∞O P
false
∞∞Q V
)
∞∞V W
,
∞∞W X
Value
±± 
=
±± 
table
±± !
.
±±! "
Column
±±" (
<
±±( )
string
±±) /
>
±±/ 0
(
±±0 1
type
±±1 5
:
±±5 6
$str
±±7 F
,
±±F G
nullable
±±H P
:
±±P Q
true
±±R V
)
±±V W
}
≤≤ 
,
≤≤ 
constraints
≥≥ 
:
≥≥ 
table
≥≥ "
=>
≥≥# %
{
¥¥ 
table
µµ 
.
µµ 

PrimaryKey
µµ $
(
µµ$ %
$str
µµ% :
,
µµ: ;
x
µµ< =
=>
µµ> @
new
µµA D
{
µµE F
x
µµG H
.
µµH I
UserId
µµI O
,
µµO P
x
µµQ R
.
µµR S
LoginProvider
µµS `
,
µµ` a
x
µµb c
.
µµc d
Name
µµd h
}
µµi j
)
µµj k
;
µµk l
table
∂∂ 
.
∂∂ 

ForeignKey
∂∂ $
(
∂∂$ %
name
∑∑ 
:
∑∑ 
$str
∑∑ F
,
∑∑F G
column
∏∏ 
:
∏∏ 
x
∏∏  !
=>
∏∏" $
x
∏∏% &
.
∏∏& '
UserId
∏∏' -
,
∏∏- .
principalTable
ππ &
:
ππ& '
$str
ππ( 5
,
ππ5 6
principalColumn
∫∫ '
:
∫∫' (
$str
∫∫) -
,
∫∫- .
onDelete
ªª  
:
ªª  !
ReferentialAction
ªª" 3
.
ªª3 4
Cascade
ªª4 ;
)
ªª; <
;
ªª< =
}
ºº 
)
ºº 
;
ºº 
migrationBuilder
ææ 
.
ææ 
CreateTable
ææ (
(
ææ( )
name
øø 
:
øø 
$str
øø #
,
øø# $
columns
¿¿ 
:
¿¿ 
table
¿¿ 
=>
¿¿ !
new
¿¿" %
{
¡¡ 
InstructorId
¬¬  
=
¬¬! "
table
¬¬# (
.
¬¬( )
Column
¬¬) /
<
¬¬/ 0
Guid
¬¬0 4
>
¬¬4 5
(
¬¬5 6
type
¬¬6 :
:
¬¬: ;
$str
¬¬< N
,
¬¬N O
nullable
¬¬P X
:
¬¬X Y
false
¬¬Z _
)
¬¬_ `
,
¬¬` a
UserId
√√ 
=
√√ 
table
√√ "
.
√√" #
Column
√√# )
<
√√) *
string
√√* 0
>
√√0 1
(
√√1 2
type
√√2 6
:
√√6 7
$str
√√8 G
,
√√G H
nullable
√√I Q
:
√√Q R
false
√√S X
)
√√X Y
,
√√Y Z
Degree
ƒƒ 
=
ƒƒ 
table
ƒƒ "
.
ƒƒ" #
Column
ƒƒ# )
<
ƒƒ) *
string
ƒƒ* 0
>
ƒƒ0 1
(
ƒƒ1 2
type
ƒƒ2 6
:
ƒƒ6 7
$str
ƒƒ8 G
,
ƒƒG H
nullable
ƒƒI Q
:
ƒƒQ R
false
ƒƒS X
)
ƒƒX Y
,
ƒƒY Z
DegreeImageUrl
≈≈ "
=
≈≈# $
table
≈≈% *
.
≈≈* +
Column
≈≈+ 1
<
≈≈1 2
string
≈≈2 8
>
≈≈8 9
(
≈≈9 :
type
≈≈: >
:
≈≈> ?
$str
≈≈@ O
,
≈≈O P
nullable
≈≈Q Y
:
≈≈Y Z
true
≈≈[ _
)
≈≈_ `
,
≈≈` a
Industry
∆∆ 
=
∆∆ 
table
∆∆ $
.
∆∆$ %
Column
∆∆% +
<
∆∆+ ,
string
∆∆, 2
>
∆∆2 3
(
∆∆3 4
type
∆∆4 8
:
∆∆8 9
$str
∆∆: I
,
∆∆I J
nullable
∆∆K S
:
∆∆S T
false
∆∆U Z
)
∆∆Z [
,
∆∆[ \
Introduction
««  
=
««! "
table
««# (
.
««( )
Column
««) /
<
««/ 0
string
««0 6
>
««6 7
(
««7 8
type
««8 <
:
««< =
$str
««> M
,
««M N
nullable
««O W
:
««W X
false
««Y ^
)
««^ _
,
««_ `

isAccepted
»» 
=
»»  
table
»»! &
.
»»& '
Column
»»' -
<
»»- .
bool
»». 2
>
»»2 3
(
»»3 4
type
»»4 8
:
»»8 9
$str
»»: ?
,
»»? @
nullable
»»A I
:
»»I J
false
»»K P
)
»»P Q
}
…… 
,
…… 
constraints
   
:
   
table
   "
=>
  # %
{
ÀÀ 
table
ÃÃ 
.
ÃÃ 

PrimaryKey
ÃÃ $
(
ÃÃ$ %
$str
ÃÃ% 5
,
ÃÃ5 6
x
ÃÃ7 8
=>
ÃÃ9 ;
x
ÃÃ< =
.
ÃÃ= >
InstructorId
ÃÃ> J
)
ÃÃJ K
;
ÃÃK L
table
ÕÕ 
.
ÕÕ 

ForeignKey
ÕÕ $
(
ÕÕ$ %
name
ŒŒ 
:
ŒŒ 
$str
ŒŒ A
,
ŒŒA B
column
œœ 
:
œœ 
x
œœ  !
=>
œœ" $
x
œœ% &
.
œœ& '
UserId
œœ' -
,
œœ- .
principalTable
–– &
:
––& '
$str
––( 5
,
––5 6
principalColumn
—— '
:
——' (
$str
——) -
,
——- .
onDelete
““  
:
““  !
ReferentialAction
““" 3
.
““3 4
Cascade
““4 ;
)
““; <
;
““< =
}
”” 
)
”” 
;
”” 
migrationBuilder
’’ 
.
’’ 
CreateTable
’’ (
(
’’( )
name
÷÷ 
:
÷÷ 
$str
÷÷ $
,
÷÷$ %
columns
◊◊ 
:
◊◊ 
table
◊◊ 
=>
◊◊ !
new
◊◊" %
{
ÿÿ 

CardNumber
ŸŸ 
=
ŸŸ  
table
ŸŸ! &
.
ŸŸ& '
Column
ŸŸ' -
<
ŸŸ- .
string
ŸŸ. 4
>
ŸŸ4 5
(
ŸŸ5 6
type
ŸŸ6 :
:
ŸŸ: ;
$str
ŸŸ< K
,
ŸŸK L
nullable
ŸŸM U
:
ŸŸU V
false
ŸŸW \
)
ŸŸ\ ]
,
ŸŸ] ^
CardName
⁄⁄ 
=
⁄⁄ 
table
⁄⁄ $
.
⁄⁄$ %
Column
⁄⁄% +
<
⁄⁄+ ,
string
⁄⁄, 2
>
⁄⁄2 3
(
⁄⁄3 4
type
⁄⁄4 8
:
⁄⁄8 9
$str
⁄⁄: I
,
⁄⁄I J
nullable
⁄⁄K S
:
⁄⁄S T
false
⁄⁄U Z
)
⁄⁄Z [
,
⁄⁄[ \
CardProvider
€€  
=
€€! "
table
€€# (
.
€€( )
Column
€€) /
<
€€/ 0
string
€€0 6
>
€€6 7
(
€€7 8
type
€€8 <
:
€€< =
$str
€€> M
,
€€M N
nullable
€€O W
:
€€W X
false
€€Y ^
)
€€^ _
,
€€_ `
UserId
‹‹ 
=
‹‹ 
table
‹‹ "
.
‹‹" #
Column
‹‹# )
<
‹‹) *
string
‹‹* 0
>
‹‹0 1
(
‹‹1 2
type
‹‹2 6
:
‹‹6 7
$str
‹‹8 G
,
‹‹G H
nullable
‹‹I Q
:
‹‹Q R
false
‹‹S X
)
‹‹X Y
}
›› 
,
›› 
constraints
ﬁﬁ 
:
ﬁﬁ 
table
ﬁﬁ "
=>
ﬁﬁ# %
{
ﬂﬂ 
table
‡‡ 
.
‡‡ 

PrimaryKey
‡‡ $
(
‡‡$ %
$str
‡‡% 6
,
‡‡6 7
x
‡‡8 9
=>
‡‡: <
x
‡‡= >
.
‡‡> ?

CardNumber
‡‡? I
)
‡‡I J
;
‡‡J K
table
·· 
.
·· 

ForeignKey
·· $
(
··$ %
name
‚‚ 
:
‚‚ 
$str
‚‚ B
,
‚‚B C
column
„„ 
:
„„ 
x
„„  !
=>
„„" $
x
„„% &
.
„„& '
UserId
„„' -
,
„„- .
principalTable
‰‰ &
:
‰‰& '
$str
‰‰( 5
,
‰‰5 6
principalColumn
ÂÂ '
:
ÂÂ' (
$str
ÂÂ) -
,
ÂÂ- .
onDelete
ÊÊ  
:
ÊÊ  !
ReferentialAction
ÊÊ" 3
.
ÊÊ3 4
Cascade
ÊÊ4 ;
)
ÊÊ; <
;
ÊÊ< =
}
ÁÁ 
)
ÁÁ 
;
ÁÁ 
migrationBuilder
ÈÈ 
.
ÈÈ 
CreateTable
ÈÈ (
(
ÈÈ( )
name
ÍÍ 
:
ÍÍ 
$str
ÍÍ  
,
ÍÍ  !
columns
ÎÎ 
:
ÎÎ 
table
ÎÎ 
=>
ÎÎ !
new
ÎÎ" %
{
ÏÏ 
	StudentId
ÌÌ 
=
ÌÌ 
table
ÌÌ  %
.
ÌÌ% &
Column
ÌÌ& ,
<
ÌÌ, -
Guid
ÌÌ- 1
>
ÌÌ1 2
(
ÌÌ2 3
type
ÌÌ3 7
:
ÌÌ7 8
$str
ÌÌ9 K
,
ÌÌK L
nullable
ÌÌM U
:
ÌÌU V
false
ÌÌW \
)
ÌÌ\ ]
,
ÌÌ] ^
UserId
ÓÓ 
=
ÓÓ 
table
ÓÓ "
.
ÓÓ" #
Column
ÓÓ# )
<
ÓÓ) *
string
ÓÓ* 0
>
ÓÓ0 1
(
ÓÓ1 2
type
ÓÓ2 6
:
ÓÓ6 7
$str
ÓÓ8 G
,
ÓÓG H
nullable
ÓÓI Q
:
ÓÓQ R
false
ÓÓS X
)
ÓÓX Y
,
ÓÓY Z

University
ÔÔ 
=
ÔÔ  
table
ÔÔ! &
.
ÔÔ& '
Column
ÔÔ' -
<
ÔÔ- .
string
ÔÔ. 4
>
ÔÔ4 5
(
ÔÔ5 6
type
ÔÔ6 :
:
ÔÔ: ;
$str
ÔÔ< K
,
ÔÔK L
nullable
ÔÔM U
:
ÔÔU V
false
ÔÔW \
)
ÔÔ\ ]
}
 
,
 
constraints
ÒÒ 
:
ÒÒ 
table
ÒÒ "
=>
ÒÒ# %
{
ÚÚ 
table
ÛÛ 
.
ÛÛ 

PrimaryKey
ÛÛ $
(
ÛÛ$ %
$str
ÛÛ% 2
,
ÛÛ2 3
x
ÛÛ4 5
=>
ÛÛ6 8
x
ÛÛ9 :
.
ÛÛ: ;
	StudentId
ÛÛ; D
)
ÛÛD E
;
ÛÛE F
table
ÙÙ 
.
ÙÙ 

ForeignKey
ÙÙ $
(
ÙÙ$ %
name
ıı 
:
ıı 
$str
ıı >
,
ıı> ?
column
ˆˆ 
:
ˆˆ 
x
ˆˆ  !
=>
ˆˆ" $
x
ˆˆ% &
.
ˆˆ& '
UserId
ˆˆ' -
,
ˆˆ- .
principalTable
˜˜ &
:
˜˜& '
$str
˜˜( 5
,
˜˜5 6
principalColumn
¯¯ '
:
¯¯' (
$str
¯¯) -
,
¯¯- .
onDelete
˘˘  
:
˘˘  !
ReferentialAction
˘˘" 3
.
˘˘3 4
Cascade
˘˘4 ;
)
˘˘; <
;
˘˘< =
}
˙˙ 
)
˙˙ 
;
˙˙ 
migrationBuilder
¸¸ 
.
¸¸ 
CreateTable
¸¸ (
(
¸¸( )
name
˝˝ 
:
˝˝ 
$str
˝˝ 
,
˝˝  
columns
˛˛ 
:
˛˛ 
table
˛˛ 
=>
˛˛ !
new
˛˛" %
{
ˇˇ 
Id
ÄÄ 
=
ÄÄ 
table
ÄÄ 
.
ÄÄ 
Column
ÄÄ %
<
ÄÄ% &
Guid
ÄÄ& *
>
ÄÄ* +
(
ÄÄ+ ,
type
ÄÄ, 0
:
ÄÄ0 1
$str
ÄÄ2 D
,
ÄÄD E
nullable
ÄÄF N
:
ÄÄN O
false
ÄÄP U
)
ÄÄU V
,
ÄÄV W
InstructorId
ÅÅ  
=
ÅÅ! "
table
ÅÅ# (
.
ÅÅ( )
Column
ÅÅ) /
<
ÅÅ/ 0
Guid
ÅÅ0 4
>
ÅÅ4 5
(
ÅÅ5 6
type
ÅÅ6 :
:
ÅÅ: ;
$str
ÅÅ< N
,
ÅÅN O
nullable
ÅÅP X
:
ÅÅX Y
false
ÅÅZ _
)
ÅÅ_ `
,
ÅÅ` a

CategoryId
ÇÇ 
=
ÇÇ  
table
ÇÇ! &
.
ÇÇ& '
Column
ÇÇ' -
<
ÇÇ- .
Guid
ÇÇ. 2
>
ÇÇ2 3
(
ÇÇ3 4
type
ÇÇ4 8
:
ÇÇ8 9
$str
ÇÇ: L
,
ÇÇL M
nullable
ÇÇN V
:
ÇÇV W
false
ÇÇX ]
)
ÇÇ] ^
,
ÇÇ^ _
LevelId
ÉÉ 
=
ÉÉ 
table
ÉÉ #
.
ÉÉ# $
Column
ÉÉ$ *
<
ÉÉ* +
Guid
ÉÉ+ /
>
ÉÉ/ 0
(
ÉÉ0 1
type
ÉÉ1 5
:
ÉÉ5 6
$str
ÉÉ7 I
,
ÉÉI J
nullable
ÉÉK S
:
ÉÉS T
false
ÉÉU Z
)
ÉÉZ [
,
ÉÉ[ \
CreateAt
ÑÑ 
=
ÑÑ 
table
ÑÑ $
.
ÑÑ$ %
Column
ÑÑ% +
<
ÑÑ+ ,
DateTime
ÑÑ, 4
>
ÑÑ4 5
(
ÑÑ5 6
type
ÑÑ6 :
:
ÑÑ: ;
$str
ÑÑ< G
,
ÑÑG H
nullable
ÑÑI Q
:
ÑÑQ R
false
ÑÑS X
)
ÑÑX Y
,
ÑÑY Z
StudentSlot
ÖÖ 
=
ÖÖ  !
table
ÖÖ" '
.
ÖÖ' (
Column
ÖÖ( .
<
ÖÖ. /
int
ÖÖ/ 2
>
ÖÖ2 3
(
ÖÖ3 4
type
ÖÖ4 8
:
ÖÖ8 9
$str
ÖÖ: ?
,
ÖÖ? @
nullable
ÖÖA I
:
ÖÖI J
false
ÖÖK P
)
ÖÖP Q
,
ÖÖQ R
LearningTime
ÜÜ  
=
ÜÜ! "
table
ÜÜ# (
.
ÜÜ( )
Column
ÜÜ) /
<
ÜÜ/ 0
DateTime
ÜÜ0 8
>
ÜÜ8 9
(
ÜÜ9 :
type
ÜÜ: >
:
ÜÜ> ?
$str
ÜÜ@ K
,
ÜÜK L
nullable
ÜÜM U
:
ÜÜU V
false
ÜÜW \
)
ÜÜ\ ]
,
ÜÜ] ^
Price
áá 
=
áá 
table
áá !
.
áá! "
Column
áá" (
<
áá( )
double
áá) /
>
áá/ 0
(
áá0 1
type
áá1 5
:
áá5 6
$str
áá7 >
,
áá> ?
nullable
áá@ H
:
ááH I
false
ááJ O
)
ááO P
,
ááP Q
CourseImgUrl
àà  
=
àà! "
table
àà# (
.
àà( )
Column
àà) /
<
àà/ 0
string
àà0 6
>
àà6 7
(
àà7 8
type
àà8 <
:
àà< =
$str
àà> M
,
ààM N
nullable
ààO W
:
ààW X
true
ààY ]
)
àà] ^
,
àà^ _
Title
ââ 
=
ââ 
table
ââ !
.
ââ! "
Column
ââ" (
<
ââ( )
string
ââ) /
>
ââ/ 0
(
ââ0 1
type
ââ1 5
:
ââ5 6
$str
ââ7 F
,
ââF G
nullable
ââH P
:
ââP Q
false
ââR W
)
ââW X
,
ââX Y
Description
ää 
=
ää  !
table
ää" '
.
ää' (
Column
ää( .
<
ää. /
string
ää/ 5
>
ää5 6
(
ää6 7
type
ää7 ;
:
ää; <
$str
ää= L
,
ääL M
nullable
ääN V
:
ääV W
false
ääX ]
)
ää] ^
,
ää^ _

IsAccepted
ãã 
=
ãã  
table
ãã! &
.
ãã& '
Column
ãã' -
<
ãã- .
bool
ãã. 2
>
ãã2 3
(
ãã3 4
type
ãã4 8
:
ãã8 9
$str
ãã: ?
,
ãã? @
nullable
ããA I
:
ããI J
false
ããK P
)
ããP Q
,
ããQ R
IsDelete
åå 
=
åå 
table
åå $
.
åå$ %
Column
åå% +
<
åå+ ,
bool
åå, 0
>
åå0 1
(
åå1 2
type
åå2 6
:
åå6 7
$str
åå8 =
,
åå= >
nullable
åå? G
:
ååG H
false
ååI N
)
ååN O
,
ååO P
	TotalRate
çç 
=
çç 
table
çç  %
.
çç% &
Column
çç& ,
<
çç, -
float
çç- 2
>
çç2 3
(
çç3 4
type
çç4 8
:
çç8 9
$str
çç: @
,
çç@ A
nullable
ççB J
:
ççJ K
false
ççL Q
)
ççQ R
}
éé 
,
éé 
constraints
èè 
:
èè 
table
èè "
=>
èè# %
{
êê 
table
ëë 
.
ëë 

PrimaryKey
ëë $
(
ëë$ %
$str
ëë% 1
,
ëë1 2
x
ëë3 4
=>
ëë5 7
x
ëë8 9
.
ëë9 :
Id
ëë: <
)
ëë< =
;
ëë= >
table
íí 
.
íí 

ForeignKey
íí $
(
íí$ %
name
ìì 
:
ìì 
$str
ìì @
,
ìì@ A
column
îî 
:
îî 
x
îî  !
=>
îî" $
x
îî% &
.
îî& '

CategoryId
îî' 1
,
îî1 2
principalTable
ïï &
:
ïï& '
$str
ïï( 4
,
ïï4 5
principalColumn
ññ '
:
ññ' (
$str
ññ) -
,
ññ- .
onDelete
óó  
:
óó  !
ReferentialAction
óó" 3
.
óó3 4
Cascade
óó4 ;
)
óó; <
;
óó< =
table
òò 
.
òò 

ForeignKey
òò $
(
òò$ %
name
ôô 
:
ôô 
$str
ôô C
,
ôôC D
column
öö 
:
öö 
x
öö  !
=>
öö" $
x
öö% &
.
öö& '
InstructorId
öö' 3
,
öö3 4
principalTable
õõ &
:
õõ& '
$str
õõ( 5
,
õõ5 6
principalColumn
úú '
:
úú' (
$str
úú) 7
,
úú7 8
onDelete
ùù  
:
ùù  !
ReferentialAction
ùù" 3
.
ùù3 4
Cascade
ùù4 ;
)
ùù; <
;
ùù< =
table
ûû 
.
ûû 

ForeignKey
ûû $
(
ûû$ %
name
üü 
:
üü 
$str
üü 9
,
üü9 :
column
†† 
:
†† 
x
††  !
=>
††" $
x
††% &
.
††& '
LevelId
††' .
,
††. /
principalTable
°° &
:
°°& '
$str
°°( 0
,
°°0 1
principalColumn
¢¢ '
:
¢¢' (
$str
¢¢) -
,
¢¢- .
onDelete
££  
:
££  !
ReferentialAction
££" 3
.
££3 4
Cascade
££4 ;
)
££; <
;
££< =
}
§§ 
)
§§ 
;
§§ 
migrationBuilder
¶¶ 
.
¶¶ 
CreateTable
¶¶ (
(
¶¶( )
name
ßß 
:
ßß 
$str
ßß #
,
ßß# $
columns
®® 
:
®® 
table
®® 
=>
®® !
new
®®" %
{
©© 
Id
™™ 
=
™™ 
table
™™ 
.
™™ 
Column
™™ %
<
™™% &
Guid
™™& *
>
™™* +
(
™™+ ,
type
™™, 0
:
™™0 1
$str
™™2 D
,
™™D E
nullable
™™F N
:
™™N O
false
™™P U
)
™™U V
,
™™V W
	StudentId
´´ 
=
´´ 
table
´´  %
.
´´% &
Column
´´& ,
<
´´, -
Guid
´´- 1
>
´´1 2
(
´´2 3
type
´´3 7
:
´´7 8
$str
´´9 K
,
´´K L
nullable
´´M U
:
´´U V
false
´´W \
)
´´\ ]
,
´´] ^

TotalPrice
¨¨ 
=
¨¨  
table
¨¨! &
.
¨¨& '
Column
¨¨' -
<
¨¨- .
double
¨¨. 4
>
¨¨4 5
(
¨¨5 6
type
¨¨6 :
:
¨¨: ;
$str
¨¨< C
,
¨¨C D
nullable
¨¨E M
:
¨¨M N
false
¨¨O T
)
¨¨T U
}
≠≠ 
,
≠≠ 
constraints
ÆÆ 
:
ÆÆ 
table
ÆÆ "
=>
ÆÆ# %
{
ØØ 
table
∞∞ 
.
∞∞ 

PrimaryKey
∞∞ $
(
∞∞$ %
$str
∞∞% 5
,
∞∞5 6
x
∞∞7 8
=>
∞∞9 ;
x
∞∞< =
.
∞∞= >
Id
∞∞> @
)
∞∞@ A
;
∞∞A B
table
±± 
.
±± 

ForeignKey
±± $
(
±±$ %
name
≤≤ 
:
≤≤ 
$str
≤≤ A
,
≤≤A B
column
≥≥ 
:
≥≥ 
x
≥≥  !
=>
≥≥" $
x
≥≥% &
.
≥≥& '
	StudentId
≥≥' 0
,
≥≥0 1
principalTable
¥¥ &
:
¥¥& '
$str
¥¥( 2
,
¥¥2 3
principalColumn
µµ '
:
µµ' (
$str
µµ) 4
,
µµ4 5
onDelete
∂∂  
:
∂∂  !
ReferentialAction
∂∂" 3
.
∂∂3 4
Cascade
∂∂4 ;
)
∂∂; <
;
∂∂< =
}
∑∑ 
)
∑∑ 
;
∑∑ 
migrationBuilder
ππ 
.
ππ 
CreateTable
ππ (
(
ππ( )
name
∫∫ 
:
∫∫ 
$str
∫∫ $
,
∫∫$ %
columns
ªª 
:
ªª 
table
ªª 
=>
ªª !
new
ªª" %
{
ºº 
Id
ΩΩ 
=
ΩΩ 
table
ΩΩ 
.
ΩΩ 
Column
ΩΩ %
<
ΩΩ% &
Guid
ΩΩ& *
>
ΩΩ* +
(
ΩΩ+ ,
type
ΩΩ, 0
:
ΩΩ0 1
$str
ΩΩ2 D
,
ΩΩD E
nullable
ΩΩF N
:
ΩΩN O
false
ΩΩP U
)
ΩΩU V
,
ΩΩV W
	StudentId
ææ 
=
ææ 
table
ææ  %
.
ææ% &
Column
ææ& ,
<
ææ, -
Guid
ææ- 1
>
ææ1 2
(
ææ2 3
type
ææ3 7
:
ææ7 8
$str
ææ9 K
,
ææK L
nullable
ææM U
:
ææU V
false
ææW \
)
ææ\ ]
,
ææ] ^
CreateAt
øø 
=
øø 
table
øø $
.
øø$ %
Column
øø% +
<
øø+ ,
DateTime
øø, 4
>
øø4 5
(
øø5 6
type
øø6 :
:
øø: ;
$str
øø< G
,
øøG H
nullable
øøI Q
:
øøQ R
false
øøS X
)
øøX Y
,
øøY Z

OrderPrice
¿¿ 
=
¿¿  
table
¿¿! &
.
¿¿& '
Column
¿¿' -
<
¿¿- .
double
¿¿. 4
>
¿¿4 5
(
¿¿5 6
type
¿¿6 :
:
¿¿: ;
$str
¿¿< C
,
¿¿C D
nullable
¿¿E M
:
¿¿M N
false
¿¿O T
)
¿¿T U
,
¿¿U V
IsPayout
¡¡ 
=
¡¡ 
table
¡¡ $
.
¡¡$ %
Column
¡¡% +
<
¡¡+ ,
bool
¡¡, 0
>
¡¡0 1
(
¡¡1 2
type
¡¡2 6
:
¡¡6 7
$str
¡¡8 =
,
¡¡= >
nullable
¡¡? G
:
¡¡G H
false
¡¡I N
)
¡¡N O
,
¡¡O P
	IsSuccess
¬¬ 
=
¬¬ 
table
¬¬  %
.
¬¬% &
Column
¬¬& ,
<
¬¬, -
bool
¬¬- 1
>
¬¬1 2
(
¬¬2 3
type
¬¬3 7
:
¬¬7 8
$str
¬¬9 >
,
¬¬> ?
nullable
¬¬@ H
:
¬¬H I
false
¬¬J O
)
¬¬O P
}
√√ 
,
√√ 
constraints
ƒƒ 
:
ƒƒ 
table
ƒƒ "
=>
ƒƒ# %
{
≈≈ 
table
∆∆ 
.
∆∆ 

PrimaryKey
∆∆ $
(
∆∆$ %
$str
∆∆% 6
,
∆∆6 7
x
∆∆8 9
=>
∆∆: <
x
∆∆= >
.
∆∆> ?
Id
∆∆? A
)
∆∆A B
;
∆∆B C
table
«« 
.
«« 

ForeignKey
«« $
(
««$ %
name
»» 
:
»» 
$str
»» B
,
»»B C
column
…… 
:
…… 
x
……  !
=>
……" $
x
……% &
.
……& '
	StudentId
……' 0
,
……0 1
principalTable
   &
:
  & '
$str
  ( 2
,
  2 3
principalColumn
ÀÀ '
:
ÀÀ' (
$str
ÀÀ) 4
,
ÀÀ4 5
onDelete
ÃÃ  
:
ÃÃ  !
ReferentialAction
ÃÃ" 3
.
ÃÃ3 4
Cascade
ÃÃ4 ;
)
ÃÃ; <
;
ÃÃ< =
}
ÕÕ 
)
ÕÕ 
;
ÕÕ 
migrationBuilder
œœ 
.
œœ 
CreateTable
œœ (
(
œœ( )
name
–– 
:
–– 
$str
–– %
,
––% &
columns
—— 
:
—— 
table
—— 
=>
—— !
new
——" %
{
““ 
Id
”” 
=
”” 
table
”” 
.
”” 
Column
”” %
<
””% &
Guid
””& *
>
””* +
(
””+ ,
type
””, 0
:
””0 1
$str
””2 D
,
””D E
nullable
””F N
:
””N O
false
””P U
)
””U V
,
””V W
	StudentId
‘‘ 
=
‘‘ 
table
‘‘  %
.
‘‘% &
Column
‘‘& ,
<
‘‘, -
Guid
‘‘- 1
>
‘‘1 2
(
‘‘2 3
type
‘‘3 7
:
‘‘7 8
$str
‘‘9 K
,
‘‘K L
nullable
‘‘M U
:
‘‘U V
false
‘‘W \
)
‘‘\ ]
,
‘‘] ^
CourseId
’’ 
=
’’ 
table
’’ $
.
’’$ %
Column
’’% +
<
’’+ ,
Guid
’’, 0
>
’’0 1
(
’’1 2
type
’’2 6
:
’’6 7
$str
’’8 J
,
’’J K
nullable
’’L T
:
’’T U
false
’’V [
)
’’[ \
,
’’\ ]
CreateAt
÷÷ 
=
÷÷ 
table
÷÷ $
.
÷÷$ %
Column
÷÷% +
<
÷÷+ ,
DateTime
÷÷, 4
>
÷÷4 5
(
÷÷5 6
type
÷÷6 :
:
÷÷: ;
$str
÷÷< G
,
÷÷G H
nullable
÷÷I Q
:
÷÷Q R
false
÷÷S X
)
÷÷X Y
,
÷÷Y Z
Message
◊◊ 
=
◊◊ 
table
◊◊ #
.
◊◊# $
Column
◊◊$ *
<
◊◊* +
string
◊◊+ 1
>
◊◊1 2
(
◊◊2 3
type
◊◊3 7
:
◊◊7 8
$str
◊◊9 H
,
◊◊H I
nullable
◊◊J R
:
◊◊R S
false
◊◊T Y
)
◊◊Y Z
,
◊◊Z [
IsSent
ÿÿ 
=
ÿÿ 
table
ÿÿ "
.
ÿÿ" #
Column
ÿÿ# )
<
ÿÿ) *
bool
ÿÿ* .
>
ÿÿ. /
(
ÿÿ/ 0
type
ÿÿ0 4
:
ÿÿ4 5
$str
ÿÿ6 ;
,
ÿÿ; <
nullable
ÿÿ= E
:
ÿÿE F
false
ÿÿG L
)
ÿÿL M
,
ÿÿM N

IsAccepted
ŸŸ 
=
ŸŸ  
table
ŸŸ! &
.
ŸŸ& '
Column
ŸŸ' -
<
ŸŸ- .
bool
ŸŸ. 2
>
ŸŸ2 3
(
ŸŸ3 4
type
ŸŸ4 8
:
ŸŸ8 9
$str
ŸŸ: ?
,
ŸŸ? @
nullable
ŸŸA I
:
ŸŸI J
false
ŸŸK P
)
ŸŸP Q
}
⁄⁄ 
,
⁄⁄ 
constraints
€€ 
:
€€ 
table
€€ "
=>
€€# %
{
‹‹ 
table
›› 
.
›› 

PrimaryKey
›› $
(
››$ %
$str
››% 7
,
››7 8
x
››9 :
=>
››; =
x
››> ?
.
››? @
Id
››@ B
)
››B C
;
››C D
table
ﬁﬁ 
.
ﬁﬁ 

ForeignKey
ﬁﬁ $
(
ﬁﬁ$ %
name
ﬂﬂ 
:
ﬂﬂ 
$str
ﬂﬂ A
,
ﬂﬂA B
column
‡‡ 
:
‡‡ 
x
‡‡  !
=>
‡‡" $
x
‡‡% &
.
‡‡& '
CourseId
‡‡' /
,
‡‡/ 0
principalTable
·· &
:
··& '
$str
··( 1
,
··1 2
principalColumn
‚‚ '
:
‚‚' (
$str
‚‚) -
,
‚‚- .
onDelete
„„  
:
„„  !
ReferentialAction
„„" 3
.
„„3 4
Cascade
„„4 ;
)
„„; <
;
„„< =
}
‰‰ 
)
‰‰ 
;
‰‰ 
migrationBuilder
ÊÊ 
.
ÊÊ 
CreateTable
ÊÊ (
(
ÊÊ( )
name
ÁÁ 
:
ÁÁ 
$str
ÁÁ %
,
ÁÁ% &
columns
ËË 
:
ËË 
table
ËË 
=>
ËË !
new
ËË" %
{
ÈÈ 
Id
ÍÍ 
=
ÍÍ 
table
ÍÍ 
.
ÍÍ 
Column
ÍÍ %
<
ÍÍ% &
Guid
ÍÍ& *
>
ÍÍ* +
(
ÍÍ+ ,
type
ÍÍ, 0
:
ÍÍ0 1
$str
ÍÍ2 D
,
ÍÍD E
nullable
ÍÍF N
:
ÍÍN O
false
ÍÍP U
)
ÍÍU V
,
ÍÍV W
	StudentId
ÎÎ 
=
ÎÎ 
table
ÎÎ  %
.
ÎÎ% &
Column
ÎÎ& ,
<
ÎÎ, -
Guid
ÎÎ- 1
>
ÎÎ1 2
(
ÎÎ2 3
type
ÎÎ3 7
:
ÎÎ7 8
$str
ÎÎ9 K
,
ÎÎK L
nullable
ÎÎM U
:
ÎÎU V
false
ÎÎW \
)
ÎÎ\ ]
,
ÎÎ] ^
CourseId
ÏÏ 
=
ÏÏ 
table
ÏÏ $
.
ÏÏ$ %
Column
ÏÏ% +
<
ÏÏ+ ,
Guid
ÏÏ, 0
>
ÏÏ0 1
(
ÏÏ1 2
type
ÏÏ2 6
:
ÏÏ6 7
$str
ÏÏ8 J
,
ÏÏJ K
nullable
ÏÏL T
:
ÏÏT U
false
ÏÏV [
)
ÏÏ[ \
,
ÏÏ\ ]
Rate
ÌÌ 
=
ÌÌ 
table
ÌÌ  
.
ÌÌ  !
Column
ÌÌ! '
<
ÌÌ' (
float
ÌÌ( -
>
ÌÌ- .
(
ÌÌ. /
type
ÌÌ/ 3
:
ÌÌ3 4
$str
ÌÌ5 ;
,
ÌÌ; <
nullable
ÌÌ= E
:
ÌÌE F
false
ÌÌG L
)
ÌÌL M
,
ÌÌM N
Message
ÓÓ 
=
ÓÓ 
table
ÓÓ #
.
ÓÓ# $
Column
ÓÓ$ *
<
ÓÓ* +
string
ÓÓ+ 1
>
ÓÓ1 2
(
ÓÓ2 3
type
ÓÓ3 7
:
ÓÓ7 8
$str
ÓÓ9 H
,
ÓÓH I
nullable
ÓÓJ R
:
ÓÓR S
false
ÓÓT Y
)
ÓÓY Z
,
ÓÓZ [
CreateAt
ÔÔ 
=
ÔÔ 
table
ÔÔ $
.
ÔÔ$ %
Column
ÔÔ% +
<
ÔÔ+ ,
DateTime
ÔÔ, 4
>
ÔÔ4 5
(
ÔÔ5 6
type
ÔÔ6 :
:
ÔÔ: ;
$str
ÔÔ< G
,
ÔÔG H
nullable
ÔÔI Q
:
ÔÔQ R
false
ÔÔS X
)
ÔÔX Y
,
ÔÔY Z
IsDelete
 
=
 
table
 $
.
$ %
Column
% +
<
+ ,
bool
, 0
>
0 1
(
1 2
type
2 6
:
6 7
$str
8 =
,
= >
nullable
? G
:
G H
false
I N
)
N O
}
ÒÒ 
,
ÒÒ 
constraints
ÚÚ 
:
ÚÚ 
table
ÚÚ "
=>
ÚÚ# %
{
ÛÛ 
table
ÙÙ 
.
ÙÙ 

PrimaryKey
ÙÙ $
(
ÙÙ$ %
$str
ÙÙ% 7
,
ÙÙ7 8
x
ÙÙ9 :
=>
ÙÙ; =
x
ÙÙ> ?
.
ÙÙ? @
Id
ÙÙ@ B
)
ÙÙB C
;
ÙÙC D
table
ıı 
.
ıı 

ForeignKey
ıı $
(
ıı$ %
name
ˆˆ 
:
ˆˆ 
$str
ˆˆ A
,
ˆˆA B
column
˜˜ 
:
˜˜ 
x
˜˜  !
=>
˜˜" $
x
˜˜% &
.
˜˜& '
CourseId
˜˜' /
,
˜˜/ 0
principalTable
¯¯ &
:
¯¯& '
$str
¯¯( 1
,
¯¯1 2
principalColumn
˘˘ '
:
˘˘' (
$str
˘˘) -
,
˘˘- .
onDelete
˙˙  
:
˙˙  !
ReferentialAction
˙˙" 3
.
˙˙3 4
Cascade
˙˙4 ;
)
˙˙; <
;
˙˙< =
}
˚˚ 
)
˚˚ 
;
˚˚ 
migrationBuilder
˝˝ 
.
˝˝ 
CreateTable
˝˝ (
(
˝˝( )
name
˛˛ 
:
˛˛ 
$str
˛˛ &
,
˛˛& '
columns
ˇˇ 
:
ˇˇ 
table
ˇˇ 
=>
ˇˇ !
new
ˇˇ" %
{
ÄÄ 
Id
ÅÅ 
=
ÅÅ 
table
ÅÅ 
.
ÅÅ 
Column
ÅÅ %
<
ÅÅ% &
Guid
ÅÅ& *
>
ÅÅ* +
(
ÅÅ+ ,
type
ÅÅ, 0
:
ÅÅ0 1
$str
ÅÅ2 D
,
ÅÅD E
nullable
ÅÅF N
:
ÅÅN O
false
ÅÅP U
)
ÅÅU V
,
ÅÅV W
CourseId
ÇÇ 
=
ÇÇ 
table
ÇÇ $
.
ÇÇ$ %
Column
ÇÇ% +
<
ÇÇ+ ,
Guid
ÇÇ, 0
>
ÇÇ0 1
(
ÇÇ1 2
type
ÇÇ2 6
:
ÇÇ6 7
$str
ÇÇ8 J
,
ÇÇJ K
nullable
ÇÇL T
:
ÇÇT U
false
ÇÇV [
)
ÇÇ[ \
,
ÇÇ\ ]
Title
ÉÉ 
=
ÉÉ 
table
ÉÉ !
.
ÉÉ! "
Column
ÉÉ" (
<
ÉÉ( )
string
ÉÉ) /
>
ÉÉ/ 0
(
ÉÉ0 1
type
ÉÉ1 5
:
ÉÉ5 6
$str
ÉÉ7 F
,
ÉÉF G
nullable
ÉÉH P
:
ÉÉP Q
false
ÉÉR W
)
ÉÉW X
,
ÉÉX Y
Description
ÑÑ 
=
ÑÑ  !
table
ÑÑ" '
.
ÑÑ' (
Column
ÑÑ( .
<
ÑÑ. /
string
ÑÑ/ 5
>
ÑÑ5 6
(
ÑÑ6 7
type
ÑÑ7 ;
:
ÑÑ; <
$str
ÑÑ= L
,
ÑÑL M
nullable
ÑÑN V
:
ÑÑV W
false
ÑÑX ]
)
ÑÑ] ^
}
ÖÖ 
,
ÖÖ 
constraints
ÜÜ 
:
ÜÜ 
table
ÜÜ "
=>
ÜÜ# %
{
áá 
table
àà 
.
àà 

PrimaryKey
àà $
(
àà$ %
$str
àà% 8
,
àà8 9
x
àà: ;
=>
àà< >
x
àà? @
.
àà@ A
Id
ààA C
)
ààC D
;
ààD E
table
ââ 
.
ââ 

ForeignKey
ââ $
(
ââ$ %
name
ää 
:
ää 
$str
ää B
,
ääB C
column
ãã 
:
ãã 
x
ãã  !
=>
ãã" $
x
ãã% &
.
ãã& '
CourseId
ãã' /
,
ãã/ 0
principalTable
åå &
:
åå& '
$str
åå( 1
,
åå1 2
principalColumn
çç '
:
çç' (
$str
çç) -
,
çç- .
onDelete
éé  
:
éé  !
ReferentialAction
éé" 3
.
éé3 4
Cascade
éé4 ;
)
éé; <
;
éé< =
}
èè 
)
èè 
;
èè 
migrationBuilder
ëë 
.
ëë 
CreateTable
ëë (
(
ëë( )
name
íí 
:
íí 
$str
íí &
,
íí& '
columns
ìì 
:
ìì 
table
ìì 
=>
ìì !
new
ìì" %
{
îî 
Id
ïï 
=
ïï 
table
ïï 
.
ïï 
Column
ïï %
<
ïï% &
Guid
ïï& *
>
ïï* +
(
ïï+ ,
type
ïï, 0
:
ïï0 1
$str
ïï2 D
,
ïïD E
nullable
ïïF N
:
ïïN O
false
ïïP U
)
ïïU V
,
ïïV W
	StudentId
ññ 
=
ññ 
table
ññ  %
.
ññ% &
Column
ññ& ,
<
ññ, -
Guid
ññ- 1
>
ññ1 2
(
ññ2 3
type
ññ3 7
:
ññ7 8
$str
ññ9 K
,
ññK L
nullable
ññM U
:
ññU V
true
ññW [
)
ññ[ \
,
ññ\ ]
CourseId
óó 
=
óó 
table
óó $
.
óó$ %
Column
óó% +
<
óó+ ,
Guid
óó, 0
>
óó0 1
(
óó1 2
type
óó2 6
:
óó6 7
$str
óó8 J
,
óóJ K
nullable
óóL T
:
óóT U
true
óóV Z
)
óóZ [
,
óó[ \
LearningTime
òò  
=
òò! "
table
òò# (
.
òò( )
Column
òò) /
<
òò/ 0
DateTime
òò0 8
>
òò8 9
(
òò9 :
type
òò: >
:
òò> ?
$str
òò@ K
,
òòK L
nullable
òòM U
:
òòU V
false
òòW \
)
òò\ ]
,
òò] ^
StartAt
ôô 
=
ôô 
table
ôô #
.
ôô# $
Column
ôô$ *
<
ôô* +
DateTime
ôô+ 3
>
ôô3 4
(
ôô4 5
type
ôô5 9
:
ôô9 :
$str
ôô; F
,
ôôF G
nullable
ôôH P
:
ôôP Q
false
ôôR W
)
ôôW X
,
ôôX Y
EndAt
öö 
=
öö 
table
öö !
.
öö! "
Column
öö" (
<
öö( )
DateTime
öö) 1
>
öö1 2
(
öö2 3
type
öö3 7
:
öö7 8
$str
öö9 D
,
ööD E
nullable
ööF N
:
ööN O
false
ööP U
)
ööU V
,
ööV W
CertificateImgUrl
õõ %
=
õõ& '
table
õõ( -
.
õõ- .
Column
õõ. 4
<
õõ4 5
string
õõ5 ;
>
õõ; <
(
õõ< =
type
õõ= A
:
õõA B
$str
õõC R
,
õõR S
nullable
õõT \
:
õõ\ ]
false
õõ^ c
)
õõc d
,
õõd e
	IsSuccess
úú 
=
úú 
table
úú  %
.
úú% &
Column
úú& ,
<
úú, -
bool
úú- 1
>
úú1 2
(
úú2 3
type
úú3 7
:
úú7 8
$str
úú9 >
,
úú> ?
nullable
úú@ H
:
úúH I
false
úúJ O
)
úúO P
,
úúP Q

IsExpelled
ùù 
=
ùù  
table
ùù! &
.
ùù& '
Column
ùù' -
<
ùù- .
bool
ùù. 2
>
ùù2 3
(
ùù3 4
type
ùù4 8
:
ùù8 9
$str
ùù: ?
,
ùù? @
nullable
ùùA I
:
ùùI J
false
ùùK P
)
ùùP Q
}
ûû 
,
ûû 
constraints
üü 
:
üü 
table
üü "
=>
üü# %
{
†† 
table
°° 
.
°° 

PrimaryKey
°° $
(
°°$ %
$str
°°% 8
,
°°8 9
x
°°: ;
=>
°°< >
x
°°? @
.
°°@ A
Id
°°A C
)
°°C D
;
°°D E
table
¢¢ 
.
¢¢ 

ForeignKey
¢¢ $
(
¢¢$ %
name
££ 
:
££ 
$str
££ B
,
££B C
column
§§ 
:
§§ 
x
§§  !
=>
§§" $
x
§§% &
.
§§& '
CourseId
§§' /
,
§§/ 0
principalTable
•• &
:
••& '
$str
••( 1
,
••1 2
principalColumn
¶¶ '
:
¶¶' (
$str
¶¶) -
)
¶¶- .
;
¶¶. /
table
ßß 
.
ßß 

ForeignKey
ßß $
(
ßß$ %
name
®® 
:
®® 
$str
®® D
,
®®D E
column
©© 
:
©© 
x
©©  !
=>
©©" $
x
©©% &
.
©©& '
	StudentId
©©' 0
,
©©0 1
principalTable
™™ &
:
™™& '
$str
™™( 2
,
™™2 3
principalColumn
´´ '
:
´´' (
$str
´´) 4
)
´´4 5
;
´´5 6
}
¨¨ 
)
¨¨ 
;
¨¨ 
migrationBuilder
ÆÆ 
.
ÆÆ 
CreateTable
ÆÆ (
(
ÆÆ( )
name
ØØ 
:
ØØ 
$str
ØØ #
,
ØØ# $
columns
∞∞ 
:
∞∞ 
table
∞∞ 
=>
∞∞ !
new
∞∞" %
{
±± 
Id
≤≤ 
=
≤≤ 
table
≤≤ 
.
≤≤ 
Column
≤≤ %
<
≤≤% &
Guid
≤≤& *
>
≤≤* +
(
≤≤+ ,
type
≤≤, 0
:
≤≤0 1
$str
≤≤2 D
,
≤≤D E
nullable
≤≤F N
:
≤≤N O
false
≤≤P U
)
≤≤U V
,
≤≤V W
CartHeaderId
≥≥  
=
≥≥! "
table
≥≥# (
.
≥≥( )
Column
≥≥) /
<
≥≥/ 0
Guid
≥≥0 4
>
≥≥4 5
(
≥≥5 6
type
≥≥6 :
:
≥≥: ;
$str
≥≥< N
,
≥≥N O
nullable
≥≥P X
:
≥≥X Y
false
≥≥Z _
)
≥≥_ `
,
≥≥` a
CourseId
¥¥ 
=
¥¥ 
table
¥¥ $
.
¥¥$ %
Column
¥¥% +
<
¥¥+ ,
Guid
¥¥, 0
>
¥¥0 1
(
¥¥1 2
type
¥¥2 6
:
¥¥6 7
$str
¥¥8 J
,
¥¥J K
nullable
¥¥L T
:
¥¥T U
false
¥¥V [
)
¥¥[ \
,
¥¥\ ]
CoursePrice
µµ 
=
µµ  !
table
µµ" '
.
µµ' (
Column
µµ( .
<
µµ. /
double
µµ/ 5
>
µµ5 6
(
µµ6 7
type
µµ7 ;
:
µµ; <
$str
µµ= D
,
µµD E
nullable
µµF N
:
µµN O
false
µµP U
)
µµU V
}
∂∂ 
,
∂∂ 
constraints
∑∑ 
:
∑∑ 
table
∑∑ "
=>
∑∑# %
{
∏∏ 
table
ππ 
.
ππ 

PrimaryKey
ππ $
(
ππ$ %
$str
ππ% 5
,
ππ5 6
x
ππ7 8
=>
ππ9 ;
x
ππ< =
.
ππ= >
Id
ππ> @
)
ππ@ A
;
ππA B
table
∫∫ 
.
∫∫ 

ForeignKey
∫∫ $
(
∫∫$ %
name
ªª 
:
ªª 
$str
ªª G
,
ªªG H
column
ºº 
:
ºº 
x
ºº  !
=>
ºº" $
x
ºº% &
.
ºº& '
CartHeaderId
ºº' 3
,
ºº3 4
principalTable
ΩΩ &
:
ΩΩ& '
$str
ΩΩ( 5
,
ΩΩ5 6
principalColumn
ææ '
:
ææ' (
$str
ææ) -
,
ææ- .
onDelete
øø  
:
øø  !
ReferentialAction
øø" 3
.
øø3 4
Cascade
øø4 ;
)
øø; <
;
øø< =
}
¿¿ 
)
¿¿ 
;
¿¿ 
migrationBuilder
¬¬ 
.
¬¬ 
CreateTable
¬¬ (
(
¬¬( )
name
√√ 
:
√√ 
$str
√√ $
,
√√$ %
columns
ƒƒ 
:
ƒƒ 
table
ƒƒ 
=>
ƒƒ !
new
ƒƒ" %
{
≈≈ 
Id
∆∆ 
=
∆∆ 
table
∆∆ 
.
∆∆ 
Column
∆∆ %
<
∆∆% &
Guid
∆∆& *
>
∆∆* +
(
∆∆+ ,
type
∆∆, 0
:
∆∆0 1
$str
∆∆2 D
,
∆∆D E
nullable
∆∆F N
:
∆∆N O
false
∆∆P U
)
∆∆U V
,
∆∆V W
CourseId
«« 
=
«« 
table
«« $
.
««$ %
Column
««% +
<
««+ ,
Guid
««, 0
>
««0 1
(
««1 2
type
««2 6
:
««6 7
$str
««8 J
,
««J K
nullable
««L T
:
««T U
false
««V [
)
««[ \
,
««\ ]
CoursePrice
»» 
=
»»  !
table
»»" '
.
»»' (
Column
»»( .
<
»». /
double
»»/ 5
>
»»5 6
(
»»6 7
type
»»7 ;
:
»»; <
$str
»»= D
,
»»D E
nullable
»»F N
:
»»N O
false
»»P U
)
»»U V
,
»»V W
OrderHeaderId
…… !
=
……" #
table
……$ )
.
……) *
Column
……* 0
<
……0 1
Guid
……1 5
>
……5 6
(
……6 7
type
……7 ;
:
……; <
$str
……= O
,
……O P
nullable
……Q Y
:
……Y Z
false
……[ `
)
……` a
}
   
,
   
constraints
ÀÀ 
:
ÀÀ 
table
ÀÀ "
=>
ÀÀ# %
{
ÃÃ 
table
ÕÕ 
.
ÕÕ 

PrimaryKey
ÕÕ $
(
ÕÕ$ %
$str
ÕÕ% 6
,
ÕÕ6 7
x
ÕÕ8 9
=>
ÕÕ: <
x
ÕÕ= >
.
ÕÕ> ?
Id
ÕÕ? A
)
ÕÕA B
;
ÕÕB C
table
ŒŒ 
.
ŒŒ 

ForeignKey
ŒŒ $
(
ŒŒ$ %
name
œœ 
:
œœ 
$str
œœ J
,
œœJ K
column
–– 
:
–– 
x
––  !
=>
––" $
x
––% &
.
––& '
OrderHeaderId
––' 4
,
––4 5
principalTable
—— &
:
——& '
$str
——( 6
,
——6 7
principalColumn
““ '
:
““' (
$str
““) -
,
““- .
onDelete
””  
:
””  !
ReferentialAction
””" 3
.
””3 4
Cascade
””4 ;
)
””; <
;
””< =
}
‘‘ 
)
‘‘ 
;
‘‘ 
migrationBuilder
÷÷ 
.
÷÷ 
CreateTable
÷÷ (
(
÷÷( )
name
◊◊ 
:
◊◊ 
$str
◊◊ &
,
◊◊& '
columns
ÿÿ 
:
ÿÿ 
table
ÿÿ 
=>
ÿÿ !
new
ÿÿ" %
{
ŸŸ 
Id
⁄⁄ 
=
⁄⁄ 
table
⁄⁄ 
.
⁄⁄ 
Column
⁄⁄ %
<
⁄⁄% &
Guid
⁄⁄& *
>
⁄⁄* +
(
⁄⁄+ ,
type
⁄⁄, 0
:
⁄⁄0 1
$str
⁄⁄2 D
,
⁄⁄D E
nullable
⁄⁄F N
:
⁄⁄N O
false
⁄⁄P U
)
⁄⁄U V
,
⁄⁄V W
CourseSectionId
€€ #
=
€€$ %
table
€€& +
.
€€+ ,
Column
€€, 2
<
€€2 3
Guid
€€3 7
>
€€7 8
(
€€8 9
type
€€9 =
:
€€= >
$str
€€? Q
,
€€Q R
nullable
€€S [
:
€€[ \
false
€€] b
)
€€b c
,
€€c d
Name
‹‹ 
=
‹‹ 
table
‹‹  
.
‹‹  !
Column
‹‹! '
<
‹‹' (
string
‹‹( .
>
‹‹. /
(
‹‹/ 0
type
‹‹0 4
:
‹‹4 5
$str
‹‹6 E
,
‹‹E F
nullable
‹‹G O
:
‹‹O P
false
‹‹Q V
)
‹‹V W
,
‹‹W X
VideoUrl
›› 
=
›› 
table
›› $
.
››$ %
Column
››% +
<
››+ ,
string
››, 2
>
››2 3
(
››3 4
type
››4 8
:
››8 9
$str
››: I
,
››I J
nullable
››K S
:
››S T
false
››U Z
)
››Z [
}
ﬁﬁ 
,
ﬁﬁ 
constraints
ﬂﬂ 
:
ﬂﬂ 
table
ﬂﬂ "
=>
ﬂﬂ# %
{
‡‡ 
table
·· 
.
·· 

PrimaryKey
·· $
(
··$ %
$str
··% 8
,
··8 9
x
··: ;
=>
··< >
x
··? @
.
··@ A
Id
··A C
)
··C D
;
··D E
table
‚‚ 
.
‚‚ 

ForeignKey
‚‚ $
(
‚‚$ %
name
„„ 
:
„„ 
$str
„„ P
,
„„P Q
column
‰‰ 
:
‰‰ 
x
‰‰  !
=>
‰‰" $
x
‰‰% &
.
‰‰& '
CourseSectionId
‰‰' 6
,
‰‰6 7
principalTable
ÂÂ &
:
ÂÂ& '
$str
ÂÂ( 8
,
ÂÂ8 9
principalColumn
ÊÊ '
:
ÊÊ' (
$str
ÊÊ) -
,
ÊÊ- .
onDelete
ÁÁ  
:
ÁÁ  !
ReferentialAction
ÁÁ" 3
.
ÁÁ3 4
Cascade
ÁÁ4 ;
)
ÁÁ; <
;
ÁÁ< =
}
ËË 
)
ËË 
;
ËË 
migrationBuilder
ÍÍ 
.
ÍÍ 
CreateIndex
ÍÍ (
(
ÍÍ( )
name
ÎÎ 
:
ÎÎ 
$str
ÎÎ 2
,
ÎÎ2 3
table
ÏÏ 
:
ÏÏ 
$str
ÏÏ )
,
ÏÏ) *
column
ÌÌ 
:
ÌÌ 
$str
ÌÌ  
)
ÌÌ  !
;
ÌÌ! "
migrationBuilder
ÔÔ 
.
ÔÔ 
CreateIndex
ÔÔ (
(
ÔÔ( )
name
 
:
 
$str
 %
,
% &
table
ÒÒ 
:
ÒÒ 
$str
ÒÒ $
,
ÒÒ$ %
column
ÚÚ 
:
ÚÚ 
$str
ÚÚ (
,
ÚÚ( )
unique
ÛÛ 
:
ÛÛ 
true
ÛÛ 
,
ÛÛ 
filter
ÙÙ 
:
ÙÙ 
$str
ÙÙ 6
)
ÙÙ6 7
;
ÙÙ7 8
migrationBuilder
ˆˆ 
.
ˆˆ 
CreateIndex
ˆˆ (
(
ˆˆ( )
name
˜˜ 
:
˜˜ 
$str
˜˜ 2
,
˜˜2 3
table
¯¯ 
:
¯¯ 
$str
¯¯ )
,
¯¯) *
column
˘˘ 
:
˘˘ 
$str
˘˘  
)
˘˘  !
;
˘˘! "
migrationBuilder
˚˚ 
.
˚˚ 
CreateIndex
˚˚ (
(
˚˚( )
name
¸¸ 
:
¸¸ 
$str
¸¸ 2
,
¸¸2 3
table
˝˝ 
:
˝˝ 
$str
˝˝ )
,
˝˝) *
column
˛˛ 
:
˛˛ 
$str
˛˛  
)
˛˛  !
;
˛˛! "
migrationBuilder
ÄÄ 
.
ÄÄ 
CreateIndex
ÄÄ (
(
ÄÄ( )
name
ÅÅ 
:
ÅÅ 
$str
ÅÅ 1
,
ÅÅ1 2
table
ÇÇ 
:
ÇÇ 
$str
ÇÇ (
,
ÇÇ( )
column
ÉÉ 
:
ÉÉ 
$str
ÉÉ  
)
ÉÉ  !
;
ÉÉ! "
migrationBuilder
ÖÖ 
.
ÖÖ 
CreateIndex
ÖÖ (
(
ÖÖ( )
name
ÜÜ 
:
ÜÜ 
$str
ÜÜ "
,
ÜÜ" #
table
áá 
:
áá 
$str
áá $
,
áá$ %
column
àà 
:
àà 
$str
àà )
)
àà) *
;
àà* +
migrationBuilder
ää 
.
ää 
CreateIndex
ää (
(
ää( )
name
ãã 
:
ãã 
$str
ãã %
,
ãã% &
table
åå 
:
åå 
$str
åå $
,
åå$ %
column
çç 
:
çç 
$str
çç ,
,
çç, -
unique
éé 
:
éé 
true
éé 
,
éé 
filter
èè 
:
èè 
$str
èè :
)
èè: ;
;
èè; <
migrationBuilder
ëë 
.
ëë 
CreateIndex
ëë (
(
ëë( )
name
íí 
:
íí 
$str
íí 3
,
íí3 4
table
ìì 
:
ìì 
$str
ìì $
,
ìì$ %
column
îî 
:
îî 
$str
îî &
)
îî& '
;
îî' (
migrationBuilder
ññ 
.
ññ 
CreateIndex
ññ (
(
ññ( )
name
óó 
:
óó 
$str
óó 0
,
óó0 1
table
òò 
:
òò 
$str
òò $
,
òò$ %
column
ôô 
:
ôô 
$str
ôô #
)
ôô# $
;
ôô$ %
migrationBuilder
õõ 
.
õõ 
CreateIndex
õõ (
(
õõ( )
name
úú 
:
úú 
$str
úú 1
,
úú1 2
table
ùù 
:
ùù 
$str
ùù &
,
ùù& '
column
ûû 
:
ûû 
$str
ûû "
)
ûû" #
;
ûû# $
migrationBuilder
†† 
.
†† 
CreateIndex
†† (
(
††( )
name
°° 
:
°° 
$str
°° 1
,
°°1 2
table
¢¢ 
:
¢¢ 
$str
¢¢ &
,
¢¢& '
column
££ 
:
££ 
$str
££ "
)
££" #
;
££# $
migrationBuilder
•• 
.
•• 
CreateIndex
•• (
(
••( )
name
¶¶ 
:
¶¶ 
$str
¶¶ -
,
¶¶- .
table
ßß 
:
ßß 
$str
ßß  
,
ßß  !
column
®® 
:
®® 
$str
®® $
)
®®$ %
;
®®% &
migrationBuilder
™™ 
.
™™ 
CreateIndex
™™ (
(
™™( )
name
´´ 
:
´´ 
$str
´´ /
,
´´/ 0
table
¨¨ 
:
¨¨ 
$str
¨¨  
,
¨¨  !
column
≠≠ 
:
≠≠ 
$str
≠≠ &
)
≠≠& '
;
≠≠' (
migrationBuilder
ØØ 
.
ØØ 
CreateIndex
ØØ (
(
ØØ( )
name
∞∞ 
:
∞∞ 
$str
∞∞ *
,
∞∞* +
table
±± 
:
±± 
$str
±±  
,
±±  !
column
≤≤ 
:
≤≤ 
$str
≤≤ !
)
≤≤! "
;
≤≤" #
migrationBuilder
¥¥ 
.
¥¥ 
CreateIndex
¥¥ (
(
¥¥( )
name
µµ 
:
µµ 
$str
µµ 2
,
µµ2 3
table
∂∂ 
:
∂∂ 
$str
∂∂ '
,
∂∂' (
column
∑∑ 
:
∑∑ 
$str
∑∑ "
)
∑∑" #
;
∑∑# $
migrationBuilder
ππ 
.
ππ 
CreateIndex
ππ (
(
ππ( )
name
∫∫ 
:
∫∫ 
$str
∫∫ -
,
∫∫- .
table
ªª 
:
ªª 
$str
ªª $
,
ªª$ %
column
ºº 
:
ºº 
$str
ºº  
)
ºº  !
;
ºº! "
migrationBuilder
ææ 
.
ææ 
CreateIndex
ææ (
(
ææ( )
name
øø 
:
øø 
$str
øø 5
,
øø5 6
table
¿¿ 
:
¿¿ 
$str
¿¿ %
,
¿¿% &
column
¡¡ 
:
¡¡ 
$str
¡¡ '
)
¡¡' (
;
¡¡( )
migrationBuilder
√√ 
.
√√ 
CreateIndex
√√ (
(
√√( )
name
ƒƒ 
:
ƒƒ 
$str
ƒƒ 1
,
ƒƒ1 2
table
≈≈ 
:
≈≈ 
$str
≈≈ %
,
≈≈% &
column
∆∆ 
:
∆∆ 
$str
∆∆ #
)
∆∆# $
;
∆∆$ %
migrationBuilder
»» 
.
»» 
CreateIndex
»» (
(
»»( )
name
…… 
:
…… 
$str
…… .
,
……. /
table
   
:
   
$str
   %
,
  % &
column
ÀÀ 
:
ÀÀ 
$str
ÀÀ  
)
ÀÀ  !
;
ÀÀ! "
migrationBuilder
ÕÕ 
.
ÕÕ 
CreateIndex
ÕÕ (
(
ÕÕ( )
name
ŒŒ 
:
ŒŒ 
$str
ŒŒ 9
,
ŒŒ9 :
table
œœ 
:
œœ 
$str
œœ '
,
œœ' (
column
–– 
:
–– 
$str
–– )
)
––) *
;
––* +
migrationBuilder
““ 
.
““ 
CreateIndex
““ (
(
““( )
name
”” 
:
”” 
$str
”” 2
,
””2 3
table
‘‘ 
:
‘‘ 
$str
‘‘ '
,
‘‘' (
column
’’ 
:
’’ 
$str
’’ "
)
’’" #
;
’’# $
migrationBuilder
◊◊ 
.
◊◊ 
CreateIndex
◊◊ (
(
◊◊( )
name
ÿÿ 
:
ÿÿ 
$str
ÿÿ 3
,
ÿÿ3 4
table
ŸŸ 
:
ŸŸ 
$str
ŸŸ '
,
ŸŸ' (
column
⁄⁄ 
:
⁄⁄ 
$str
⁄⁄ #
)
⁄⁄# $
;
⁄⁄$ %
migrationBuilder
‹‹ 
.
‹‹ 
CreateIndex
‹‹ (
(
‹‹( )
name
›› 
:
›› 
$str
›› *
,
››* +
table
ﬁﬁ 
:
ﬁﬁ 
$str
ﬁﬁ !
,
ﬁﬁ! "
column
ﬂﬂ 
:
ﬂﬂ 
$str
ﬂﬂ  
)
ﬂﬂ  !
;
ﬂﬂ! "
}
‡‡ 	
	protected
„„ 
override
„„ 
void
„„ 
Down
„„  $
(
„„$ %
MigrationBuilder
„„% 5
migrationBuilder
„„6 F
)
„„F G
{
‰‰ 	
migrationBuilder
ÂÂ 
.
ÂÂ 
	DropTable
ÂÂ &
(
ÂÂ& '
name
ÊÊ 
:
ÊÊ 
$str
ÊÊ (
)
ÊÊ( )
;
ÊÊ) *
migrationBuilder
ËË 
.
ËË 
	DropTable
ËË &
(
ËË& '
name
ÈÈ 
:
ÈÈ 
$str
ÈÈ (
)
ÈÈ( )
;
ÈÈ) *
migrationBuilder
ÎÎ 
.
ÎÎ 
	DropTable
ÎÎ &
(
ÎÎ& '
name
ÏÏ 
:
ÏÏ 
$str
ÏÏ (
)
ÏÏ( )
;
ÏÏ) *
migrationBuilder
ÓÓ 
.
ÓÓ 
	DropTable
ÓÓ &
(
ÓÓ& '
name
ÔÔ 
:
ÔÔ 
$str
ÔÔ '
)
ÔÔ' (
;
ÔÔ( )
migrationBuilder
ÒÒ 
.
ÒÒ 
	DropTable
ÒÒ &
(
ÒÒ& '
name
ÚÚ 
:
ÚÚ 
$str
ÚÚ (
)
ÚÚ( )
;
ÚÚ) *
migrationBuilder
ÙÙ 
.
ÙÙ 
	DropTable
ÙÙ &
(
ÙÙ& '
name
ıı 
:
ıı 
$str
ıı #
)
ıı# $
;
ıı$ %
migrationBuilder
˜˜ 
.
˜˜ 
	DropTable
˜˜ &
(
˜˜& '
name
¯¯ 
:
¯¯ 
$str
¯¯ %
)
¯¯% &
;
¯¯& '
migrationBuilder
˙˙ 
.
˙˙ 
	DropTable
˙˙ &
(
˙˙& '
name
˚˚ 
:
˚˚ 
$str
˚˚ %
)
˚˚% &
;
˚˚& '
migrationBuilder
˝˝ 
.
˝˝ 
	DropTable
˝˝ &
(
˝˝& '
name
˛˛ 
:
˛˛ 
$str
˛˛ $
)
˛˛$ %
;
˛˛% &
migrationBuilder
ÄÄ 
.
ÄÄ 
	DropTable
ÄÄ &
(
ÄÄ& '
name
ÅÅ 
:
ÅÅ 
$str
ÅÅ $
)
ÅÅ$ %
;
ÅÅ% &
migrationBuilder
ÉÉ 
.
ÉÉ 
	DropTable
ÉÉ &
(
ÉÉ& '
name
ÑÑ 
:
ÑÑ 
$str
ÑÑ &
)
ÑÑ& '
;
ÑÑ' (
migrationBuilder
ÜÜ 
.
ÜÜ 
	DropTable
ÜÜ &
(
ÜÜ& '
name
áá 
:
áá 
$str
áá &
)
áá& '
;
áá' (
migrationBuilder
ââ 
.
ââ 
	DropTable
ââ &
(
ââ& '
name
ää 
:
ää 
$str
ää #
)
ää# $
;
ää$ %
migrationBuilder
åå 
.
åå 
	DropTable
åå &
(
åå& '
name
çç 
:
çç 
$str
çç #
)
çç# $
;
çç$ %
migrationBuilder
èè 
.
èè 
	DropTable
èè &
(
èè& '
name
êê 
:
êê 
$str
êê $
)
êê$ %
;
êê% &
migrationBuilder
íí 
.
íí 
	DropTable
íí &
(
íí& '
name
ìì 
:
ìì 
$str
ìì &
)
ìì& '
;
ìì' (
migrationBuilder
ïï 
.
ïï 
	DropTable
ïï &
(
ïï& '
name
ññ 
:
ññ 
$str
ññ  
)
ññ  !
;
ññ! "
migrationBuilder
òò 
.
òò 
	DropTable
òò &
(
òò& '
name
ôô 
:
ôô 
$str
ôô 
)
ôô  
;
ôô  !
migrationBuilder
õõ 
.
õõ 
	DropTable
õõ &
(
õõ& '
name
úú 
:
úú 
$str
úú "
)
úú" #
;
úú# $
migrationBuilder
ûû 
.
ûû 
	DropTable
ûû &
(
ûû& '
name
üü 
:
üü 
$str
üü #
)
üü# $
;
üü$ %
migrationBuilder
°° 
.
°° 
	DropTable
°° &
(
°°& '
name
¢¢ 
:
¢¢ 
$str
¢¢ 
)
¢¢ 
;
¢¢  
migrationBuilder
§§ 
.
§§ 
	DropTable
§§ &
(
§§& '
name
•• 
:
•• 
$str
•• #
)
••# $
;
••$ %
}
¶¶ 	
}
ßß 
}®® ô
vD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\IUserManagerRepository.cs
	namespace		 	
Cursus		
 
.		 
LMS		 
.		 

DataAccess		 
.		  
IRepository		  +
{

 
public 

	interface "
IUserManagerRepository +
{ 
Task 
< 
ApplicationUser 
> 
FindByEmailAsync .
(. /
string/ 5
email6 ;
); <
;< =
Task 
< 
bool 
> )
CheckIfPhoneNumberExistsAsync 0
(0 1
string1 7
phoneNumber8 C
)C D
;D E
Task 
< 
IdentityResult 
> 
CreateAsync (
(( )
ApplicationUser) 8
user9 =
,= >
string? E
passwordF N
)N O
;O P
Task 
< 
IdentityResult 
> 
AddToRoleAsync +
(+ ,
ApplicationUser, ;
user< @
,@ A
stringB H
roleI M
)M N
;N O
Task 
< 
ApplicationUser 
> 
FindByIdAsync +
(+ ,
string, 2
userId3 9
)9 :
;: ;
Task 
< 
ApplicationUser 
> 
FindByPhoneAsync .
(. /
string/ 5
phoneNumber6 A
)A B
;B C
Task 
< 
List 
< 
ApplicationUser !
>! "
>" #
GetInstructorUser$ 5
(5 6
)6 7
;7 8
Task 
< 
List 
< 
ApplicationUser !
>! "
>" #
GetStudentUser$ 2
(2 3
)3 4
;4 5
Task 
< 
IEnumerable 
< 
ApplicationUser (
>( )
>) *
GetUsersInRoleAsync+ >
(> ?
string? E
roleF J
)J K
;K L
} 
} â
kD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\IUnitOfWork.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface 
IUnitOfWork 
{ 
IStudentRepository 
StudentRepository (
{) *
get+ .
;. /
}0 1!
IInstructorRepository  
InstructorRepository .
{/ 0
get1 4
;4 5
}6 7
ICategoryRepository		 
CategoryRepository		 *
{		+ ,
get		- 0
;		0 1
}		2 3$
IEmailTemplateRepository

 #
EmailTemplateRepository

 4
{

5 6
get

7 :
;

: ;
}

< ="
IUserManagerRepository !
UserManagerRepository 0
{1 2
get3 6
;6 7
}8 9(
IInstructorCommentRepository  '
InstructorCommentRepository! <
{= >
get? B
;B C
}D E
ICourseRepository 
CourseRepository &
{' (
get) ,
;, -
}. /"
IPaymentCardRepository !
PaymentCardRepository 0
{1 2
get3 6
;6 7
}8 9'
IInstructorRatingRepository &
InstructorRatingRepository  :
{; <
get= @
;@ A
}B C$
ICourseVersionRepository #
CourseVersionRepository 4
{5 6
get7 :
;: ;
}< =+
ICourseSectionVersionRepository #*
CourseSectionVersionRepository$ B
{C D
getE H
;H I
}J K,
 ISectionDetailsVersionRepository $+
SectionDetailsVersionRepository% D
{E F
getG J
;J K
}L M*
ICourseVersionStatusRepository ")
CourseVersionStatusRepository# @
{A B
getC F
;F G
}H I+
ICourseVersionCommentRepository #*
CourseVersionCommentRepository$ B
{C D
getE H
;H I
}J K$
IStudentCourseRepository #
StudentCourseRepository 4
{5 6
get7 :
;: ;
}< =
ILevelRepository 
LevelRepository $
{% &
get' *
;* +
}, -
Task 
< 	
int	 
> 
	SaveAsync 
( 
) 
; 
} ¬
rD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\IStudentRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface 
IStudentRepository #
:$ %
IRepository& 1
<1 2
Student2 9
>9 :
{ 
void 
Update	 
( 
Student 
student 
)  
;  !
void 
UpdateRange	 
( 
IEnumerable  
<  !
Student! (
>( )
students* 2
)2 3
;3 4
Task		 
<		 	
Student			 
>		 
AddAsync		 
(		 
Student		 "
student		# *
)		* +
;		+ ,
}

 ∫
xD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\IStudentCourseRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface $
IStudentCourseRepository )
:* +
IRepository, 7
<7 8
StudentCourse8 E
>E F
{ 
void 
Update	 
( 
StudentCourse 
studentCourse +
)+ ,
;, -
void 
UpdateRange	 
( 
IEnumerable  
<  !
StudentCourse! .
>. /
studentCourses0 >
)> ?
;? @
}		 ÷
ÄD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\ISectionDetailsVersionRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface ,
 ISectionDetailsVersionRepository 1
:2 3
IRepository4 ?
<? @!
SectionDetailsVersion@ U
>U V
{ 
void 
Update	 
( !
SectionDetailsVersion %!
sectionDetailsVersion& ;
); <
;< =
void 
UpdateRange	 
( 
IEnumerable  
<  !!
SectionDetailsVersion! 6
>6 7"
sectionDetailsVersions8 N
)N O
;O P
Task

 
<

 	
List

	 
<

 !
SectionDetailsVersion

 #
>

# $
?

$ %
>

% &@
4GetSectionDetailsVersionsOfCourseSectionVersionAsync

' [
( 
Guid "
courseSectionVersionId #
,# $
bool 
? 
asNoTracking 
) 
; 
Task 
< 	!
SectionDetailsVersion	 
? 
>  (
GetSectionDetailsVersionById! =
(= >
Guid> B
	detailsIdC L
)L M
;M N
} Ó
kD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\IRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface 
IRepository 
< 
T 
> 
where  %
T& '
:( )
class* /
{ 
Task 
< 	
IEnumerable	 
< 
T 
> 
> 
GetAllAsync $
($ %

Expression% /
</ 0
Func0 4
<4 5
T5 6
,6 7
bool8 <
>< =
>= >
?> ?
filter@ F
=G H
nullI M
,M N
stringO U
?U V
includePropertiesW h
=i j
nullk o
)o p
;p q
Task 
< 	
T	 

?
 
> 
GetAsync 
( 

Expression  
<  !
Func! %
<% &
T& '
,' (
bool) -
>- .
>. /
filter0 6
,6 7
string8 >
?> ?
includeProperties@ Q
=R S
nullT X
)X Y
;Y Z
Task		 
AddAsync			 
(		 
T		 
entity		 
)		 
;		 
Task

 
AddRangeAsync

	 
(

 
IEnumerable

 "
<

" #
T

# $
>

$ %
entities

& .
)

. /
;

/ 0
void 
Remove	 
( 
T 
entity 
) 
; 
void 
RemoveRange	 
( 
IEnumerable  
<  !
T! "
>" #
entities$ ,
), -
;- .
} Ñ
vD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\IPaymentCardRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface "
IPaymentCardRepository '
:( )
IRepository* 5
<5 6
PaymentCard6 A
>A B
{ 
void 
Update	 
( 
PaymentCard 
paymentCard '
)' (
;( )
void 
UpdateRange	 
( 
IEnumerable  
<  !
PaymentCard! ,
>, -
paymentCards. :
): ;
;; <
Task		 
<		 	
PaymentCard			 
?		 
>		 !
CardNumberExistsAsync		 ,
(		, -
string		- 3

cardNumber		4 >
)		> ?
;		? @
Task

 
<

 	
PaymentCard

	 
?

 
>

 
GetCardByUserId

 &
(

& '
string

' -
id

. 0
)

0 1
;

1 2
Task 
< 	
PaymentCard	 
> 
AddAsync 
( 
PaymentCard *
paymentCard+ 6
)6 7
;7 8
} ≥
pD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\ILevelRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface 
ILevelRepository !
:" #
IRepository$ /
</ 0
Level0 5
>5 6
{ 
void 
Update	 
( 
Level 
level 
) 
; 
void 
UpdateRange	 
( 
IEnumerable  
<  !
Level! &
>& '
levels( .
). /
;/ 0
Task		 
<		 	
Level			 
>		 
GetLevelById		 
(		 
Guid		 !
levelId		" )
)		) *
;		* +
}

 É	
uD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\IInstructorRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface !
IInstructorRepository &
:' (
IRepository) 4
<4 5

Instructor5 ?
>? @
{ 
void 
Update	 
( 

Instructor 

instructor %
)% &
;& '
void		 
UpdateRange			 
(		 
IEnumerable		  
<		  !

Instructor		! +
>		+ ,
instructors		- 8
)		8 9
;		9 :
Task

 
<

 	

Instructor

	 
?

 
>

 
GetById

 
(

 
Guid

 "
id

# %
)

% &
;

& '
Task 
< 	!
IDbContextTransaction	 
> !
BeginTransactionAsync  5
(5 6
)6 7
;7 8
} ®
{D:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\IInstructorRatingRepository.cs
public 
	interface '
IInstructorRatingRepository ,
:- .
IRepository/ :
<: ;
InstructorRating; K
>K L
{ 
void 
Update	 
( 
InstructorRating  
instructorRating! 1
)1 2
;2 3
void 
UpdateRange	 
( 
IEnumerable  
<  !
InstructorRating! 1
>1 2
instructorRatings3 D
)D E
;E F
} ÷
|D:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\IInstructorCommentRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface (
IInstructorCommentRepository -
:. /
IRepository0 ;
<; <
InstructorComment< M
>M N
{ 
void 
Update	 
( 
InstructorComment !
instructorComment" 3
)3 4
;4 5
void 
UpdateRange	 
( 
IEnumerable  
<  !
InstructorComment! 2
>2 3
instructorComments4 F
)F G
;G H
}		 Ù
xD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\IEmailTemplateRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface $
IEmailTemplateRepository )
:* +
IRepository, 7
<7 8
EmailTemplate8 E
>E F
{ 
void 
Update	 
( 
EmailTemplate 
emailTemplate +
)+ ,
;, -
} ”
~D:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\ICourseVersionStatusRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface *
ICourseVersionStatusRepository /
:0 1
IRepository2 =
<= >
CourseVersionStatus> Q
>Q R
{ 
void 
Update	 
( 
CourseVersionStatus #
courseVersionStatus$ 7
)7 8
;8 9
void 
UpdateRange	 
( 
IEnumerable  
<  !
CourseVersionStatus! 4
>4 5 
courseVersionsStatus6 J
)J K
;K L
Task		 
<		 	
CourseVersionStatus			 
?		 
>		 +
GetCourseVersionStatusByIdAsync		 >
(		> ?
Guid		? C!
courseVersionStatusId		D Y
)		Y Z
;		Z [
}

 ´

xD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\ICourseVersionRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface $
ICourseVersionRepository )
:* +
IRepository, 7
<7 8
CourseVersion8 E
>E F
{ 
void 
Update	 
( 
CourseVersion 
courseVersion +
)+ ,
;, -
void 
UpdateRange	 
( 
IEnumerable  
<  !
CourseVersion! .
>. /
courseVersions0 >
)> ?
;? @
Task		 
<		 	
CourseVersion			 
?		 
>		 !
GetCourseVersionAsync		 .
(		. /
Guid		/ 3
courseVersionId		4 C
,		C D
bool		E I
?		I J
asNoTracking		K W
)		W X
;		X Y
Task

 
<

 	
int

	 
>

 '
GetTotalCourseVersionsAsync

 )
(

) *
Guid

* .
?

. /
courseId

0 8
)

8 9
;

9 :
} ÿ
D:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\ICourseVersionCommentRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface +
ICourseVersionCommentRepository 0
:1 2
IRepository3 >
<> ? 
CourseVersionComment? S
>S T
{ 
void 
Update	 
(  
CourseVersionComment $ 
courseVersionComment% 9
)9 :
;: ;
void 
UpdateRange	 
( 
IEnumerable  
<  ! 
CourseVersionComment! 5
>5 6!
courseVersionComments7 L
)L M
;M N
Task		 
<		 	 
CourseVersionComment			 
?		 
>		 '
GetCourseVersionCommentById		  ;
(		; <
Guid		< @"
courseversioncommentId		A W
)		W X
;		X Y
}

 ‹	
D:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\ICourseSectionVersionRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface +
ICourseSectionVersionRepository 0
:1 2
IRepository3 >
<> ? 
CourseSectionVersion? S
>S T
{ 
void 
Update	 
(  
CourseSectionVersion $ 
courseSectionVersion% 9
)9 :
;: ;
void 
UpdateRange	 
( 
IEnumerable  
<  ! 
CourseSectionVersion! 5
>5 6!
courseSectionVersions7 L
)L M
;M N
Task		 
<		 	
List			 
<		  
CourseSectionVersion		 "
>		" #
?		# $
>		$ %8
,GetCourseSectionVersionsOfCourseVersionAsync		& R
(		R S
Guid		S W
courseVersionId		X g
,		g h
bool		i m
?		m n
asNoTracking		o {
)		{ |
;		| }
}

 ö
qD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\ICourseRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
{		 
public

 

	interface

 
ICourseRepository

 &
:

' (
IRepository

) 4
<

4 5
Course

5 ;
>

; <
{ 
void 
Update 
( 
Course 
course !
)! "
;" #
void 
UpdateRange 
( 
IEnumerable $
<$ %
Course% +
>+ ,
courses- 4
)4 5
;5 6
} 
} œ
sD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\ICategoryRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface 
ICategoryRepository $
:$ %
IRepository& 1
<1 2
Category2 :
>: ;
{ 
void 
Update	 
( 
Category 
category !
)! "
;" #
void 
UpdateRange	 
( 
IEnumerable  
<  !
Category! )
>) *

categories+ 5
)5 6
;6 7
Task		 
<		 	
Category			 
>		  
GetCategoryByIdAsync		 '
(		' (
Guid		( ,
id		- /
)		/ 0
;		0 1
}

 –0
pD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Context\ApplicationDbContext.cs
	namespace		 	
Cursus		
 
.		 
LMS		 
.		 

DataAccess		 
.		  
Context		  '
;		' (
public 
class  
ApplicationDbContext !
:" #
IdentityDbContext$ 5
<5 6
ApplicationUser6 E
>E F
{ 
public 
 
ApplicationDbContext 
(  
DbContextOptions  0
<0 1 
ApplicationDbContext1 E
>E F
optionsG N
)N O
:P Q
baseR V
(V W
optionsW ^
)^ _
{ 
} 
	protected 
override 
void 
OnModelCreating +
(+ ,
ModelBuilder, 8
modelBuilder9 E
)E F
{ 
base 
. 
OnModelCreating 
( 
modelBuilder )
)) *
;* +$
ApplicationDbContextSeed  
.  !
SeedAdminAccount! 1
(1 2
modelBuilder2 >
)> ?
;? @$
ApplicationDbContextSeed  
.  !
SeedEmailTemplate! 2
(2 3
modelBuilder3 ?
)? @
;@ A
} 
public 

DbSet 
< 
ApplicationUser  
>  !
ApplicationUsers" 2
{3 4
get5 8
;8 9
set: =
;= >
}? @
public 

DbSet 
< 
CartDetails 
> 
CartDetails )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 

DbSet 
< 

CartHeader 
> 
CartHeaders (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 

DbSet 
< 
Category 
> 

Categories %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 

DbSet 
< 
Course 
> 
Courses  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 

DbSet 
< 
CourseReport 
> 
CourseReports ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
public 

DbSet 
< 
CourseReview 
> 
CourseReviews ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
public   

DbSet   
<   

Instructor   
>   
Instructors   (
{  ) *
get  + .
;  . /
set  0 3
;  3 4
}  5 6
public!! 

DbSet!! 
<!! 
Level!! 
>!! 
Levels!! 
{!!  
get!!! $
;!!$ %
set!!& )
;!!) *
}!!+ ,
public"" 

DbSet"" 
<"" 
OrderDetails"" 
>"" 
OrderDetails"" +
{"", -
get"". 1
;""1 2
set""3 6
;""6 7
}""8 9
public## 

DbSet## 
<## 
OrderHeader## 
>## 
OrderHeaders## *
{##+ ,
get##- 0
;##0 1
set##2 5
;##5 6
}##7 8
public$$ 

DbSet$$ 
<$$ 
Student$$ 
>$$ 
Students$$ "
{$$# $
get$$% (
;$$( )
set$$* -
;$$- .
}$$/ 0
public%% 

DbSet%% 
<%% 
StudentCourse%% 
>%% 
StudentCourses%%  .
{%%/ 0
get%%1 4
;%%4 5
set%%6 9
;%%9 :
}%%; <
public&& 

DbSet&& 
<&& 
PaymentCard&& 
>&& 
PaymentCards&& *
{&&+ ,
get&&- 0
;&&0 1
set&&2 5
;&&5 6
}&&7 8
public'' 

DbSet'' 
<'' 
InstructorComment'' "
>''" #
InstructorComments''$ 6
{''7 8
get''9 <
;''< =
set''> A
;''A B
}''C D
public(( 

DbSet(( 
<(( 
InstructorRating(( !
>((! "
InstructorRatings((# 4
{((5 6
get((7 :
;((: ;
set((< ?
;((? @
}((A B
public)) 

DbSet)) 
<)) 
EmailTemplate)) 
>)) 
EmailTemplates))  .
{))/ 0
get))1 4
;))4 5
set))6 9
;))9 :
})); <
public** 

DbSet** 
<** 
CourseVersion** 
>** 
CourseVersions**  .
{**/ 0
get**1 4
;**4 5
set**6 9
;**9 :
}**; <
public++ 

DbSet++ 
<++  
CourseSectionVersion++ %
>++% &!
CourseSectionVersions++' <
{++= >
get++? B
;++B C
set++D G
;++G H
}++I J
public,, 

DbSet,, 
<,, !
SectionDetailsVersion,, &
>,,& '"
SectionDetailsVersions,,( >
{,,? @
get,,A D
;,,D E
set,,F I
;,,I J
},,K L
public-- 

DbSet-- 
<-- 
CourseVersionStatus-- $
>--$ %
CourseVersionStatus--& 9
{--: ;
get--< ?
;--? @
set--A D
;--D E
}--F G
public.. 

DbSet.. 
<..  
CourseVersionComment.. %
>..% &!
CourseVersionComments..' <
{..= >
get..? B
;..B C
set..D G
;..G H
}..I J
}// 